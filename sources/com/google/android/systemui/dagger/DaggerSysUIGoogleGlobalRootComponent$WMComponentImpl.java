package com.google.android.systemui.dagger;

import android.app.ActivityManager;
import android.app.ActivityTaskManager;
import android.app.AlarmManager;
import android.app.DreamManager;
import android.app.IActivityManager;
import android.app.IActivityTaskManager;
import android.app.INotificationManager;
import android.app.IUriGrantsManager;
import android.app.IWallpaperManager;
import android.app.KeyguardManager;
import android.app.NotificationManager;
import android.app.StatsManager;
import android.app.StatusBarManager;
import android.app.UiModeManager;
import android.app.WallpaperManager;
import android.app.admin.DevicePolicyManager;
import android.app.backup.BackupManager;
import android.app.job.JobScheduler;
import android.app.role.RoleManager;
import android.app.smartspace.SmartspaceManager;
import android.app.trust.TrustManager;
import android.app.usage.UsageStatsManager;
import android.bluetooth.BluetoothAdapter;
import android.companion.virtual.VirtualDeviceManager;
import android.content.ComponentName;
import android.content.ContentResolver;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.om.OverlayManager;
import android.content.pm.LauncherApps;
import android.content.pm.PackageInstaller;
import android.content.pm.PackageManager;
import android.content.pm.ShortcutManager;
import android.content.pm.UserInfo;
import android.content.res.Resources;
import android.graphics.Paint;
import android.hardware.Sensor;
import android.hardware.SensorManager;
import android.hardware.SensorPrivacyManager;
import android.hardware.biometrics.BiometricManager;
import android.hardware.biometrics.BiometricSourceType;
import android.hardware.camera2.CameraManager;
import android.hardware.devicestate.DeviceStateManager;
import android.hardware.display.AmbientDisplayConfiguration;
import android.hardware.display.ColorDisplayManager;
import android.hardware.display.DisplayManager;
import android.hardware.face.FaceManager;
import android.hardware.fingerprint.FingerprintManager;
import android.hardware.input.InputManager;
import android.location.LocationManager;
import android.media.AudioManager;
import android.media.IAudioService;
import android.media.projection.IMediaProjectionManager;
import android.media.projection.MediaProjectionManager;
import android.media.session.MediaSessionManager;
import android.net.ConnectivityManager;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.IThermalService;
import android.os.Looper;
import android.os.PowerManager;
import android.os.ServiceManager;
import android.os.SystemProperties;
import android.os.UserHandle;
import android.os.UserManager;
import android.os.Vibrator;
import android.os.storage.StorageManager;
import android.permission.PermissionManager;
import android.safetycenter.SafetyCenterManager;
import android.service.dreams.IDreamManager;
import android.service.notification.NotificationListenerService;
import android.service.quickaccesswallet.QuickAccessWalletClient;
import android.service.vr.IVrManager;
import android.telecom.TelecomManager;
import android.telephony.CarrierConfigManager;
import android.telephony.SubscriptionManager;
import android.telephony.TelephonyManager;
import android.telephony.euicc.EuiccManager;
import android.text.TextUtils;
import android.util.ArraySet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Choreographer;
import android.view.CrossWindowBlurListeners;
import android.view.IWindowManager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.accessibility.AccessibilityManager;
import android.view.accessibility.IAccessibilityManager;
import android.view.inputmethod.InputMethodManager;
import android.window.DisplayAreaOrganizer;
import android.window.SystemPerformanceHinter;
import android.window.flags.DesktopModeFlags;
import androidx.compose.foundation.text.input.internal.AndroidLegacyPlatformTextInputServiceAdapter$startInput$2$1$1$$ExternalSyntheticOutline0;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.app.NotificationManagerCompat;
import androidx.slice.SliceViewManagerWrapper;
import com.android.app.viewcapture.ViewCaptureAwareWindowManager;
import com.android.app.viewcapture.data.ViewNode;
import com.android.compose.animation.scene.SceneKey;
import com.android.dream.lowlight.LowLightTransitionCoordinator;
import com.android.internal.app.AssistUtils;
import com.android.internal.app.IBatteryStats;
import com.android.internal.jank.InteractionJankMonitor;
import com.android.internal.logging.MetricsLogger;
import com.android.internal.logging.UiEventLogger;
import com.android.internal.protolog.ProtoLogImpl_411527699;
import com.android.internal.statusbar.IStatusBarService;
import com.android.internal.util.EmergencyAffordanceManager;
import com.android.internal.util.LatencyTracker;
import com.android.internal.util.NotificationMessagingUtil;
import com.android.internal.widget.LockPatternUtils;
import com.android.keyguard.ActiveUnlockConfig;
import com.android.keyguard.ClockEventController;
import com.android.keyguard.EmptyLockIconViewController;
import com.android.keyguard.KeyguardBiometricLockoutLogger;
import com.android.keyguard.KeyguardDisplayManager;
import com.android.keyguard.KeyguardMessageAreaController;
import com.android.keyguard.KeyguardSecurityModel;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.KeyguardUpdateMonitor_Factory;
import com.android.keyguard.LegacyLockIconViewController;
import com.android.keyguard.LockIconViewController;
import com.android.keyguard.dagger.ClockRegistryModule_GetClockRegistryFactory;
import com.android.keyguard.domain.interactor.KeyguardKeyboardInteractor;
import com.android.keyguard.logging.BiometricUnlockLogger;
import com.android.keyguard.logging.DeviceEntryIconLogger;
import com.android.keyguard.logging.KeyguardLogger;
import com.android.keyguard.logging.KeyguardQuickAffordancesLogger;
import com.android.keyguard.logging.KeyguardUpdateMonitorLogger;
import com.android.keyguard.logging.ScrimLogger;
import com.android.keyguard.logging.TrustRepositoryLogger;
import com.android.keyguard.mediator.ScreenOnCoordinator;
import com.android.launcher3.icons.IconProvider;
import com.android.settingslib.bluetooth.LocalBluetoothAdapter;
import com.android.settingslib.bluetooth.LocalBluetoothManager;
import com.android.settingslib.devicestate.AndroidSecureSettings;
import com.android.settingslib.devicestate.DeviceStateRotationLockSettingsManager;
import com.android.settingslib.notification.data.repository.ZenModeRepositoryImpl;
import com.android.settingslib.notification.domain.interactor.NotificationsSoundPolicyInteractor;
import com.android.settingslib.notification.modes.ZenIconLoader;
import com.android.settingslib.notification.modes.ZenModesBackend;
import com.android.settingslib.users.CreateUserDialogController;
import com.android.settingslib.volume.data.repository.AudioRepository;
import com.android.settingslib.volume.data.repository.AudioSharingRepositoryEmptyImpl;
import com.android.settingslib.volume.data.repository.MediaControllerRepositoryImpl;
import com.android.settingslib.volume.domain.interactor.AudioModeInteractor;
import com.android.settingslib.volume.domain.interactor.AudioVolumeInteractor;
import com.android.settingslib.volume.shared.AudioManagerEventsReceiverImpl;
import com.android.systemui.ActivityIntentHelper;
import com.android.systemui.BootCompleteCacheImpl;
import com.android.systemui.CameraProtectionLoaderImpl;
import com.android.systemui.CoreStartable;
import com.android.systemui.Dependency;
import com.android.systemui.ForegroundServicesDialog;
import com.android.systemui.GuestResetOrExitSessionReceiver;
import com.android.systemui.GuestResumeSessionReceiver;
import com.android.systemui.InitController;
import com.android.systemui.LatencyTester;
import com.android.systemui.Prefs;
import com.android.systemui.ScreenDecorations;
import com.android.systemui.SliceBroadcastRelayHandler;
import com.android.systemui.SysUICutoutProvider;
import com.android.systemui.SystemUISecondaryUserService;
import com.android.systemui.SystemUIService;
import com.android.systemui.UiOffloadThread;
import com.android.systemui.accessibility.AccessibilityButtonModeObserver;
import com.android.systemui.accessibility.AccessibilityButtonTargetsObserver;
import com.android.systemui.accessibility.AccessibilityGestureTargetsObserver;
import com.android.systemui.accessibility.AccessibilityLogger;
import com.android.systemui.accessibility.MagnificationImpl;
import com.android.systemui.accessibility.ModeSwitchesController;
import com.android.systemui.accessibility.SystemActions;
import com.android.systemui.accessibility.data.repository.AccessibilityRepositoryImpl;
import com.android.systemui.accessibility.data.repository.CaptioningRepositoryImpl;
import com.android.systemui.accessibility.data.repository.ColorCorrectionRepositoryImpl;
import com.android.systemui.accessibility.data.repository.ColorInversionRepositoryImpl;
import com.android.systemui.accessibility.data.repository.OneHandedModeRepositoryImpl;
import com.android.systemui.accessibility.domain.interactor.AccessibilityInteractor;
import com.android.systemui.accessibility.domain.interactor.CaptioningInteractor;
import com.android.systemui.accessibility.extradim.ExtraDimDialogDelegate;
import com.android.systemui.accessibility.extradim.ExtraDimDialogManager;
import com.android.systemui.accessibility.extradim.ExtraDimDialogReceiver;
import com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController;
import com.android.systemui.accessibility.fontscaling.FontScalingDialogDelegate;
import com.android.systemui.accessibility.hearingaid.HearingDevicesChecker;
import com.android.systemui.accessibility.hearingaid.HearingDevicesDialogManager;
import com.android.systemui.accessibility.hearingaid.HearingDevicesDialogReceiver;
import com.android.systemui.accessibility.hearingaid.HearingDevicesUiEventLogger;
import com.android.systemui.accessibility.qs.QSAccessibilityModule_Companion_ProvideColorCorrectionTileViewModelFactory;
import com.android.systemui.accessibility.qs.QSAccessibilityModule_Companion_ProvideColorInversionTileViewModelFactory;
import com.android.systemui.ambient.touch.scrim.BouncerlessScrimController;
import com.android.systemui.ambient.touch.scrim.ScrimManager;
import com.android.systemui.animation.ActivityTransitionAnimator;
import com.android.systemui.animation.DialogTransitionAnimator;
import com.android.systemui.appops.AppOpsController;
import com.android.systemui.appops.AppOpsControllerImpl;
import com.android.systemui.assist.AssistLogger;
import com.android.systemui.assist.PhoneStateMonitor;
import com.android.systemui.assist.data.repository.AssistRepository;
import com.android.systemui.assist.domain.interactor.AssistInteractor;
import com.android.systemui.assist.ui.DefaultUiController;
import com.android.systemui.authentication.AuthenticationModule$getSecurityMode$1;
import com.android.systemui.authentication.data.repository.AuthenticationRepositoryImpl;
import com.android.systemui.authentication.domain.interactor.AuthenticationInteractor;
import com.android.systemui.back.domain.interactor.BackActionInteractor;
import com.android.systemui.battery.BatteryMeterView;
import com.android.systemui.battery.BatteryMeterViewController;
import com.android.systemui.biometrics.AuthController;
import com.android.systemui.biometrics.AuthRippleController;
import com.android.systemui.biometrics.AuthRippleView;
import com.android.systemui.biometrics.BiometricNotificationBroadcastReceiver;
import com.android.systemui.biometrics.BiometricNotificationBroadcastReceiver_Factory;
import com.android.systemui.biometrics.BiometricNotificationDialogFactory;
import com.android.systemui.biometrics.BiometricNotificationDialogFactory_Factory;
import com.android.systemui.biometrics.BiometricNotificationService;
import com.android.systemui.biometrics.FaceAuthAccessibilityDelegate;
import com.android.systemui.biometrics.FaceHelpMessageDeferralFactory;
import com.android.systemui.biometrics.FingerprintReEnrollNotification;
import com.android.systemui.biometrics.UdfpsController;
import com.android.systemui.biometrics.UdfpsHapticsSimulator;
import com.android.systemui.biometrics.UdfpsKeyguardAccessibilityDelegate;
import com.android.systemui.biometrics.UdfpsLogger;
import com.android.systemui.biometrics.UdfpsShell;
import com.android.systemui.biometrics.UdfpsUtils;
import com.android.systemui.biometrics.dagger.BiometricsModule_Companion_ProvidesOverlapDetectorFactory;
import com.android.systemui.biometrics.dagger.BiometricsModule_ProvidesPluginExecutorFactory;
import com.android.systemui.biometrics.data.repository.BiometricStatusRepositoryImpl;
import com.android.systemui.biometrics.data.repository.DisplayStateRepository;
import com.android.systemui.biometrics.data.repository.DisplayStateRepositoryImpl;
import com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl;
import com.android.systemui.biometrics.data.repository.FaceSettingsRepositoryImpl;
import com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository;
import com.android.systemui.biometrics.data.repository.FingerprintPropertyRepositoryImpl;
import com.android.systemui.biometrics.data.repository.PromptRepositoryImpl;
import com.android.systemui.biometrics.domain.interactor.BiometricStatusInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.CredentialInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.DisplayStateInteractor;
import com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.FingerprintPropertyInteractor;
import com.android.systemui.biometrics.domain.interactor.LogContextInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.PromptCredentialInteractor;
import com.android.systemui.biometrics.domain.interactor.PromptSelectorInteractor;
import com.android.systemui.biometrics.domain.interactor.PromptSelectorInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.SideFpsSensorInteractor;
import com.android.systemui.biometrics.domain.interactor.UdfpsOverlayInteractor;
import com.android.systemui.biometrics.udfps.OverlapDetector;
import com.android.systemui.biometrics.udfps.SinglePointerTouchProcessor;
import com.android.systemui.biometrics.ui.binder.SideFpsOverlayViewBinder;
import com.android.systemui.biometrics.ui.viewmodel.CredentialViewModel;
import com.android.systemui.biometrics.ui.viewmodel.DefaultUdfpsTouchOverlayViewModel;
import com.android.systemui.biometrics.ui.viewmodel.DeviceEntryUdfpsTouchOverlayViewModel;
import com.android.systemui.biometrics.ui.viewmodel.PromptViewModel;
import com.android.systemui.bluetooth.BluetoothLogger;
import com.android.systemui.bluetooth.BroadcastDialogController;
import com.android.systemui.bluetooth.qsdialog.BluetoothAutoOnInteractor;
import com.android.systemui.bluetooth.qsdialog.BluetoothAutoOnRepository;
import com.android.systemui.bluetooth.qsdialog.BluetoothDeviceMetadataInteractor;
import com.android.systemui.bluetooth.qsdialog.BluetoothStateInteractor;
import com.android.systemui.bluetooth.qsdialog.BluetoothTileDialogLogger;
import com.android.systemui.bluetooth.qsdialog.BluetoothTileDialogRepository;
import com.android.systemui.bluetooth.qsdialog.BluetoothTileDialogViewModel;
import com.android.systemui.bluetooth.qsdialog.DeviceItemActionInteractor;
import com.android.systemui.bluetooth.qsdialog.DeviceItemInteractor;
import com.android.systemui.bouncer.data.repository.BouncerMessageRepositoryImpl;
import com.android.systemui.bouncer.data.repository.BouncerRepository;
import com.android.systemui.bouncer.data.repository.EmergencyServicesRepository;
import com.android.systemui.bouncer.data.repository.KeyguardBouncerRepositoryImpl;
import com.android.systemui.bouncer.data.repository.SimBouncerRepositoryImpl;
import com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor;
import com.android.systemui.bouncer.domain.interactor.BouncerActionButtonInteractor;
import com.android.systemui.bouncer.domain.interactor.BouncerInteractor;
import com.android.systemui.bouncer.domain.interactor.BouncerInteractorModule$emergencyDialerIntentFactory$1;
import com.android.systemui.bouncer.domain.interactor.BouncerInteractorModule_EmergencyAffordanceManagerFactory;
import com.android.systemui.bouncer.domain.interactor.BouncerMessageInteractor;
import com.android.systemui.bouncer.domain.interactor.CountDownTimerUtil;
import com.android.systemui.bouncer.domain.interactor.PrimaryBouncerCallbackInteractor;
import com.android.systemui.bouncer.domain.interactor.PrimaryBouncerInteractor;
import com.android.systemui.bouncer.domain.interactor.SimBouncerInteractor;
import com.android.systemui.bouncer.ui.BouncerViewImpl;
import com.android.systemui.bouncer.ui.BouncerViewModule$Companion$bouncerDialogFactory$1;
import com.android.systemui.bouncer.ui.binder.BouncerViewBinder;
import com.android.systemui.bouncer.ui.binder.ComposeBouncerDependencies;
import com.android.systemui.bouncer.ui.binder.LegacyBouncerDependencies;
import com.android.systemui.bouncer.ui.composable.BouncerScene;
import com.android.systemui.bouncer.ui.viewmodel.KeyguardBouncerViewModel;
import com.android.systemui.brightness.data.repository.BrightnessPolicyRepositoryImpl;
import com.android.systemui.brightness.data.repository.ScreenBrightnessDisplayManagerRepository;
import com.android.systemui.brightness.domain.interactor.BrightnessPolicyEnforcementInteractor;
import com.android.systemui.brightness.domain.interactor.ScreenBrightnessInteractor;
import com.android.systemui.brightness.ui.viewmodel.BrightnessSliderViewModel;
import com.android.systemui.broadcast.BroadcastDispatcher;
import com.android.systemui.broadcast.BroadcastDispatcherStartable;
import com.android.systemui.broadcast.BroadcastSender;
import com.android.systemui.broadcast.logging.BroadcastDispatcherLogger;
import com.android.systemui.camera.CameraGestureHelper;
import com.android.systemui.camera.CameraIntentsWrapper;
import com.android.systemui.camera.data.repository.CameraAutoRotateRepositoryImpl;
import com.android.systemui.camera.data.repository.CameraSensorPrivacyRepositoryImpl;
import com.android.systemui.charging.WiredChargingRippleController;
import com.android.systemui.classifier.BrightLineFalsingManager;
import com.android.systemui.classifier.DoubleTapClassifier;
import com.android.systemui.classifier.FalsingCollector;
import com.android.systemui.classifier.FalsingCollectorImpl_Factory;
import com.android.systemui.classifier.FalsingCollectorNoOp;
import com.android.systemui.classifier.FalsingCoreStartable;
import com.android.systemui.classifier.FalsingDataProvider;
import com.android.systemui.classifier.FalsingManagerProxy;
import com.android.systemui.classifier.FalsingModule_ProvidesFalsingCollectorLegacyFactory;
import com.android.systemui.classifier.HistoryTracker;
import com.android.systemui.classifier.LongTapClassifier;
import com.android.systemui.classifier.SingleTapClassifier;
import com.android.systemui.classifier.domain.interactor.FalsingInteractor;
import com.android.systemui.clipboardoverlay.ClipboardImageLoader;
import com.android.systemui.clipboardoverlay.ClipboardListener_Factory;
import com.android.systemui.clipboardoverlay.ClipboardOverlayController_Factory;
import com.android.systemui.clipboardoverlay.ClipboardOverlayUtils;
import com.android.systemui.clipboardoverlay.ClipboardOverlayView;
import com.android.systemui.clipboardoverlay.ClipboardOverlayWindow;
import com.android.systemui.clipboardoverlay.ClipboardToast;
import com.android.systemui.clipboardoverlay.ClipboardTransitionExecutor;
import com.android.systemui.colorextraction.SysuiColorExtractor;
import com.android.systemui.common.data.repository.PackageChangeRepository;
import com.android.systemui.common.data.repository.PackageChangeRepositoryImpl;
import com.android.systemui.common.data.repository.PackageInstallerMonitor;
import com.android.systemui.common.data.repository.PackageUpdateLogger;
import com.android.systemui.common.domain.interactor.PackageChangeInteractor;
import com.android.systemui.common.ui.ConfigurationState;
import com.android.systemui.common.ui.ConfigurationStateModule_Companion_ProvideGlobalConfigurationStateFactory;
import com.android.systemui.common.ui.data.repository.ConfigurationRepository;
import com.android.systemui.common.ui.data.repository.ConfigurationRepositoryImpl;
import com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor;
import com.android.systemui.common.usagestats.data.repository.UsageStatsRepositoryImpl;
import com.android.systemui.common.usagestats.domain.UsageStatsInteractor;
import com.android.systemui.communal.CommunalBackupRestoreStartable;
import com.android.systemui.communal.CommunalDreamStartable;
import com.android.systemui.communal.CommunalMetricsStartable;
import com.android.systemui.communal.CommunalOngoingContentStartable;
import com.android.systemui.communal.CommunalSceneStartable;
import com.android.systemui.communal.data.backup.CommunalBackupUtils;
import com.android.systemui.communal.data.db.CommunalDatabase;
import com.android.systemui.communal.data.db.CommunalWidgetDao_Impl;
import com.android.systemui.communal.data.db.DefaultWidgetPopulation;
import com.android.systemui.communal.data.repository.CommunalMediaRepositoryImpl;
import com.android.systemui.communal.data.repository.CommunalPrefsRepositoryImpl;
import com.android.systemui.communal.data.repository.CommunalSceneRepositoryImpl;
import com.android.systemui.communal.data.repository.CommunalSceneTransitionRepository;
import com.android.systemui.communal.data.repository.CommunalSettingsRepositoryImpl;
import com.android.systemui.communal.data.repository.CommunalSmartspaceRepositoryImpl;
import com.android.systemui.communal.data.repository.CommunalTutorialDisabledRepositoryImpl;
import com.android.systemui.communal.data.repository.CommunalWidgetRepositoryImpl;
import com.android.systemui.communal.domain.interactor.CommunalInteractor;
import com.android.systemui.communal.domain.interactor.CommunalPrefsInteractor;
import com.android.systemui.communal.domain.interactor.CommunalSceneInteractor;
import com.android.systemui.communal.domain.interactor.CommunalSceneTransitionInteractor;
import com.android.systemui.communal.domain.interactor.CommunalSettingsInteractor;
import com.android.systemui.communal.domain.interactor.CommunalTutorialInteractor;
import com.android.systemui.communal.domain.interactor.WidgetTrampolineInteractor;
import com.android.systemui.communal.log.CommunalLoggerStartable;
import com.android.systemui.communal.shared.log.CommunalMetricsLogger;
import com.android.systemui.communal.shared.log.CommunalSceneLogger;
import com.android.systemui.communal.shared.log.CommunalStatsLogProxyImpl;
import com.android.systemui.communal.shared.model.CommunalScenes;
import com.android.systemui.communal.smartspace.CommunalSmartspaceController;
import com.android.systemui.communal.ui.compose.CommunalContent;
import com.android.systemui.communal.ui.compose.CommunalScene;
import com.android.systemui.communal.ui.view.layout.sections.CommunalTutorialIndicatorSection;
import com.android.systemui.communal.ui.viewmodel.CommunalEditModeViewModel;
import com.android.systemui.communal.ui.viewmodel.CommunalTransitionViewModel;
import com.android.systemui.communal.ui.viewmodel.CommunalTutorialIndicatorViewModel;
import com.android.systemui.communal.ui.viewmodel.CommunalViewModel;
import com.android.systemui.communal.util.CommunalColors;
import com.android.systemui.communal.util.CommunalColorsImpl;
import com.android.systemui.communal.widgets.CommunalAppWidgetHost;
import com.android.systemui.communal.widgets.CommunalAppWidgetHostStartable;
import com.android.systemui.communal.widgets.CommunalWidgetHost;
import com.android.systemui.communal.widgets.EditWidgetsActivity;
import com.android.systemui.communal.widgets.EditWidgetsActivityStarterImpl;
import com.android.systemui.communal.widgets.WidgetConfigurationController;
import com.android.systemui.communal.widgets.WidgetInteractionHandler;
import com.android.systemui.complication.ComplicationLayoutEngine;
import com.android.systemui.controls.ControlsMetricsLoggerImpl;
import com.android.systemui.controls.CustomIconCache;
import com.android.systemui.controls.controller.ControlsBindingController;
import com.android.systemui.controls.controller.ControlsBindingControllerImpl;
import com.android.systemui.controls.controller.ControlsController;
import com.android.systemui.controls.controller.ControlsControllerImpl;
import com.android.systemui.controls.controller.ControlsTileResourceConfiguration;
import com.android.systemui.controls.dagger.ControlsComponent;
import com.android.systemui.controls.dagger.ControlsModule;
import com.android.systemui.controls.management.ControlsEditingActivity;
import com.android.systemui.controls.management.ControlsFavoritingActivity;
import com.android.systemui.controls.management.ControlsListingController;
import com.android.systemui.controls.management.ControlsListingControllerImpl;
import com.android.systemui.controls.management.ControlsProviderSelectorActivity;
import com.android.systemui.controls.management.ControlsRequestDialog;
import com.android.systemui.controls.panels.AuthorizedPanelsRepositoryImpl;
import com.android.systemui.controls.panels.SelectedComponentRepositoryImpl;
import com.android.systemui.controls.settings.ControlsSettingsDialogManager;
import com.android.systemui.controls.settings.ControlsSettingsDialogManagerImpl;
import com.android.systemui.controls.settings.ControlsSettingsRepository;
import com.android.systemui.controls.settings.ControlsSettingsRepositoryImpl;
import com.android.systemui.controls.start.ControlsStartable;
import com.android.systemui.controls.ui.ControlActionCoordinatorImpl;
import com.android.systemui.controls.ui.ControlsActivity;
import com.android.systemui.controls.ui.ControlsDialogsFactory;
import com.android.systemui.controls.ui.ControlsUiController;
import com.android.systemui.controls.ui.ControlsUiControllerImpl;
import com.android.systemui.dagger.CommonSystemUIUnfoldModule_Companion_SysUiUnfoldComponentFactory;
import com.android.systemui.dagger.ContextComponentResolver_Factory;
import com.android.systemui.dagger.NightDisplayListenerModule$Builder;
import com.android.systemui.dagger.SharedLibraryModule;
import com.android.systemui.dagger.SystemUIModule$$ExternalSyntheticLambda0;
import com.android.systemui.dagger.SystemUIModule_ProvideBubblesManagerFactory;
import com.android.systemui.dagger.SystemUIModule_ProvideSysUiStateFactory;
import com.android.systemui.dagger.SystemUIModule_ProvideSystemUserMonitorFactory;
import com.android.systemui.dagger.SystemUIModule_ProvidesSceneDataSourceDelegatorFactory;
import com.android.systemui.decor.FaceScanningProviderFactory;
import com.android.systemui.decor.PrivacyDotDecorProviderFactory;
import com.android.systemui.demomode.DemoModeController;
import com.android.systemui.demomode.dagger.DemoModeModule_ProvideDemoModeControllerFactory;
import com.android.systemui.deviceconfig.domain.interactor.DeviceConfigInteractor;
import com.android.systemui.deviceentry.DeviceEntryModule_Companion_ProvideLockIconViewControllerFactory;
import com.android.systemui.deviceentry.data.repository.DeviceEntryFaceAuthRepositoryImpl;
import com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl;
import com.android.systemui.deviceentry.data.repository.FaceWakeUpTriggersConfig;
import com.android.systemui.deviceentry.data.repository.FaceWakeUpTriggersConfigImpl;
import com.android.systemui.deviceentry.domain.interactor.AuthRippleInteractor;
import com.android.systemui.deviceentry.domain.interactor.BiometricMessageInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryBiometricAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryBiometricSettingsInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryBiometricsAllowedInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryFaceAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryFaceAuthStatusInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryFingerprintAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryHapticsInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntrySourceInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor;
import com.android.systemui.deviceentry.domain.interactor.FaceHelpMessageDeferralInteractor;
import com.android.systemui.deviceentry.domain.interactor.NoopDeviceEntryFaceAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.OccludingAppDeviceEntryInteractor;
import com.android.systemui.deviceentry.domain.interactor.SystemUIDeviceEntryFaceAuthInteractor;
import com.android.systemui.deviceentry.ui.viewmodel.AlternateBouncerUdfpsAccessibilityOverlayViewModel;
import com.android.systemui.display.data.repository.DisplayMetricsRepository;
import com.android.systemui.display.data.repository.DisplayRepository;
import com.android.systemui.display.data.repository.DisplayRepositoryImpl;
import com.android.systemui.display.domain.interactor.ConnectedDisplayInteractorImpl;
import com.android.systemui.dock.DockManager;
import com.android.systemui.doze.AlwaysOnDisplayPolicy;
import com.android.systemui.doze.DozeLog;
import com.android.systemui.doze.DozeLogger;
import com.android.systemui.doze.DozeService;
import com.android.systemui.doze.DozeTransitionListener;
import com.android.systemui.doze.util.BurnInHelperWrapper;
import com.android.systemui.dreams.AssistantAttentionMonitor;
import com.android.systemui.dreams.DreamMonitor;
import com.android.systemui.dreams.DreamOverlayCallbackController;
import com.android.systemui.dreams.DreamOverlayLifecycleOwner;
import com.android.systemui.dreams.DreamOverlayService;
import com.android.systemui.dreams.DreamOverlayStateController;
import com.android.systemui.dreams.DreamOverlayStatusBarItemsProvider;
import com.android.systemui.dreams.callbacks.AssistantAttentionCallback;
import com.android.systemui.dreams.callbacks.DreamStatusBarStateCallback;
import com.android.systemui.dreams.conditions.DreamCondition;
import com.android.systemui.dreams.dagger.DreamModule$$ExternalSyntheticLambda0;
import com.android.systemui.dreams.homecontrols.DreamServiceDelegateImpl;
import com.android.systemui.dreams.homecontrols.HomeControlsDreamService;
import com.android.systemui.dreams.homecontrols.HomeControlsDreamStartable;
import com.android.systemui.dreams.homecontrols.TaskFragmentComponent;
import com.android.systemui.dreams.homecontrols.domain.interactor.HomeControlsComponentInteractor;
import com.android.systemui.dreams.ui.viewmodel.DreamViewModel;
import com.android.systemui.dump.DumpHandler;
import com.android.systemui.dump.DumpManager;
import com.android.systemui.dump.LogBufferEulogizer;
import com.android.systemui.dump.LogBufferFreezer;
import com.android.systemui.dump.SystemUIAuxiliaryDumpService;
import com.android.systemui.dump.SystemUIConfigDumpable;
import com.android.systemui.education.dagger.ContextualEducationModule_Companion_ProvideEduDataStoreScopeFactory;
import com.android.systemui.education.dagger.NoOpCoreStartable;
import com.android.systemui.education.data.repository.ContextualEducationRepository;
import com.android.systemui.education.data.repository.UserContextualEducationRepository;
import com.android.systemui.education.domain.interactor.ContextualEducationInteractor;
import com.android.systemui.education.domain.interactor.KeyboardTouchpadEduInteractor;
import com.android.systemui.education.domain.interactor.KeyboardTouchpadEduStatsInteractorImpl;
import com.android.systemui.education.ui.view.ContextualEduUiCoordinator;
import com.android.systemui.education.ui.viewmodel.ContextualEduViewModel;
import com.android.systemui.emergency.EmergencyGestureModule$emergencyGestureIntentFactory$1;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.flags.FeatureFlagsClassic;
import com.android.systemui.flags.FeatureFlagsClassicRelease;
import com.android.systemui.flags.FeatureFlagsReleaseStartable;
import com.android.systemui.flags.FlagDependencies;
import com.android.systemui.flags.FlagDependenciesNotifier;
import com.android.systemui.flags.Flags;
import com.android.systemui.flags.FlagsCommonModule_ProvidesAllFlagsFactory;
import com.android.systemui.flags.RestartDozeListener;
import com.android.systemui.flags.ServerFlagReaderImpl;
import com.android.systemui.flags.ServerFlagReaderModule_BindsReaderFactory;
import com.android.systemui.flags.SystemPropertiesHelper;
import com.android.systemui.flags.UnreleasedFlag;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.globalactions.GlobalActionsComponent;
import com.android.systemui.globalactions.GlobalActionsDialogLite;
import com.android.systemui.globalactions.GlobalActionsImpl;
import com.android.systemui.globalactions.data.repository.GlobalActionsRepository;
import com.android.systemui.globalactions.domain.interactor.GlobalActionsInteractor;
import com.android.systemui.graphics.ImageLoader;
import com.android.systemui.haptics.msdl.dagger.MSDLModule_ProvideMSDLPlayerFactory;
import com.android.systemui.inputdevice.data.repository.InputDeviceRepository;
import com.android.systemui.inputdevice.data.repository.UserInputDeviceRepository;
import com.android.systemui.inputdevice.tutorial.data.repository.TutorialSchedulerRepository;
import com.android.systemui.inputdevice.tutorial.domain.interactor.KeyboardTouchpadConnectionInteractor;
import com.android.systemui.inputdevice.tutorial.ui.view.KeyboardTouchpadTutorialActivity;
import com.android.systemui.inputdevice.tutorial.ui.viewmodel.KeyboardTouchpadTutorialViewModel;
import com.android.systemui.inputmethod.data.repository.InputMethodRepositoryImpl;
import com.android.systemui.inputmethod.domain.interactor.InputMethodInteractor;
import com.android.systemui.keyboard.KeyboardUI;
import com.android.systemui.keyboard.PhysicalKeyboardCoreStartable;
import com.android.systemui.keyboard.backlight.domain.interactor.KeyboardBacklightInteractor;
import com.android.systemui.keyboard.backlight.ui.KeyboardBacklightDialogCoordinator;
import com.android.systemui.keyboard.backlight.ui.viewmodel.BacklightDialogViewModel;
import com.android.systemui.keyboard.data.repository.KeyboardRepositoryImpl;
import com.android.systemui.keyboard.docking.binder.KeyboardDockingIndicationViewBinder;
import com.android.systemui.keyboard.docking.domain.interactor.KeyboardDockingIndicationInteractor;
import com.android.systemui.keyboard.docking.ui.viewmodel.KeyboardDockingIndicationViewModel;
import com.android.systemui.keyboard.shortcut.NoOpStartable;
import com.android.systemui.keyboard.shortcut.data.repository.ShortcutHelperCategoriesRepository;
import com.android.systemui.keyboard.shortcut.data.repository.ShortcutHelperStateRepository;
import com.android.systemui.keyboard.shortcut.data.source.AppCategoriesShortcutsSource;
import com.android.systemui.keyboard.shortcut.data.source.CurrentAppShortcutsSource;
import com.android.systemui.keyboard.shortcut.data.source.InputShortcutsSource;
import com.android.systemui.keyboard.shortcut.data.source.MultitaskingShortcutsSource;
import com.android.systemui.keyboard.shortcut.data.source.SystemShortcutsSource;
import com.android.systemui.keyboard.shortcut.domain.interactor.ShortcutHelperCategoriesInteractor;
import com.android.systemui.keyboard.shortcut.domain.interactor.ShortcutHelperStateInteractor;
import com.android.systemui.keyboard.shortcut.ui.ShortcutHelperActivityStarter;
import com.android.systemui.keyboard.shortcut.ui.view.ShortcutHelperActivity;
import com.android.systemui.keyboard.stickykeys.StickyKeysLogger;
import com.android.systemui.keyboard.stickykeys.data.repository.StickyKeysRepositoryImpl;
import com.android.systemui.keyboard.stickykeys.ui.StickyKeyDialogFactory;
import com.android.systemui.keyboard.stickykeys.ui.StickyKeysIndicatorCoordinator;
import com.android.systemui.keyevent.data.repository.KeyEventRepositoryImpl;
import com.android.systemui.keyevent.domain.interactor.KeyEventInteractor;
import com.android.systemui.keyevent.domain.interactor.SysUIKeyEventHandler;
import com.android.systemui.keyguard.DismissCallbackRegistry;
import com.android.systemui.keyguard.KeyguardLifecyclesDispatcher;
import com.android.systemui.keyguard.KeyguardService;
import com.android.systemui.keyguard.KeyguardUnlockAnimationController;
import com.android.systemui.keyguard.KeyguardViewConfigurator;
import com.android.systemui.keyguard.KeyguardViewMediator;
import com.android.systemui.keyguard.ScreenLifecycle;
import com.android.systemui.keyguard.WakefulnessLifecycle;
import com.android.systemui.keyguard.WindowManagerLockscreenVisibilityManager;
import com.android.systemui.keyguard.WindowManagerOcclusionManager;
import com.android.systemui.keyguard.WorkLockActivity;
import com.android.systemui.keyguard.dagger.KeyguardModule_NewKeyguardViewMediatorFactory;
import com.android.systemui.keyguard.data.quickaffordance.CameraQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.DoNotDisturbQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.FlashlightQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.HomeControlsKeyguardQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLegacySettingSyncer;
import com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager;
import com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceRemoteUserSelectionManager;
import com.android.systemui.keyguard.data.quickaffordance.MuteQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.MuteQuickAffordanceCoreStartable;
import com.android.systemui.keyguard.data.quickaffordance.QrCodeScannerKeyguardQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.QuickAccessWalletKeyguardQuickAffordanceConfig;
import com.android.systemui.keyguard.data.quickaffordance.VideoCameraQuickAffordanceConfig;
import com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl;
import com.android.systemui.keyguard.data.repository.DeviceEntryFaceAuthModule_Companion_ProvideFaceAuthTableLogFactory;
import com.android.systemui.keyguard.data.repository.DeviceEntryFaceAuthModule_Companion_ProvideFaceDetectTableLogFactory;
import com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepository;
import com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepositoryImpl;
import com.android.systemui.keyguard.data.repository.DevicePostureRepositoryImpl;
import com.android.systemui.keyguard.data.repository.InWindowLauncherUnlockAnimationRepository;
import com.android.systemui.keyguard.data.repository.KeyguardBlueprintRepository;
import com.android.systemui.keyguard.data.repository.KeyguardClockRepositoryImpl;
import com.android.systemui.keyguard.data.repository.KeyguardOcclusionRepository;
import com.android.systemui.keyguard.data.repository.KeyguardQuickAffordanceRepository;
import com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl;
import com.android.systemui.keyguard.data.repository.KeyguardSmartspaceRepositoryImpl;
import com.android.systemui.keyguard.data.repository.KeyguardSurfaceBehindRepositoryImpl;
import com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl;
import com.android.systemui.keyguard.data.repository.LightRevealScrimRepository;
import com.android.systemui.keyguard.data.repository.LightRevealScrimRepositoryImpl;
import com.android.systemui.keyguard.data.repository.TrustRepositoryImpl;
import com.android.systemui.keyguard.domain.interactor.BiometricUnlockInteractor;
import com.android.systemui.keyguard.domain.interactor.BurnInInteractor;
import com.android.systemui.keyguard.domain.interactor.DeviceEntrySideFpsOverlayInteractor;
import com.android.systemui.keyguard.domain.interactor.DevicePostureInteractor;
import com.android.systemui.keyguard.domain.interactor.DozeInteractor;
import com.android.systemui.keyguard.domain.interactor.FromAlternateBouncerTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromAodTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromDozingTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromDreamingTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromGoneTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromLockscreenTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromOccludedTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromPrimaryBouncerTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.GlanceableHubTransitions;
import com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor;
import com.android.systemui.keyguard.domain.interactor.InternalKeyguardTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardBlueprintInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardBottomAreaInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardDismissActionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardDismissInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardDismissTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardEnabledInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardKeyEventInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardOcclusionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardQuickAffordanceInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardSmartspaceInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardStateCallbackInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardTouchHandlingInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardWakeDirectlyToGoneInteractor;
import com.android.systemui.keyguard.domain.interactor.LightRevealScrimInteractor;
import com.android.systemui.keyguard.domain.interactor.NaturalScrollingSettingObserver;
import com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor;
import com.android.systemui.keyguard.domain.interactor.ToAodFoldTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.TrustInteractor;
import com.android.systemui.keyguard.domain.interactor.WindowManagerLockscreenVisibilityInteractor;
import com.android.systemui.keyguard.shared.quickaffordance.KeyguardQuickAffordancesMetricsLoggerImpl;
import com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow;
import com.android.systemui.keyguard.ui.SwipeUpAnywhereGestureHandler;
import com.android.systemui.keyguard.ui.binder.AlternateBouncerViewBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardDismissActionBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardDismissBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardQuickAffordanceViewBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardSurfaceBehindParamsApplier;
import com.android.systemui.keyguard.ui.composable.LockscreenContent;
import com.android.systemui.keyguard.ui.composable.LockscreenScene;
import com.android.systemui.keyguard.ui.composable.blueprint.DefaultBlueprint;
import com.android.systemui.keyguard.ui.composable.section.BottomAreaSection;
import com.android.systemui.keyguard.ui.composable.section.NotificationSection;
import com.android.systemui.keyguard.ui.composable.section.StatusBarSection;
import com.android.systemui.keyguard.ui.preview.KeyguardRemotePreviewManager;
import com.android.systemui.keyguard.ui.view.InWindowLauncherUnlockAnimationManager;
import com.android.systemui.keyguard.ui.view.KeyguardRootView;
import com.android.systemui.keyguard.ui.view.layout.blueprints.DefaultKeyguardBlueprint;
import com.android.systemui.keyguard.ui.view.layout.blueprints.SplitShadeKeyguardBlueprint;
import com.android.systemui.keyguard.ui.view.layout.sections.AccessibilityActionsSection;
import com.android.systemui.keyguard.ui.view.layout.sections.AodBurnInSection;
import com.android.systemui.keyguard.ui.view.layout.sections.ClockSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultIndicationAreaSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultStatusBarSection;
import com.android.systemui.keyguard.ui.view.layout.sections.SmartspaceSection;
import com.android.systemui.keyguard.ui.view.layout.sections.SplitShadeGuidelines;
import com.android.systemui.keyguard.ui.view.layout.sections.SplitShadeMediaSection;
import com.android.systemui.keyguard.ui.view.layout.sections.SplitShadeNotificationStackScrollLayoutSection;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerDependencies;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerMessageAreaViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToOccludedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerUdfpsIconViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerWindowViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodAlphaViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodBurnInViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodToOccludedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.BouncerToGoneFlows;
import com.android.systemui.keyguard.ui.viewmodel.DeviceEntryBackgroundViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DeviceEntryForegroundViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DeviceEntryIconViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToOccludedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingHostedToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GlanceableHubToDreamingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GlanceableHubToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GlanceableHubToOccludedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToDreamingLockscreenHostedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToDreamingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.InWindowLauncherAnimationViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardBlueprintViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardBottomAreaViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardClockViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardIndicationAreaViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardQuickAffordancesCombinedViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardRootViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardSmartspaceViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardSurfaceBehindViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardTouchHandlingViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LightRevealScrimViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingHostedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToOccludedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenUserActionsViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToAlternateBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludingAppDeviceEntryMessageViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OffToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.ShadeDependentFlows;
import com.android.systemui.keyguard.ui.viewmodel.SideFpsProgressBarViewModel;
import com.android.systemui.keyguard.ui.viewmodel.WindowManagerLockscreenVisibilityViewModel;
import com.android.systemui.keyguard.util.IndicationHelper;
import com.android.systemui.log.BouncerLogger;
import com.android.systemui.log.FaceAuthenticationLogger;
import com.android.systemui.log.LogBuffer;
import com.android.systemui.log.LogBufferFactory;
import com.android.systemui.log.LogcatEchoTracker;
import com.android.systemui.log.ScreenDecorationsLogger;
import com.android.systemui.log.SessionTracker;
import com.android.systemui.log.SideFpsLogger;
import com.android.systemui.log.dagger.LogModule_ProvideBiometricLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideBouncerLogFactory;
import com.android.systemui.log.dagger.LogModule_ProvideBroadcastDispatcherLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideCollapsedSbFragmentLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideCommunalTouchLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDeviceEntryIconLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDisableFlagsRepositoryLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDozeLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDreamLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyboardLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardClockLogFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardLargeClockLogFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardMediaControllerLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardQuickAffordancesLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardSmallClockLogFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardTransitionAnimationLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardUpdateMonitorLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideLSShadeTransitionControllerBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideLogcatEchoTrackerFactory;
import com.android.systemui.log.dagger.LogModule_ProvideMediaCarouselControllerBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideMediaViewLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNearbyMediaDevicesLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationHeadsUpLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationInterruptLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationLockScreenLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationsLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQSConfigLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQSFragmentDisableLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQuickSettingsLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQuickSettingsTilesLogBufferCacheFactory;
import com.android.systemui.log.dagger.LogModule_ProvideSceneFrameworkLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideSensitiveNotificationProtectionLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideShadeLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideShadeWindowLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideSwipeUpLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideToastLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideVisualStabilityLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideVolumeLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideWakeLockLogFactory;
import com.android.systemui.log.echo.LogcatEchoTrackerDebug;
import com.android.systemui.log.table.TableLogBuffer;
import com.android.systemui.log.table.TableLogBufferFactory;
import com.android.systemui.media.RingtonePlayer;
import com.android.systemui.media.controls.data.repository.MediaDataRepository;
import com.android.systemui.media.controls.data.repository.MediaFilterRepository;
import com.android.systemui.media.controls.domain.pipeline.LegacyMediaDataFilterImpl;
import com.android.systemui.media.controls.domain.pipeline.LegacyMediaDataManagerImpl;
import com.android.systemui.media.controls.domain.pipeline.MediaDataCombineLatest;
import com.android.systemui.media.controls.domain.pipeline.MediaDataFilterImpl;
import com.android.systemui.media.controls.domain.pipeline.MediaDataLoader;
import com.android.systemui.media.controls.domain.pipeline.MediaDataManager;
import com.android.systemui.media.controls.domain.pipeline.MediaDataProcessor;
import com.android.systemui.media.controls.domain.pipeline.MediaDeviceManager;
import com.android.systemui.media.controls.domain.pipeline.MediaSessionBasedFilter;
import com.android.systemui.media.controls.domain.pipeline.MediaTimeoutListener;
import com.android.systemui.media.controls.domain.pipeline.MediaTimeoutLogger;
import com.android.systemui.media.controls.domain.pipeline.interactor.MediaCarouselInteractor;
import com.android.systemui.media.controls.domain.pipeline.interactor.MediaRecommendationsInteractor;
import com.android.systemui.media.controls.domain.resume.MediaBrowserFactory;
import com.android.systemui.media.controls.domain.resume.MediaResumeListener;
import com.android.systemui.media.controls.domain.resume.ResumeMediaBrowserFactory;
import com.android.systemui.media.controls.domain.resume.ResumeMediaBrowserLogger;
import com.android.systemui.media.controls.shared.MediaLogger;
import com.android.systemui.media.controls.shared.model.SmartspaceMediaDataProvider;
import com.android.systemui.media.controls.ui.controller.KeyguardMediaController;
import com.android.systemui.media.controls.ui.controller.KeyguardMediaControllerLogger;
import com.android.systemui.media.controls.ui.controller.MediaCarouselController;
import com.android.systemui.media.controls.ui.controller.MediaCarouselControllerLogger;
import com.android.systemui.media.controls.ui.controller.MediaControlPanel;
import com.android.systemui.media.controls.ui.controller.MediaHierarchyManager;
import com.android.systemui.media.controls.ui.controller.MediaHostStatesManager;
import com.android.systemui.media.controls.ui.controller.MediaViewController;
import com.android.systemui.media.controls.ui.controller.MediaViewLogger;
import com.android.systemui.media.controls.ui.view.MediaHost;
import com.android.systemui.media.controls.ui.viewmodel.MediaCarouselViewModel;
import com.android.systemui.media.controls.ui.viewmodel.MediaRecommendationsViewModel;
import com.android.systemui.media.controls.ui.viewmodel.SeekBarViewModel;
import com.android.systemui.media.controls.util.LocalMediaManagerFactory;
import com.android.systemui.media.controls.util.MediaControllerFactory;
import com.android.systemui.media.controls.util.MediaFeatureFlag;
import com.android.systemui.media.controls.util.MediaFlags;
import com.android.systemui.media.controls.util.MediaSessionLegacyHelperWrapper;
import com.android.systemui.media.controls.util.MediaSmartspaceLogger;
import com.android.systemui.media.controls.util.MediaUiEventLogger;
import com.android.systemui.media.dagger.MediaModule_ProvideMediaTttReceiverLogBufferFactory;
import com.android.systemui.media.dagger.MediaModule_ProvideMediaTttSenderLogBufferFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesCommunalMediaHostFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesKeyguardMediaHostFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesQSMediaHostFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesQuickQSMediaHostFactory;
import com.android.systemui.media.dialog.MediaOutputBroadcastDialogManager;
import com.android.systemui.media.dialog.MediaOutputDialogManager;
import com.android.systemui.media.dialog.MediaOutputDialogReceiver;
import com.android.systemui.media.dialog.MediaOutputSwitcherDialogUI;
import com.android.systemui.media.muteawait.MediaMuteAwaitConnectionManagerFactory;
import com.android.systemui.media.muteawait.MediaMuteAwaitLogger;
import com.android.systemui.media.nearby.NearbyMediaDevicesLogger;
import com.android.systemui.media.nearby.NearbyMediaDevicesManager;
import com.android.systemui.media.taptotransfer.MediaTttCommandLineHelper;
import com.android.systemui.media.taptotransfer.MediaTttFlags;
import com.android.systemui.media.taptotransfer.receiver.MediaTttChipControllerReceiver;
import com.android.systemui.media.taptotransfer.receiver.MediaTttReceiverLogger;
import com.android.systemui.media.taptotransfer.receiver.MediaTttReceiverUiEventLogger;
import com.android.systemui.media.taptotransfer.sender.MediaTttSenderCoordinator;
import com.android.systemui.media.taptotransfer.sender.MediaTttSenderLogger;
import com.android.systemui.media.taptotransfer.sender.MediaTttSenderUiEventLogger;
import com.android.systemui.mediaprojection.MediaProjectionMetricsLogger;
import com.android.systemui.mediaprojection.MediaProjectionModule_Companion_ProvideMediaProjectionLogBufferFactory;
import com.android.systemui.mediaprojection.MediaProjectionServiceHelper;
import com.android.systemui.mediaprojection.appselector.MediaProjectionAppSelectorActivity;
import com.android.systemui.mediaprojection.data.repository.MediaProjectionManagerRepository;
import com.android.systemui.mediaprojection.devicepolicy.ScreenCaptureDevicePolicyResolver;
import com.android.systemui.mediaprojection.devicepolicy.ScreenCaptureDisabledDialogDelegate;
import com.android.systemui.mediaprojection.permission.MediaProjectionPermissionActivity;
import com.android.systemui.mediaprojection.taskswitcher.MediaProjectionTaskSwitcherCoreStartable;
import com.android.systemui.mediaprojection.taskswitcher.data.repository.ActivityTaskManagerTasksRepository;
import com.android.systemui.mediaprojection.taskswitcher.domain.interactor.TaskSwitchInteractor;
import com.android.systemui.mediaprojection.taskswitcher.ui.TaskSwitcherNotificationCoordinator;
import com.android.systemui.mediaprojection.taskswitcher.ui.viewmodel.TaskSwitcherNotificationViewModel;
import com.android.systemui.mediarouter.MediaRouterModule_Companion_ProvideMediaRouterLogBufferFactory;
import com.android.systemui.mediarouter.data.repository.MediaRouterRepositoryImpl;
import com.android.systemui.model.SceneContainerPlugin;
import com.android.systemui.model.SysUiState;
import com.android.systemui.motiontool.MotionToolStartable;
import com.android.systemui.navigation.domain.interactor.NavigationInteractor;
import com.android.systemui.navigationbar.NavBarHelper;
import com.android.systemui.navigationbar.NavigationBarControllerImpl;
import com.android.systemui.navigationbar.NavigationModeController;
import com.android.systemui.navigationbar.TaskbarDelegate;
import com.android.systemui.navigationbar.gestural.EdgeBackGestureHandler;
import com.android.systemui.navigationbar.gestural.data.respository.GestureRepositoryImpl;
import com.android.systemui.navigationbar.views.NavigationBar;
import com.android.systemui.navigationbar.views.NavigationBarTransitions;
import com.android.systemui.notetask.LaunchNotesRoleSettingsTrampolineActivity;
import com.android.systemui.notetask.NoteTaskBubblesController;
import com.android.systemui.notetask.NoteTaskController;
import com.android.systemui.notetask.NoteTaskControllerUpdateService;
import com.android.systemui.notetask.NoteTaskEventLogger;
import com.android.systemui.notetask.NoteTaskInfoResolver;
import com.android.systemui.notetask.NoteTaskInitializer;
import com.android.systemui.notetask.shortcut.CreateNoteTaskShortcutActivity;
import com.android.systemui.notetask.shortcut.LaunchNoteTaskActivity;
import com.android.systemui.notifications.ui.composable.NotificationsShadeOverlay;
import com.android.systemui.notifications.ui.composable.NotificationsShadeSessionModule$provideShadeSession$1;
import com.android.systemui.people.PeopleSpaceActivity;
import com.android.systemui.people.data.repository.PeopleTileRepository;
import com.android.systemui.people.data.repository.PeopleTileRepositoryImpl;
import com.android.systemui.people.data.repository.PeopleWidgetRepository;
import com.android.systemui.people.data.repository.PeopleWidgetRepositoryImpl;
import com.android.systemui.people.ui.viewmodel.PeopleViewModel;
import com.android.systemui.people.widget.LaunchConversationActivity;
import com.android.systemui.people.widget.PeopleSpaceWidgetManager;
import com.android.systemui.people.widget.PeopleSpaceWidgetPinnedReceiver;
import com.android.systemui.people.widget.PeopleSpaceWidgetProvider;
import com.android.systemui.plugins.ActivityStarter;
import com.android.systemui.plugins.BcSmartspaceConfigPlugin;
import com.android.systemui.plugins.BcSmartspaceDataPlugin;
import com.android.systemui.plugins.DarkIconDispatcher;
import com.android.systemui.plugins.FalsingManager;
import com.android.systemui.plugins.GlobalActions;
import com.android.systemui.plugins.Plugin;
import com.android.systemui.plugins.PluginDependencyProvider;
import com.android.systemui.plugins.PluginListener;
import com.android.systemui.plugins.PluginManager;
import com.android.systemui.plugins.ToastPlugin;
import com.android.systemui.plugins.clocks.ClockMessageBuffers;
import com.android.systemui.plugins.qs.QSFactory;
import com.android.systemui.plugins.statusbar.StatusBarStateController;
import com.android.systemui.power.EnhancedEstimates;
import com.android.systemui.power.PowerUI;
import com.android.systemui.power.data.repository.PowerRepositoryImpl;
import com.android.systemui.power.domain.interactor.PowerInteractor;
import com.android.systemui.privacy.AppOpsPrivacyItemMonitor;
import com.android.systemui.privacy.OngoingPrivacyChip;
import com.android.systemui.privacy.PrivacyConfig;
import com.android.systemui.privacy.PrivacyDialogController;
import com.android.systemui.privacy.PrivacyDialogControllerKt;
import com.android.systemui.privacy.PrivacyDialogControllerV2;
import com.android.systemui.privacy.PrivacyItemController;
import com.android.systemui.privacy.PrivacyItemMonitor;
import com.android.systemui.privacy.logging.PrivacyLogger;
import com.android.systemui.process.ProcessWrapper;
import com.android.systemui.process.condition.SystemProcessCondition;
import com.android.systemui.qrcodescanner.controller.QRCodeScannerController;
import com.android.systemui.qs.FgsManagerController;
import com.android.systemui.qs.FgsManagerControllerImpl;
import com.android.systemui.qs.FooterActionsController;
import com.android.systemui.qs.HeaderPrivacyIconsController;
import com.android.systemui.qs.QSDisableFlagsLogger;
import com.android.systemui.qs.QSFragmentLegacy;
import com.android.systemui.qs.QSFragmentStartable;
import com.android.systemui.qs.QSHost;
import com.android.systemui.qs.QSHostAdapter;
import com.android.systemui.qs.QSImpl;
import com.android.systemui.qs.QSSecurityFooterUtils;
import com.android.systemui.qs.QSSecurityFooterUtils_Factory;
import com.android.systemui.qs.QsEventLoggerImpl;
import com.android.systemui.qs.ReduceBrightColorsController;
import com.android.systemui.qs.ReduceBrightColorsControllerImpl;
import com.android.systemui.qs.composefragment.QSFragmentCompose;
import com.android.systemui.qs.dagger.QSFlagsModule;
import com.android.systemui.qs.external.CustomTileStatePersisterImpl;
import com.android.systemui.qs.external.TileServiceRequestController;
import com.android.systemui.qs.external.TileServices;
import com.android.systemui.qs.footer.data.repository.ForegroundServicesRepositoryImpl;
import com.android.systemui.qs.footer.domain.interactor.FooterActionsInteractor;
import com.android.systemui.qs.footer.domain.interactor.FooterActionsInteractorImpl;
import com.android.systemui.qs.footer.ui.viewmodel.FooterActionsViewModel;
import com.android.systemui.qs.logging.QSLogger;
import com.android.systemui.qs.panels.dagger.PanelsModule_Companion_ProvidesPanelsLogFactory;
import com.android.systemui.qs.panels.data.repository.DefaultLargeTilesRepositoryImpl;
import com.android.systemui.qs.panels.data.repository.FixedColumnsRepository;
import com.android.systemui.qs.panels.data.repository.GridLayoutTypeRepositoryImpl;
import com.android.systemui.qs.panels.data.repository.IconAndNameCustomRepository;
import com.android.systemui.qs.panels.data.repository.PaginatedGridRepository;
import com.android.systemui.qs.panels.data.repository.QSPreferencesRepository;
import com.android.systemui.qs.panels.data.repository.QuickQuickSettingsRowRepository;
import com.android.systemui.qs.panels.data.repository.StockTilesRepository;
import com.android.systemui.qs.panels.domain.interactor.EditTilesListInteractor;
import com.android.systemui.qs.panels.domain.interactor.FixedColumnsSizeInteractor;
import com.android.systemui.qs.panels.domain.interactor.GridLayoutTypeInteractor;
import com.android.systemui.qs.panels.domain.interactor.IconLabelVisibilityInteractor;
import com.android.systemui.qs.panels.domain.interactor.IconTilesInteractor;
import com.android.systemui.qs.panels.domain.interactor.NewTilesAvailabilityInteractor;
import com.android.systemui.qs.panels.domain.interactor.PaginatedGridInteractor;
import com.android.systemui.qs.panels.domain.interactor.QSPreferencesInteractor;
import com.android.systemui.qs.panels.domain.interactor.QuickQuickSettingsRowInteractor;
import com.android.systemui.qs.panels.domain.interactor.TilesAvailabilityInteractor;
import com.android.systemui.qs.panels.shared.model.GridLayoutType;
import com.android.systemui.qs.panels.ui.compose.PaginatedGridLayout;
import com.android.systemui.qs.panels.ui.compose.infinitegrid.InfiniteGridLayout;
import com.android.systemui.qs.panels.ui.viewmodel.EditModeViewModel;
import com.android.systemui.qs.panels.ui.viewmodel.FixedColumnsSizeViewModel;
import com.android.systemui.qs.panels.ui.viewmodel.FixedColumnsSizeViewModelImpl;
import com.android.systemui.qs.panels.ui.viewmodel.IconLabelVisibilityViewModelImpl;
import com.android.systemui.qs.panels.ui.viewmodel.IconTilesViewModel;
import com.android.systemui.qs.panels.ui.viewmodel.IconTilesViewModelImpl;
import com.android.systemui.qs.panels.ui.viewmodel.PaginatedGridViewModel;
import com.android.systemui.qs.panels.ui.viewmodel.QuickQuickSettingsViewModel;
import com.android.systemui.qs.panels.ui.viewmodel.TileGridViewModel;
import com.android.systemui.qs.pipeline.dagger.QSAutoAddModule_Companion_ProvideQSAutoAddLogBufferFactory;
import com.android.systemui.qs.pipeline.dagger.QSPipelineModule_Companion_ProvideQSTileListLogBufferFactory;
import com.android.systemui.qs.pipeline.dagger.QSPipelineModule_Companion_ProvidesQSRestoreLogBufferFactory;
import com.android.systemui.qs.pipeline.data.model.RestoreProcessor;
import com.android.systemui.qs.pipeline.data.repository.AutoAddSettingRepository;
import com.android.systemui.qs.pipeline.data.repository.CustomTileAddedRepository;
import com.android.systemui.qs.pipeline.data.repository.CustomTileAddedSharedPrefsRepository;
import com.android.systemui.qs.pipeline.data.repository.DefaultTilesQSHostRepository;
import com.android.systemui.qs.pipeline.data.repository.InstalledTilesComponentRepository;
import com.android.systemui.qs.pipeline.data.repository.InstalledTilesComponentRepositoryImpl;
import com.android.systemui.qs.pipeline.data.repository.MinimumTilesResourceRepository;
import com.android.systemui.qs.pipeline.data.repository.QSSettingsRestoredBroadcastRepository;
import com.android.systemui.qs.pipeline.data.repository.QSSettingsRestoredRepository;
import com.android.systemui.qs.pipeline.data.repository.TileSpecSettingsRepository;
import com.android.systemui.qs.pipeline.data.restoreprocessors.WorkTileRestoreProcessor;
import com.android.systemui.qs.pipeline.domain.autoaddable.CastAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.DataSaverAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.DeviceControlsAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.HotspotAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.NightDisplayAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.ReduceBrightColorsAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.WalletAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.WorkTileAutoAddable;
import com.android.systemui.qs.pipeline.domain.interactor.CurrentTilesInteractor;
import com.android.systemui.qs.pipeline.domain.interactor.CurrentTilesInteractorImpl;
import com.android.systemui.qs.pipeline.domain.interactor.MinimumTilesInteractor;
import com.android.systemui.qs.pipeline.domain.interactor.PanelInteractor;
import com.android.systemui.qs.pipeline.domain.interactor.PanelInteractorImpl;
import com.android.systemui.qs.pipeline.domain.interactor.RestoreReconciliationInteractor;
import com.android.systemui.qs.pipeline.shared.QSPipelineFlagsRepository;
import com.android.systemui.qs.pipeline.shared.TileSpec;
import com.android.systemui.qs.pipeline.shared.logging.QSPipelineLogger;
import com.android.systemui.qs.tileimpl.QSFactoryImpl;
import com.android.systemui.qs.tileimpl.QSTileImpl;
import com.android.systemui.qs.tiles.AirplaneModeTile;
import com.android.systemui.qs.tiles.AlarmTile;
import com.android.systemui.qs.tiles.BluetoothTile;
import com.android.systemui.qs.tiles.CameraToggleTile_Factory;
import com.android.systemui.qs.tiles.CastTile;
import com.android.systemui.qs.tiles.ColorCorrectionTile;
import com.android.systemui.qs.tiles.ColorInversionTile;
import com.android.systemui.qs.tiles.DataSaverTile;
import com.android.systemui.qs.tiles.DeviceControlsTile;
import com.android.systemui.qs.tiles.DndTile;
import com.android.systemui.qs.tiles.DreamTile;
import com.android.systemui.qs.tiles.FlashlightTile;
import com.android.systemui.qs.tiles.FontScalingTile;
import com.android.systemui.qs.tiles.HearingDevicesTile;
import com.android.systemui.qs.tiles.HotspotTile;
import com.android.systemui.qs.tiles.InternetTile;
import com.android.systemui.qs.tiles.InternetTileNewImpl;
import com.android.systemui.qs.tiles.LocationTile;
import com.android.systemui.qs.tiles.MicrophoneToggleTile_Factory;
import com.android.systemui.qs.tiles.ModesTile;
import com.android.systemui.qs.tiles.NfcTile;
import com.android.systemui.qs.tiles.NightDisplayTile;
import com.android.systemui.qs.tiles.OneHandedModeTile;
import com.android.systemui.qs.tiles.QRCodeScannerTile;
import com.android.systemui.qs.tiles.QuickAccessWalletTile;
import com.android.systemui.qs.tiles.RecordIssueTile;
import com.android.systemui.qs.tiles.ReduceBrightColorsTile;
import com.android.systemui.qs.tiles.ScreenRecordTile;
import com.android.systemui.qs.tiles.TileJavaAdapter;
import com.android.systemui.qs.tiles.UiModeNightTile;
import com.android.systemui.qs.tiles.UserDetailView$Adapter;
import com.android.systemui.qs.tiles.WorkModeTile;
import com.android.systemui.qs.tiles.base.actions.QSTileIntentUserInputHandlerImpl;
import com.android.systemui.qs.tiles.base.analytics.QSTileAnalytics;
import com.android.systemui.qs.tiles.base.interactor.DisabledByPolicyInteractorImpl;
import com.android.systemui.qs.tiles.base.interactor.RestrictedLockProxy;
import com.android.systemui.qs.tiles.base.logging.QSTileLogger;
import com.android.systemui.qs.tiles.base.viewmodel.QSTileViewModelFactory$Static;
import com.android.systemui.qs.tiles.dialog.InternetDialogManager;
import com.android.systemui.qs.tiles.dialog.WifiStateWorker;
import com.android.systemui.qs.tiles.impl.battery.domain.interactor.BatterySaverTileUserActionInteractor;
import com.android.systemui.qs.tiles.impl.battery.ui.BatterySaverTileMapper;
import com.android.systemui.qs.tiles.impl.custom.domain.CustomTileMapper;
import com.android.systemui.qs.tiles.impl.fontscaling.domain.FontScalingTileMapper;
import com.android.systemui.qs.tiles.impl.fontscaling.domain.interactor.FontScalingTileDataInteractor;
import com.android.systemui.qs.tiles.impl.internet.domain.InternetTileMapper;
import com.android.systemui.qs.tiles.impl.internet.domain.interactor.InternetTileDataInteractor;
import com.android.systemui.qs.tiles.impl.modes.domain.interactor.ModesTileDataInteractor;
import com.android.systemui.qs.tiles.impl.modes.domain.interactor.ModesTileUserActionInteractor;
import com.android.systemui.qs.tiles.impl.modes.ui.ModesTileMapper;
import com.android.systemui.qs.tiles.impl.onehanded.domain.OneHandedModeTileUserActionInteractor;
import com.android.systemui.qs.tiles.impl.reducebrightness.domain.interactor.ReduceBrightColorsTileUserActionInteractor;
import com.android.systemui.qs.tiles.impl.reducebrightness.ui.ReduceBrightColorsTileMapper;
import com.android.systemui.qs.tiles.impl.rotation.domain.interactor.RotationLockTileUserActionInteractor;
import com.android.systemui.qs.tiles.impl.rotation.ui.mapper.RotationLockTileMapper;
import com.android.systemui.qs.tiles.impl.uimodenight.domain.UiModeNightTileMapper;
import com.android.systemui.qs.tiles.impl.uimodenight.domain.interactor.UiModeNightTileDataInteractor;
import com.android.systemui.qs.tiles.viewmodel.QSTileConfigProviderImpl;
import com.android.systemui.qs.tiles.viewmodel.StubQSTileViewModel;
import com.android.systemui.qs.ui.adapter.QSSceneAdapterImpl;
import com.android.systemui.qs.ui.composable.QuickSettingsScene;
import com.android.systemui.qs.ui.composable.QuickSettingsShadeOverlay;
import com.android.systemui.qs.ui.viewmodel.QuickSettingsContainerViewModel;
import com.android.systemui.qs.user.UserSwitchDialogController;
import com.android.systemui.reardisplay.RearDisplayDialogController;
import com.android.systemui.recents.OverviewProxyRecentsImpl;
import com.android.systemui.recents.OverviewProxyService;
import com.android.systemui.recents.Recents;
import com.android.systemui.recents.ScreenPinningRequest;
import com.android.systemui.recordissue.IssueRecordingService;
import com.android.systemui.recordissue.IssueRecordingState;
import com.android.systemui.recordissue.TraceurMessageSender;
import com.android.systemui.retail.data.repository.RetailModeSettingsRepository;
import com.android.systemui.retail.domain.interactor.RetailModeInteractorImpl;
import com.android.systemui.scene.SceneContainerFrameworkModule_Companion_ContainerConfigFactory;
import com.android.systemui.scene.data.repository.SceneContainerRepository;
import com.android.systemui.scene.data.repository.WindowRootViewVisibilityRepository;
import com.android.systemui.scene.domain.interactor.SceneBackInteractor;
import com.android.systemui.scene.domain.interactor.SceneContainerOcclusionInteractor;
import com.android.systemui.scene.domain.interactor.SceneInteractor;
import com.android.systemui.scene.domain.interactor.WindowRootViewVisibilityInteractor;
import com.android.systemui.scene.domain.resolver.HomeSceneFamilyResolver;
import com.android.systemui.scene.domain.resolver.SceneResolver;
import com.android.systemui.scene.domain.resolver.SceneResolverModule_Companion_ProvideResolverMapFactory;
import com.android.systemui.scene.domain.startable.KeyguardStateCallbackStartable;
import com.android.systemui.scene.domain.startable.SceneContainerStartable;
import com.android.systemui.scene.domain.startable.ScrimStartable;
import com.android.systemui.scene.domain.startable.StatusBarStartable;
import com.android.systemui.scene.session.shared.SessionStorage;
import com.android.systemui.scene.shared.logger.SceneLogger;
import com.android.systemui.scene.shared.model.SceneContainerConfig;
import com.android.systemui.scene.shared.model.SceneDataSource;
import com.android.systemui.scene.shared.model.SceneDataSourceDelegator;
import com.android.systemui.scene.ui.composable.GoneScene;
import com.android.systemui.scene.ui.composable.Overlay;
import com.android.systemui.scene.ui.composable.Scene;
import com.android.systemui.screenrecord.RecordingController;
import com.android.systemui.screenrecord.RecordingControllerLogger;
import com.android.systemui.screenrecord.RecordingService;
import com.android.systemui.screenrecord.ScreenRecordModule_Companion_ProvideScreenRecordTileViewModelFactory;
import com.android.systemui.screenrecord.data.repository.ScreenRecordRepositoryImpl;
import com.android.systemui.screenshot.ActionIntentExecutor;
import com.android.systemui.screenshot.AssistContentRequester;
import com.android.systemui.screenshot.HeadlessScreenshotHandler;
import com.android.systemui.screenshot.ImageCaptureImpl;
import com.android.systemui.screenshot.ImageExporter;
import com.android.systemui.screenshot.ScreenshotNotificationSmartActionsProvider;
import com.android.systemui.screenshot.ScreenshotNotificationsController;
import com.android.systemui.screenshot.ScreenshotProxyService;
import com.android.systemui.screenshot.ScreenshotSmartActions;
import com.android.systemui.screenshot.ScreenshotSoundControllerImpl;
import com.android.systemui.screenshot.ScreenshotSoundProviderImpl;
import com.android.systemui.screenshot.SmartActionsReceiver;
import com.android.systemui.screenshot.TakeScreenshotExecutor;
import com.android.systemui.screenshot.TakeScreenshotExecutorImpl;
import com.android.systemui.screenshot.TakeScreenshotService;
import com.android.systemui.screenshot.TimeoutHandler;
import com.android.systemui.screenshot.appclips.AppClipsActivity;
import com.android.systemui.screenshot.appclips.AppClipsCrossProcessHelper;
import com.android.systemui.screenshot.appclips.AppClipsScreenshotHelperService;
import com.android.systemui.screenshot.appclips.AppClipsService;
import com.android.systemui.screenshot.appclips.AppClipsTrampolineActivity;
import com.android.systemui.screenshot.appclips.AppClipsViewModel;
import com.android.systemui.screenshot.data.repository.DisplayContentRepositoryImpl;
import com.android.systemui.screenshot.data.repository.ProfileTypeRepositoryImpl;
import com.android.systemui.screenshot.message.PackageLabelIconProviderImpl;
import com.android.systemui.screenshot.message.ProfileFirstRunFileResourcesImpl;
import com.android.systemui.screenshot.message.ProfileFirstRunSettingsImpl;
import com.android.systemui.screenshot.policy.PolicyRequestProcessor;
import com.android.systemui.screenshot.policy.ScreenshotPolicyModule_BindCapturePolicyListFactory;
import com.android.systemui.screenshot.policy.ScreenshotPolicyModule_BindScreenshotRequestProcessorFactory;
import com.android.systemui.screenshot.proxy.SystemUiProxyClient;
import com.android.systemui.screenshot.resources.Messages;
import com.android.systemui.screenshot.scroll.LongScreenshotActivity;
import com.android.systemui.screenshot.scroll.LongScreenshotData;
import com.android.systemui.screenshot.ui.viewmodel.ScreenshotViewModel;
import com.android.systemui.security.data.repository.SecurityRepositoryImpl;
import com.android.systemui.sensorprivacy.SensorUseStartedActivity;
import com.android.systemui.settings.DisplayTracker;
import com.android.systemui.settings.MultiUserUtilsModule_ProvideDisplayTrackerFactory;
import com.android.systemui.settings.MultiUserUtilsModule_ProvideUserTrackerFactory;
import com.android.systemui.settings.SecureSettingsRepositoryModule_ProvideSecureSettingsRepositoryFactory;
import com.android.systemui.settings.SystemSettingsRepositoryModule_ProvideSystemSettingsRepositoryFactory;
import com.android.systemui.settings.UserContextProvider;
import com.android.systemui.settings.UserFileManager;
import com.android.systemui.settings.UserFileManagerImpl;
import com.android.systemui.settings.UserTracker;
import com.android.systemui.settings.UserTrackerImpl;
import com.android.systemui.settings.brightness.BrightnessController;
import com.android.systemui.settings.brightness.BrightnessDialog;
import com.android.systemui.settings.brightness.BrightnessSliderController;
import com.android.systemui.settings.brightness.data.repository.BrightnessMirrorShowingRepository;
import com.android.systemui.settings.brightness.domain.interactor.BrightnessMirrorShowingInteractor;
import com.android.systemui.shade.CameraLauncher;
import com.android.systemui.shade.CombinedShadeHeadersConstraintManagerImpl;
import com.android.systemui.shade.GlanceableHubContainerController;
import com.android.systemui.shade.LargeScreenHeaderHelper;
import com.android.systemui.shade.LockscreenHostedDreamGestureListener;
import com.android.systemui.shade.NotificationPanelView;
import com.android.systemui.shade.NotificationPanelViewController;
import com.android.systemui.shade.NotificationShadeWindowControllerImpl;
import com.android.systemui.shade.NotificationShadeWindowView;
import com.android.systemui.shade.NotificationShadeWindowViewController;
import com.android.systemui.shade.NotificationsQSContainerController;
import com.android.systemui.shade.NotificationsQuickSettingsContainer;
import com.android.systemui.shade.PulsingGestureListener;
import com.android.systemui.shade.QsBatteryModeController;
import com.android.systemui.shade.QuickSettingsController;
import com.android.systemui.shade.QuickSettingsControllerImpl;
import com.android.systemui.shade.QuickSettingsControllerSceneImpl;
import com.android.systemui.shade.ShadeController;
import com.android.systemui.shade.ShadeControllerImpl;
import com.android.systemui.shade.ShadeControllerSceneImpl;
import com.android.systemui.shade.ShadeExpansionStateManager;
import com.android.systemui.shade.ShadeHeaderController;
import com.android.systemui.shade.ShadeLogger;
import com.android.systemui.shade.ShadeModule_Companion_ProvideBaseShadeInteractorFactory;
import com.android.systemui.shade.ShadeModule_Companion_ProvideShadeAnimationInteractorFactory;
import com.android.systemui.shade.ShadeModule_Companion_ProvideShadeControllerFactory;
import com.android.systemui.shade.ShadeModule_Companion_ProvideShadeLockscreenInteractorFactory;
import com.android.systemui.shade.ShadeSurface;
import com.android.systemui.shade.ShadeSurfaceImpl;
import com.android.systemui.shade.ShadeViewController;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesKeyguardRootViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesNotificationPanelViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesNotificationsQuickSettingsContainerFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesShadeHeaderViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesWindowRootViewFactory;
import com.android.systemui.shade.ShadeWindowLogger;
import com.android.systemui.shade.carrier.ShadeCarrierGroupController;
import com.android.systemui.shade.carrier.ShadeCarrierGroupControllerLogger;
import com.android.systemui.shade.data.repository.PrivacyChipRepositoryImpl;
import com.android.systemui.shade.data.repository.ShadeAnimationRepository;
import com.android.systemui.shade.data.repository.ShadeHeaderClockRepository;
import com.android.systemui.shade.data.repository.ShadeRepository;
import com.android.systemui.shade.data.repository.ShadeRepositoryImpl;
import com.android.systemui.shade.domain.interactor.BaseShadeInteractor;
import com.android.systemui.shade.domain.interactor.PanelExpansionInteractor;
import com.android.systemui.shade.domain.interactor.PanelExpansionInteractorImpl;
import com.android.systemui.shade.domain.interactor.PrivacyChipInteractor;
import com.android.systemui.shade.domain.interactor.ShadeAnimationInteractor;
import com.android.systemui.shade.domain.interactor.ShadeAnimationInteractorLegacyImpl;
import com.android.systemui.shade.domain.interactor.ShadeAnimationInteractorSceneContainerImpl;
import com.android.systemui.shade.domain.interactor.ShadeHeaderClockInteractor;
import com.android.systemui.shade.domain.interactor.ShadeInteractor;
import com.android.systemui.shade.domain.interactor.ShadeInteractorImpl;
import com.android.systemui.shade.domain.interactor.ShadeInteractorLegacyImpl;
import com.android.systemui.shade.domain.interactor.ShadeLockscreenInteractor;
import com.android.systemui.shade.domain.interactor.ShadeLockscreenInteractorImpl;
import com.android.systemui.shade.domain.interactor.ShadeModeInteractor;
import com.android.systemui.shade.domain.interactor.ShadeModeInteractorImpl;
import com.android.systemui.shade.domain.startable.ShadeStartable;
import com.android.systemui.shade.transition.LargeScreenPortraitShadeInterpolator;
import com.android.systemui.shade.transition.LargeScreenShadeInterpolator;
import com.android.systemui.shade.transition.LargeScreenShadeInterpolatorImpl;
import com.android.systemui.shade.transition.ScrimShadeTransitionController;
import com.android.systemui.shade.transition.SplitShadeInterpolator;
import com.android.systemui.shade.ui.composable.ShadeScene;
import com.android.systemui.shade.ui.viewmodel.NotificationShadeWindowModel;
import com.android.systemui.shared.clocks.ClockRegistry;
import com.android.systemui.shared.condition.Monitor;
import com.android.systemui.shared.notifications.data.repository.NotificationSettingsRepository;
import com.android.systemui.shared.notifications.domain.interactor.NotificationSettingsInteractor;
import com.android.systemui.shared.settings.data.repository.SecureSettingsRepositoryImpl;
import com.android.systemui.shared.settings.data.repository.SystemSettingsRepositoryImpl;
import com.android.systemui.shared.system.ActivityManagerWrapper;
import com.android.systemui.shared.system.DevicePolicyManagerWrapper;
import com.android.systemui.shared.system.TaskStackChangeListeners;
import com.android.systemui.shared.system.UncaughtExceptionPreHandlerManager;
import com.android.systemui.shortcut.ShortcutKeyDispatcher;
import com.android.systemui.smartspace.config.BcSmartspaceConfigProvider;
import com.android.systemui.smartspace.preconditions.LockscreenPrecondition;
import com.android.systemui.statusbar.ActionClickLogger;
import com.android.systemui.statusbar.BlurUtils;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.ImmersiveModeConfirmation;
import com.android.systemui.statusbar.KeyboardShortcutsReceiver;
import com.android.systemui.statusbar.KeyguardIndicationController;
import com.android.systemui.statusbar.LightRevealScrim;
import com.android.systemui.statusbar.LockscreenShadeScrimTransitionController;
import com.android.systemui.statusbar.LockscreenShadeTransitionController;
import com.android.systemui.statusbar.NotificationClickNotifier;
import com.android.systemui.statusbar.NotificationInsetsImpl;
import com.android.systemui.statusbar.NotificationInteractionTracker;
import com.android.systemui.statusbar.NotificationListener;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl;
import com.android.systemui.statusbar.NotificationMediaManager;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeDepthController;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.OperatorNameViewController;
import com.android.systemui.statusbar.PulseExpansionHandler;
import com.android.systemui.statusbar.QsFrameTranslateImpl;
import com.android.systemui.statusbar.RemoteInputNotificationRebuilder;
import com.android.systemui.statusbar.SmartReplyController;
import com.android.systemui.statusbar.StatusBarStateControllerImpl;
import com.android.systemui.statusbar.SysuiStatusBarStateController;
import com.android.systemui.statusbar.VibratorHelper;
import com.android.systemui.statusbar.chips.StatusBarChipsModule_Companion_ProvideChipsLogBufferFactory;
import com.android.systemui.statusbar.chips.call.domain.interactor.CallChipInteractor;
import com.android.systemui.statusbar.chips.call.ui.viewmodel.CallChipViewModel;
import com.android.systemui.statusbar.chips.casttootherdevice.domain.interactor.MediaRouterChipInteractor;
import com.android.systemui.statusbar.chips.casttootherdevice.ui.viewmodel.CastToOtherDeviceChipViewModel;
import com.android.systemui.statusbar.chips.mediaprojection.domain.interactor.MediaProjectionChipInteractor;
import com.android.systemui.statusbar.chips.mediaprojection.ui.view.EndMediaProjectionDialogHelper;
import com.android.systemui.statusbar.chips.ron.demo.ui.viewmodel.DemoRonChipViewModel;
import com.android.systemui.statusbar.chips.screenrecord.domain.interactor.ScreenRecordChipInteractor;
import com.android.systemui.statusbar.chips.screenrecord.ui.viewmodel.ScreenRecordChipViewModel;
import com.android.systemui.statusbar.chips.sharetoapp.ui.viewmodel.ShareToAppChipViewModel;
import com.android.systemui.statusbar.chips.ui.viewmodel.OngoingActivityChipsViewModel;
import com.android.systemui.statusbar.commandline.CommandRegistry;
import com.android.systemui.statusbar.connectivity.AccessPointController;
import com.android.systemui.statusbar.connectivity.AccessPointControllerImpl;
import com.android.systemui.statusbar.connectivity.CallbackHandler;
import com.android.systemui.statusbar.connectivity.ConnectivityModule_Companion_ProvideAirplaneModeTileViewModelFactory;
import com.android.systemui.statusbar.connectivity.ConnectivityModule_Companion_ProvideDataSaverTileViewModelFactory;
import com.android.systemui.statusbar.connectivity.ConnectivityModule_Companion_ProvideInternetTileViewModelFactory;
import com.android.systemui.statusbar.connectivity.MobileSignalControllerFactory;
import com.android.systemui.statusbar.connectivity.NetworkController;
import com.android.systemui.statusbar.connectivity.NetworkControllerImpl;
import com.android.systemui.statusbar.connectivity.WifiPickerTrackerFactory;
import com.android.systemui.statusbar.connectivity.WifiStatusTrackerFactory;
import com.android.systemui.statusbar.connectivity.ui.MobileContextProvider;
import com.android.systemui.statusbar.core.StatusBarInitializer$OnStatusBarViewInitializedListener;
import com.android.systemui.statusbar.core.StatusBarInitializerImpl;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule$2;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideAnimationFeatureFlagsFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideCommandQueueFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideDialogTransitionAnimatorFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideNotificationMediaManagerFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideStatusBarIconListFactory;
import com.android.systemui.statusbar.dagger.StatusBarModule_Companion_ProvideOngoingCallLogBufferFactory;
import com.android.systemui.statusbar.dagger.StatusBarModule_Companion_StatusBarWindowControllerFactory;
import com.android.systemui.statusbar.data.repository.KeyguardStatusBarRepositoryImpl;
import com.android.systemui.statusbar.data.repository.NotificationListenerSettingsRepository;
import com.android.systemui.statusbar.data.repository.RemoteInputRepositoryImpl;
import com.android.systemui.statusbar.data.repository.StatusBarModeRepositoryImpl;
import com.android.systemui.statusbar.disableflags.DisableFlagsLogger;
import com.android.systemui.statusbar.disableflags.data.repository.DisableFlagsRepositoryImpl;
import com.android.systemui.statusbar.domain.interactor.KeyguardStatusBarInteractor;
import com.android.systemui.statusbar.domain.interactor.RemoteInputInteractor;
import com.android.systemui.statusbar.domain.interactor.SilentNotificationStatusIconsVisibilityInteractor;
import com.android.systemui.statusbar.domain.interactor.StatusBarKeyguardViewManagerInteractor;
import com.android.systemui.statusbar.events.PrivacyDotViewController;
import com.android.systemui.statusbar.events.StatusBarEventsModule_Companion_ProvideSystemStatusAnimationSchedulerLogBufferFactory;
import com.android.systemui.statusbar.events.SystemEventChipAnimationController;
import com.android.systemui.statusbar.events.SystemEventCoordinator;
import com.android.systemui.statusbar.events.SystemStatusAnimationSchedulerImpl;
import com.android.systemui.statusbar.events.SystemStatusAnimationSchedulerLogger;
import com.android.systemui.statusbar.gesture.GesturePointerEventDetector;
import com.android.systemui.statusbar.gesture.GesturePointerEventListener;
import com.android.systemui.statusbar.gesture.SwipeStatusBarAwayGestureHandler;
import com.android.systemui.statusbar.gesture.SwipeUpGestureLogger;
import com.android.systemui.statusbar.gesture.TapGestureDetector;
import com.android.systemui.statusbar.lockscreen.LockscreenSmartspaceController;
import com.android.systemui.statusbar.notification.AnimatedImageNotificationManager;
import com.android.systemui.statusbar.notification.AssistantFeedbackController;
import com.android.systemui.statusbar.notification.ColorUpdateLogger;
import com.android.systemui.statusbar.notification.ConversationNotificationManager;
import com.android.systemui.statusbar.notification.ConversationNotificationProcessor;
import com.android.systemui.statusbar.notification.DynamicPrivacyController;
import com.android.systemui.statusbar.notification.DynamicPrivacyController_Factory;
import com.android.systemui.statusbar.notification.HeadsUpManagerPhone;
import com.android.systemui.statusbar.notification.InstantAppNotifier;
import com.android.systemui.statusbar.notification.NotifPipelineFlags;
import com.android.systemui.statusbar.notification.NotificationClicker;
import com.android.systemui.statusbar.notification.NotificationClickerLogger;
import com.android.systemui.statusbar.notification.NotificationLaunchAnimatorControllerProvider;
import com.android.systemui.statusbar.notification.NotificationSectionsFeatureManager;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinatorLogger;
import com.android.systemui.statusbar.notification.RemoteInputControllerLogger;
import com.android.systemui.statusbar.notification.VisibilityLocationProvider;
import com.android.systemui.statusbar.notification.collection.NotifCollection;
import com.android.systemui.statusbar.notification.collection.NotifInflaterImpl;
import com.android.systemui.statusbar.notification.collection.NotifInflaterLogger;
import com.android.systemui.statusbar.notification.collection.NotifLiveDataStoreImpl;
import com.android.systemui.statusbar.notification.collection.NotifPipeline;
import com.android.systemui.statusbar.notification.collection.NotifPipelineChoreographerImpl;
import com.android.systemui.statusbar.notification.collection.ShadeListBuilder;
import com.android.systemui.statusbar.notification.collection.TargetSdkResolver;
import com.android.systemui.statusbar.notification.collection.coalescer.GroupCoalescer;
import com.android.systemui.statusbar.notification.collection.coalescer.GroupCoalescerLogger;
import com.android.systemui.statusbar.notification.collection.coordinator.NotifCoordinatorsImpl;
import com.android.systemui.statusbar.notification.collection.coordinator.ShadeEventCoordinator;
import com.android.systemui.statusbar.notification.collection.coordinator.ShadeEventCoordinatorLogger;
import com.android.systemui.statusbar.notification.collection.coordinator.VisualStabilityCoordinator;
import com.android.systemui.statusbar.notification.collection.inflation.BindEventManagerImpl;
import com.android.systemui.statusbar.notification.collection.inflation.NotifUiAdjustmentProvider;
import com.android.systemui.statusbar.notification.collection.inflation.NotificationRowBinderImpl;
import com.android.systemui.statusbar.notification.collection.inflation.NotificationRowBinderLogger;
import com.android.systemui.statusbar.notification.collection.inflation.OnUserInteractionCallbackImpl;
import com.android.systemui.statusbar.notification.collection.init.NotifPipelineInitializer;
import com.android.systemui.statusbar.notification.collection.listbuilder.ShadeListBuilderLogger;
import com.android.systemui.statusbar.notification.collection.notifcollection.CommonNotifCollection;
import com.android.systemui.statusbar.notification.collection.notifcollection.NotifCollectionLogger;
import com.android.systemui.statusbar.notification.collection.provider.DebugModeFilterProvider;
import com.android.systemui.statusbar.notification.collection.provider.HighPriorityProvider;
import com.android.systemui.statusbar.notification.collection.provider.LaunchFullScreenIntentProvider;
import com.android.systemui.statusbar.notification.collection.provider.NotificationDismissibilityProviderImpl;
import com.android.systemui.statusbar.notification.collection.provider.NotificationVisibilityProviderImpl;
import com.android.systemui.statusbar.notification.collection.provider.SectionHeaderVisibilityProvider;
import com.android.systemui.statusbar.notification.collection.provider.SectionStyleProvider;
import com.android.systemui.statusbar.notification.collection.provider.VisibilityLocationProviderDelegator;
import com.android.systemui.statusbar.notification.collection.provider.VisualStabilityProvider;
import com.android.systemui.statusbar.notification.collection.render.GroupExpansionManagerImpl;
import com.android.systemui.statusbar.notification.collection.render.GroupMembershipManagerImpl;
import com.android.systemui.statusbar.notification.collection.render.MediaContainerController;
import com.android.systemui.statusbar.notification.collection.render.NotifViewBarn;
import com.android.systemui.statusbar.notification.collection.render.NotificationVisibilityProvider;
import com.android.systemui.statusbar.notification.collection.render.RenderStageManager;
import com.android.systemui.statusbar.notification.collection.render.SectionHeaderNodeControllerImpl;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesAlertingHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesIncomingHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesNewsHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesPeopleHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesPromoHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesRecsHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesSilentHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesSocialHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationStatsLoggerModule_Companion_ProvideLegacyLoggerOptionalFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideNotificationPanelLoggerFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideNotificationsSoundPolicyInteractorFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideVisualInterruptionDecisionProviderFactory;
import com.android.systemui.statusbar.notification.data.NotificationSettingsRepositoryModule_ProvideNotificationSettingsRepositoryFactory;
import com.android.systemui.statusbar.notification.data.repository.ActiveNotificationListRepository;
import com.android.systemui.statusbar.notification.data.repository.HeadsUpNotificationIconViewStateRepository;
import com.android.systemui.statusbar.notification.data.repository.NotificationLaunchAnimationRepository;
import com.android.systemui.statusbar.notification.data.repository.NotificationsKeyguardViewStateRepository;
import com.android.systemui.statusbar.notification.domain.interactor.ActiveNotificationsInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationAlertsInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationLaunchAnimationInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationSettingsInteractorModule_ProvideNotificationSettingsInteractorFactory;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationsKeyguardInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.SeenNotificationsInteractor;
import com.android.systemui.statusbar.notification.footer.ui.viewmodel.FooterViewModel;
import com.android.systemui.statusbar.notification.icon.IconBuilder;
import com.android.systemui.statusbar.notification.icon.IconManager;
import com.android.systemui.statusbar.notification.icon.domain.interactor.AlwaysOnDisplayNotificationIconsInteractor;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.AlwaysOnDisplayNotificationIconViewStore;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.NotificationIconContainerShelfViewBinder;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.NotificationIconContainerStatusBarViewBinder;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.ShelfNotificationIconViewStore;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.StatusBarIconViewBindingFailureTracker;
import com.android.systemui.statusbar.notification.icon.ui.viewmodel.NotificationIconContainerAlwaysOnDisplayViewModel;
import com.android.systemui.statusbar.notification.icon.ui.viewmodel.NotificationIconContainerShelfViewModel;
import com.android.systemui.statusbar.notification.init.NotificationsController;
import com.android.systemui.statusbar.notification.init.NotificationsControllerImpl;
import com.android.systemui.statusbar.notification.init.NotificationsControllerStub;
import com.android.systemui.statusbar.notification.interruption.AvalancheProvider;
import com.android.systemui.statusbar.notification.interruption.HeadsUpViewBinder;
import com.android.systemui.statusbar.notification.interruption.HeadsUpViewBinder_Factory;
import com.android.systemui.statusbar.notification.interruption.KeyguardNotificationVisibilityProviderImpl;
import com.android.systemui.statusbar.notification.interruption.NotificationInterruptLogger;
import com.android.systemui.statusbar.notification.interruption.NotificationInterruptStateProviderImpl;
import com.android.systemui.statusbar.notification.interruption.VisualInterruptionDecisionLogger;
import com.android.systemui.statusbar.notification.interruption.VisualInterruptionDecisionProvider;
import com.android.systemui.statusbar.notification.interruption.VisualInterruptionDecisionProviderImpl;
import com.android.systemui.statusbar.notification.logging.NotificationLogger;
import com.android.systemui.statusbar.notification.logging.NotificationPanelLoggerImpl;
import com.android.systemui.statusbar.notification.people.NotificationPersonExtractorPluginBoundary;
import com.android.systemui.statusbar.notification.people.PeopleNotificationIdentifierImpl;
import com.android.systemui.statusbar.notification.row.BigPictureStatsManager;
import com.android.systemui.statusbar.notification.row.ChannelEditorDialog;
import com.android.systemui.statusbar.notification.row.ChannelEditorDialogController;
import com.android.systemui.statusbar.notification.row.HeadsUpStyleProviderImpl;
import com.android.systemui.statusbar.notification.row.NoOpRichOngoingNotificationContentExtractor;
import com.android.systemui.statusbar.notification.row.NotifBindPipeline;
import com.android.systemui.statusbar.notification.row.NotifBindPipelineInitializer;
import com.android.systemui.statusbar.notification.row.NotifBindPipelineLogger;
import com.android.systemui.statusbar.notification.row.NotifInflationErrorManager;
import com.android.systemui.statusbar.notification.row.NotifRemoteViewCache;
import com.android.systemui.statusbar.notification.row.NotifRemoteViewCacheImpl;
import com.android.systemui.statusbar.notification.row.NotifRemoteViewsFactoryContainerImpl;
import com.android.systemui.statusbar.notification.row.NotificationContentInflater;
import com.android.systemui.statusbar.notification.row.NotificationEntryProcessorFactoryLooperImpl;
import com.android.systemui.statusbar.notification.row.NotificationGutsManager;
import com.android.systemui.statusbar.notification.row.NotificationOptimizedLinearLayoutFactory;
import com.android.systemui.statusbar.notification.row.NotificationRowContentBinder;
import com.android.systemui.statusbar.notification.row.NotificationRowContentBinderImpl;
import com.android.systemui.statusbar.notification.row.NotificationRowContentBinderLogger;
import com.android.systemui.statusbar.notification.row.NotificationSettingsController;
import com.android.systemui.statusbar.notification.row.NotificationViewFlipperFactory;
import com.android.systemui.statusbar.notification.row.PrecomputedTextViewFactory;
import com.android.systemui.statusbar.notification.row.RichOngoingNotificationContentExtractor;
import com.android.systemui.statusbar.notification.row.RichOngoingNotificationContentExtractorImpl;
import com.android.systemui.statusbar.notification.row.RichOngoingNotificationViewInflaterImpl;
import com.android.systemui.statusbar.notification.row.RowContentBindStage;
import com.android.systemui.statusbar.notification.row.RowContentBindStageLogger;
import com.android.systemui.statusbar.notification.row.RowInflaterTask;
import com.android.systemui.statusbar.notification.row.ui.viewmodel.ActivatableNotificationViewModelImpl;
import com.android.systemui.statusbar.notification.row.ui.viewmodel.NotificationViewFlipperViewModel;
import com.android.systemui.statusbar.notification.shelf.domain.interactor.NotificationShelfInteractor;
import com.android.systemui.statusbar.notification.shelf.ui.viewmodel.NotificationShelfViewModel;
import com.android.systemui.statusbar.notification.stack.AmbientState;
import com.android.systemui.statusbar.notification.stack.DisplaySwitchNotificationsHiderTracker;
import com.android.systemui.statusbar.notification.stack.NotificationRoundnessManager;
import com.android.systemui.statusbar.notification.stack.NotificationRoundnessManager_Factory;
import com.android.systemui.statusbar.notification.stack.NotificationSectionsManager;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayoutController;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLogger;
import com.android.systemui.statusbar.notification.stack.NotificationStackSizeCalculator;
import com.android.systemui.statusbar.notification.stack.NotificationSwipeHelper;
import com.android.systemui.statusbar.notification.stack.NotificationTargetsHelper;
import com.android.systemui.statusbar.notification.stack.StackStateLogger;
import com.android.systemui.statusbar.notification.stack.data.repository.NotificationPlaceholderRepository;
import com.android.systemui.statusbar.notification.stack.data.repository.NotificationViewHeightRepository;
import com.android.systemui.statusbar.notification.stack.domain.interactor.HideNotificationsInteractor;
import com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackAppearanceInteractor;
import com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackInteractor;
import com.android.systemui.statusbar.notification.stack.domain.interactor.SharedNotificationContainerInteractor;
import com.android.systemui.statusbar.notification.stack.ui.view.NotificationScrollView;
import com.android.systemui.statusbar.notification.stack.ui.view.NotificationStatsLoggerImpl;
import com.android.systemui.statusbar.notification.stack.ui.view.SharedNotificationContainer;
import com.android.systemui.statusbar.notification.stack.ui.viewbinder.NotificationListViewBinder;
import com.android.systemui.statusbar.notification.stack.ui.viewbinder.NotificationScrollViewBinder;
import com.android.systemui.statusbar.notification.stack.ui.viewbinder.SharedNotificationContainerBinder;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.HideListViewModel;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationLoggerViewModel;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.SharedNotificationContainerViewModel;
import com.android.systemui.statusbar.notification.ui.viewbinder.HeadsUpNotificationViewBinder;
import com.android.systemui.statusbar.phone.ActivityStarterImpl;
import com.android.systemui.statusbar.phone.ActivityStarterInternalImpl;
import com.android.systemui.statusbar.phone.AutoHideController;
import com.android.systemui.statusbar.phone.BiometricUnlockController;
import com.android.systemui.statusbar.phone.CentralSurfaces;
import com.android.systemui.statusbar.phone.CentralSurfacesCommandQueueCallbacks_Factory;
import com.android.systemui.statusbar.phone.ConfigurationControllerStartable;
import com.android.systemui.statusbar.phone.DarkIconDispatcherImpl;
import com.android.systemui.statusbar.phone.DozeParameters;
import com.android.systemui.statusbar.phone.DozeParameters_Factory;
import com.android.systemui.statusbar.phone.DozeScrimController;
import com.android.systemui.statusbar.phone.DozeServiceHost;
import com.android.systemui.statusbar.phone.KeyguardBottomAreaView;
import com.android.systemui.statusbar.phone.KeyguardBottomAreaViewController;
import com.android.systemui.statusbar.phone.KeyguardBypassController;
import com.android.systemui.statusbar.phone.KeyguardDismissUtil;
import com.android.systemui.statusbar.phone.LSShadeTransitionLogger;
import com.android.systemui.statusbar.phone.LegacyActivityStarterInternalImpl;
import com.android.systemui.statusbar.phone.LetterboxAppearanceCalculator;
import com.android.systemui.statusbar.phone.LetterboxBackgroundProvider;
import com.android.systemui.statusbar.phone.LightBarController;
import com.android.systemui.statusbar.phone.LockscreenGestureLogger;
import com.android.systemui.statusbar.phone.ManagedProfileController;
import com.android.systemui.statusbar.phone.ManagedProfileControllerImpl;
import com.android.systemui.statusbar.phone.NotificationListenerWithPlugins;
import com.android.systemui.statusbar.phone.PhoneStatusBarPolicy;
import com.android.systemui.statusbar.phone.ScreenOffAnimationController;
import com.android.systemui.statusbar.phone.ScrimController;
import com.android.systemui.statusbar.phone.StatusBarContentInsetsProvider;
import com.android.systemui.statusbar.phone.StatusBarHeadsUpChangeListener;
import com.android.systemui.statusbar.phone.StatusBarHideIconsForBouncerManager;
import com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager;
import com.android.systemui.statusbar.phone.StatusBarLocation;
import com.android.systemui.statusbar.phone.StatusBarLocationPublisher;
import com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter;
import com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarterLogger;
import com.android.systemui.statusbar.phone.StatusBarNotificationPresenter;
import com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback;
import com.android.systemui.statusbar.phone.StatusBarSignalPolicy;
import com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager;
import com.android.systemui.statusbar.phone.StatusIconContainer;
import com.android.systemui.statusbar.phone.SystemUIDialog;
import com.android.systemui.statusbar.phone.SystemUIDialogFactory;
import com.android.systemui.statusbar.phone.SystemUIDialogManager;
import com.android.systemui.statusbar.phone.TapAgainView;
import com.android.systemui.statusbar.phone.TapAgainViewController;
import com.android.systemui.statusbar.phone.UnlockedScreenOffAnimationController;
import com.android.systemui.statusbar.phone.data.repository.DarkIconRepositoryImpl;
import com.android.systemui.statusbar.phone.domain.interactor.LightsOutInteractor;
import com.android.systemui.statusbar.phone.fragment.CollapsedStatusBarFragment;
import com.android.systemui.statusbar.phone.fragment.CollapsedStatusBarFragmentLogger;
import com.android.systemui.statusbar.phone.ongoingcall.OngoingCallController;
import com.android.systemui.statusbar.phone.ongoingcall.data.repository.OngoingCallRepository;
import com.android.systemui.statusbar.phone.ui.DarkIconManager;
import com.android.systemui.statusbar.phone.ui.StatusBarIconController;
import com.android.systemui.statusbar.phone.ui.StatusBarIconControllerImpl;
import com.android.systemui.statusbar.phone.ui.StatusBarIconList;
import com.android.systemui.statusbar.phone.ui.TintedIconManager;
import com.android.systemui.statusbar.pipeline.StatusBarPipelineFlags;
import com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepository;
import com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepositoryImpl;
import com.android.systemui.statusbar.pipeline.airplane.domain.interactor.AirplaneModeInteractor;
import com.android.systemui.statusbar.pipeline.airplane.ui.viewmodel.AirplaneModeViewModelImpl;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideAirplaneTableLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideDeviceBasedSatelliteInputLogFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideDeviceBasedSatelliteTableLogFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideFirstMobileSubShowingNetworkTypeIconProviderFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideMobileInputLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideMobileSummaryLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideMobileViewLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideRealWifiRepositoryFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideSharedConnectivityTableLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideVerboseDeviceBasedSatelliteInputLogFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideVerboseMobileViewLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiTableLogBufferFactory;
import com.android.systemui.statusbar.pipeline.ethernet.domain.EthernetInteractor;
import com.android.systemui.statusbar.pipeline.icons.shared.BindableIconsRegistryImpl;
import com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.CarrierConfigCoreStartable;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.CarrierConfigRepository;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileRepositorySwitcher;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.demo.DemoMobileConnectionsRepository;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.demo.DemoModeMobileConnectionDataSource;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.CarrierMergedConnectionRepository;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.FullMobileConnectionRepository;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.MobileConnectionsRepositoryImpl;
import com.android.systemui.statusbar.pipeline.mobile.domain.interactor.MobileIconsInteractorImpl;
import com.android.systemui.statusbar.pipeline.mobile.ui.MobileUiAdapter;
import com.android.systemui.statusbar.pipeline.mobile.ui.MobileViewLogger;
import com.android.systemui.statusbar.pipeline.mobile.ui.VerboseMobileViewLogger;
import com.android.systemui.statusbar.pipeline.mobile.ui.viewmodel.MobileIconsViewModel;
import com.android.systemui.statusbar.pipeline.mobile.util.MobileMappingsProxyImpl;
import com.android.systemui.statusbar.pipeline.mobile.util.SubscriptionManagerProxyImpl;
import com.android.systemui.statusbar.pipeline.satellite.data.DeviceBasedSatelliteRepository;
import com.android.systemui.statusbar.pipeline.satellite.data.DeviceBasedSatelliteRepositorySwitcher;
import com.android.systemui.statusbar.pipeline.satellite.data.demo.DemoDeviceBasedSatelliteDataSource;
import com.android.systemui.statusbar.pipeline.satellite.data.demo.DemoDeviceBasedSatelliteRepository;
import com.android.systemui.statusbar.pipeline.satellite.data.prod.DeviceBasedSatelliteRepositoryImpl;
import com.android.systemui.statusbar.pipeline.satellite.domain.interactor.DeviceBasedSatelliteInteractor;
import com.android.systemui.statusbar.pipeline.satellite.ui.DeviceBasedSatelliteBindableIcon;
import com.android.systemui.statusbar.pipeline.satellite.ui.viewmodel.DeviceBasedSatelliteViewModel;
import com.android.systemui.statusbar.pipeline.satellite.ui.viewmodel.DeviceBasedSatelliteViewModelImpl;
import com.android.systemui.statusbar.pipeline.shared.ConnectivityConstants;
import com.android.systemui.statusbar.pipeline.shared.ConnectivityInputLogger;
import com.android.systemui.statusbar.pipeline.shared.data.model.ConnectivitySlots;
import com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl;
import com.android.systemui.statusbar.pipeline.shared.domain.interactor.CollapsedStatusBarInteractor;
import com.android.systemui.statusbar.pipeline.shared.ui.binder.CollapsedStatusBarViewBinderImpl;
import com.android.systemui.statusbar.pipeline.shared.ui.viewmodel.CollapsedStatusBarViewModel;
import com.android.systemui.statusbar.pipeline.shared.ui.viewmodel.CollapsedStatusBarViewModelImpl;
import com.android.systemui.statusbar.pipeline.shared.ui.viewmodel.InternetTileViewModel;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.RealWifiRepository;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepository;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositorySwitcher;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.demo.DemoModeWifiDataSource;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.demo.DemoWifiRepository;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryImpl;
import com.android.systemui.statusbar.pipeline.wifi.domain.interactor.WifiInteractorImpl;
import com.android.systemui.statusbar.pipeline.wifi.shared.WifiConstants;
import com.android.systemui.statusbar.pipeline.wifi.ui.WifiUiAdapter;
import com.android.systemui.statusbar.pipeline.wifi.ui.viewmodel.WifiViewModel;
import com.android.systemui.statusbar.policy.AccessibilityManagerWrapper;
import com.android.systemui.statusbar.policy.AvalancheController;
import com.android.systemui.statusbar.policy.BatteryController;
import com.android.systemui.statusbar.policy.BatteryControllerLogger;
import com.android.systemui.statusbar.policy.BatteryControllerStartable;
import com.android.systemui.statusbar.policy.BluetoothControllerImpl;
import com.android.systemui.statusbar.policy.CastControllerImpl;
import com.android.systemui.statusbar.policy.CastControllerLogger;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.DataSaverControllerImpl;
import com.android.systemui.statusbar.policy.DeviceControlsControllerImpl;
import com.android.systemui.statusbar.policy.DevicePostureControllerImpl;
import com.android.systemui.statusbar.policy.DeviceProvisionedController;
import com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl;
import com.android.systemui.statusbar.policy.DeviceStateRotationLockSettingController;
import com.android.systemui.statusbar.policy.DeviceStateRotationLockSettingControllerLogger;
import com.android.systemui.statusbar.policy.ExtensionControllerImpl;
import com.android.systemui.statusbar.policy.FlashlightControllerImpl;
import com.android.systemui.statusbar.policy.HeadsUpManager;
import com.android.systemui.statusbar.policy.HeadsUpManagerLogger;
import com.android.systemui.statusbar.policy.HotspotController;
import com.android.systemui.statusbar.policy.HotspotControllerImpl;
import com.android.systemui.statusbar.policy.IndividualSensorPrivacyController;
import com.android.systemui.statusbar.policy.IndividualSensorPrivacyControllerImpl;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.policy.KeyguardStateControllerImpl;
import com.android.systemui.statusbar.policy.LocationController;
import com.android.systemui.statusbar.policy.LocationControllerImpl;
import com.android.systemui.statusbar.policy.NextAlarmController;
import com.android.systemui.statusbar.policy.NextAlarmControllerImpl;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideAlarmTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideCameraToggleTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideFlashlightTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideLocationTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideMicrophoneToggleTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideUiModeNightTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideWorkModeTileViewModelFactory;
import com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler;
import com.android.systemui.statusbar.policy.RemoteInputUriController;
import com.android.systemui.statusbar.policy.RotationLockController;
import com.android.systemui.statusbar.policy.RotationLockControllerImpl;
import com.android.systemui.statusbar.policy.SecurityController;
import com.android.systemui.statusbar.policy.SecurityControllerImpl;
import com.android.systemui.statusbar.policy.SensitiveNotificationProtectionController;
import com.android.systemui.statusbar.policy.SensitiveNotificationProtectionControllerImpl;
import com.android.systemui.statusbar.policy.SmartReplyConstants;
import com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl;
import com.android.systemui.statusbar.policy.UserInfoControllerImpl;
import com.android.systemui.statusbar.policy.UserSwitcherController;
import com.android.systemui.statusbar.policy.VariableDateViewController;
import com.android.systemui.statusbar.policy.WalletControllerImpl;
import com.android.systemui.statusbar.policy.ZenModeController;
import com.android.systemui.statusbar.policy.ZenModeControllerImpl;
import com.android.systemui.statusbar.policy.bluetooth.BluetoothRepositoryImpl;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideAccessPointControllerImplFactory;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideBatteryControllerLogFactory;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideDataSaverControllerFactory;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideGlobalConfigurationControllerFactory;
import com.android.systemui.statusbar.policy.data.repository.UserSetupRepositoryImpl;
import com.android.systemui.statusbar.policy.domain.interactor.DeviceProvisioningInteractor;
import com.android.systemui.statusbar.policy.domain.interactor.ZenModeInteractor;
import com.android.systemui.statusbar.policy.ui.dialog.ModesDialogDelegate;
import com.android.systemui.statusbar.policy.ui.dialog.ModesDialogEventLogger;
import com.android.systemui.statusbar.policy.ui.dialog.viewmodel.ModesDialogViewModel;
import com.android.systemui.statusbar.ui.SystemBarUtilsProxyImpl;
import com.android.systemui.statusbar.ui.viewmodel.KeyguardStatusBarViewModel;
import com.android.systemui.statusbar.window.StatusBarWindowControllerImpl;
import com.android.systemui.statusbar.window.StatusBarWindowStateController;
import com.android.systemui.statusbar.window.StatusBarWindowViewInflaterImpl;
import com.android.systemui.stylus.StylusManager;
import com.android.systemui.stylus.StylusUsiPowerStartable;
import com.android.systemui.stylus.StylusUsiPowerUI;
import com.android.systemui.telephony.TelephonyCallback_Factory;
import com.android.systemui.telephony.TelephonyListenerManager;
import com.android.systemui.telephony.TelephonyListenerManager_Factory;
import com.android.systemui.telephony.data.repository.TelephonyRepositoryImpl;
import com.android.systemui.telephony.domain.interactor.TelephonyInteractor;
import com.android.systemui.telephony.ui.activity.SwitchToManagedProfileForCallActivity;
import com.android.systemui.temporarydisplay.TemporaryViewUiEventLogger;
import com.android.systemui.temporarydisplay.chipbar.ChipbarAnimator;
import com.android.systemui.temporarydisplay.chipbar.ChipbarCoordinator;
import com.android.systemui.temporarydisplay.chipbar.ChipbarLogger;
import com.android.systemui.temporarydisplay.chipbar.SwipeChipbarAwayGestureHandler;
import com.android.systemui.temporarydisplay.dagger.TemporaryDisplayModule_Companion_ProvideChipbarLogBufferFactory;
import com.android.systemui.theme.ThemeOverlayApplier;
import com.android.systemui.toast.ToastFactory;
import com.android.systemui.toast.ToastLogger;
import com.android.systemui.toast.ToastUI;
import com.android.systemui.touch.TouchInsetManager;
import com.android.systemui.touchpad.data.repository.TouchpadRepositoryImpl;
import com.android.systemui.touchpad.tutorial.ScreensProvider;
import com.android.systemui.touchpad.tutorial.domain.interactor.TouchpadGesturesInteractor;
import com.android.systemui.touchpad.tutorial.ui.view.TouchpadTutorialActivity;
import com.android.systemui.touchpad.tutorial.ui.viewmodel.TouchpadTutorialViewModel;
import com.android.systemui.tuner.TunerActivity;
import com.android.systemui.tuner.TunerService;
import com.android.systemui.tuner.TunerServiceImpl;
import com.android.systemui.unfold.DisplaySwitchLatencyLogger;
import com.android.systemui.unfold.DisplaySwitchLatencyTracker;
import com.android.systemui.unfold.SysUIUnfoldModule;
import com.android.systemui.unfold.UnfoldInitializationStartable;
import com.android.systemui.unfold.UnfoldTraceLogger;
import com.android.systemui.unfold.UnfoldTransitionProgressProvider;
import com.android.systemui.unfold.data.repository.FoldStateRepositoryImpl;
import com.android.systemui.unfold.data.repository.UnfoldTransitionRepositoryImpl;
import com.android.systemui.unfold.domain.interactor.UnfoldTransitionInteractor;
import com.android.systemui.unfold.system.DeviceStateRepositoryImpl;
import com.android.systemui.unfold.updates.DeviceFoldStateProvider;
import com.android.systemui.unfold.util.NaturalRotationUnfoldProgressProvider;
import com.android.systemui.unfold.util.ScopedUnfoldTransitionProgressProvider;
import com.android.systemui.usb.StorageNotification;
import com.android.systemui.usb.UsbAccessoryUriActivity;
import com.android.systemui.usb.UsbAudioWarningDialogMessage;
import com.android.systemui.usb.UsbConfirmActivity;
import com.android.systemui.usb.UsbDebuggingActivity;
import com.android.systemui.usb.UsbDebuggingSecondaryUserActivity;
import com.android.systemui.usb.UsbPermissionActivity;
import com.android.systemui.user.CreateUserActivity;
import com.android.systemui.user.UserCreator;
import com.android.systemui.user.data.repository.UserRepositoryImpl;
import com.android.systemui.user.data.repository.UserSwitcherRepositoryImpl;
import com.android.systemui.user.domain.interactor.GuestUserInteractor;
import com.android.systemui.user.domain.interactor.HeadlessSystemUserModeImpl;
import com.android.systemui.user.domain.interactor.RefreshUsersScheduler;
import com.android.systemui.user.domain.interactor.SelectedUserInteractor;
import com.android.systemui.user.domain.interactor.UserSwitcherInteractor;
import com.android.systemui.user.ui.dialog.UserSwitcherDialogCoordinator;
import com.android.systemui.user.ui.viewmodel.UserSwitcherViewModel;
import com.android.systemui.user.utils.UserScopedServiceImpl;
import com.android.systemui.util.ActivityTaskManagerProxy;
import com.android.systemui.util.AsyncActivityLauncher;
import com.android.systemui.util.CarrierConfigTracker;
import com.android.systemui.util.DeviceConfigProxy;
import com.android.systemui.util.EventLogImpl;
import com.android.systemui.util.InitializationChecker;
import com.android.systemui.util.NotificationChannels;
import com.android.systemui.util.RingerModeTrackerImpl;
import com.android.systemui.util.ThreadAssert;
import com.android.systemui.util.WallpaperController;
import com.android.systemui.util.animation.data.repository.AnimationStatusRepositoryImpl;
import com.android.systemui.util.concurrency.DelayableExecutor;
import com.android.systemui.util.concurrency.ExecutionImpl;
import com.android.systemui.util.concurrency.ExecutorImpl;
import com.android.systemui.util.concurrency.GlobalConcurrencyModule_ProvideHandlerFactory;
import com.android.systemui.util.concurrency.GlobalConcurrencyModule_ProvideMainLooperFactory;
import com.android.systemui.util.concurrency.MessageRouterImpl;
import com.android.systemui.util.concurrency.RepeatableExecutorImpl;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBackPanelUiThreadContextFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBackgroundExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBackgroundRepeatableExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBgHandlerFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBgLooperFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBroadcastRunningExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBroadcastRunningLooperFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideLongRunningDelayableExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideLongRunningLooperFactory;
import com.android.systemui.util.concurrency.ThreadFactoryImpl;
import com.android.systemui.util.concurrency.ThreadFactoryImpl_Factory;
import com.android.systemui.util.io.Files;
import com.android.systemui.util.kotlin.JavaAdapter;
import com.android.systemui.util.kotlin.SysUICoroutinesModule;
import com.android.systemui.util.kotlin.SysUICoroutinesModule_BgApplicationScopeFactory;
import com.android.systemui.util.kotlin.SysUICoroutinesModule_BgCoroutineContextFactory;
import com.android.systemui.util.kotlin.SysUICoroutinesModule_BgDispatcherFactory;
import com.android.systemui.util.kotlin.SysUICoroutinesModule_SettingsBgDispatcherFactory;
import com.android.systemui.util.leak.LeakDetector;
import com.android.systemui.util.leak.LeakModule;
import com.android.systemui.util.leak.LeakModule_ProvidesLeakDetectorFactory;
import com.android.systemui.util.leak.TrackedCollections_Factory;
import com.android.systemui.util.reference.WeakReferenceFactoryImpl;
import com.android.systemui.util.sensors.AsyncSensorManager;
import com.android.systemui.util.sensors.PostureDependentProximitySensor;
import com.android.systemui.util.sensors.ProximitySensor;
import com.android.systemui.util.sensors.ProximitySensorImpl;
import com.android.systemui.util.sensors.SensorModule;
import com.android.systemui.util.sensors.ThresholdSensorImpl;
import com.android.systemui.util.settings.GlobalSettingsImpl;
import com.android.systemui.util.settings.SecureSettings;
import com.android.systemui.util.settings.SecureSettingsImpl_Factory;
import com.android.systemui.util.settings.SystemSettingsImpl;
import com.android.systemui.util.settings.repository.UserAwareSecureSettingsRepositoryImpl;
import com.android.systemui.util.time.SystemClock;
import com.android.systemui.util.time.SystemClockImpl;
import com.android.systemui.util.view.ViewUtil;
import com.android.systemui.util.wakelock.WakeLock;
import com.android.systemui.util.wrapper.DisplayUtilsWrapper;
import com.android.systemui.util.wrapper.RotationPolicyWrapperImpl;
import com.android.systemui.utils.UserRestrictionChecker;
import com.android.systemui.volume.VolumeComponent;
import com.android.systemui.volume.VolumeControllerAdapter;
import com.android.systemui.volume.VolumeDialogComponent;
import com.android.systemui.volume.VolumeDialogControllerImpl;
import com.android.systemui.volume.VolumePanelFactory;
import com.android.systemui.volume.VolumeUI;
import com.android.systemui.volume.dagger.AudioModule_Companion_ProvideAudioManagerIntentsReceiverFactory;
import com.android.systemui.volume.dagger.AudioModule_Companion_ProvideAudioRepositoryFactory;
import com.android.systemui.volume.dagger.AudioModule_Companion_ProvideAudioSharingRepositoryFactory;
import com.android.systemui.volume.dagger.AudioModule_Companion_ProvideAudioVolumeInteractorFactory;
import com.android.systemui.volume.dagger.AudioSharingModule_Companion_ProvideAudioSharingInteractorFactory;
import com.android.systemui.volume.data.repository.VolumeDialogRepository;
import com.android.systemui.volume.domain.interactor.AudioSharingInteractor;
import com.android.systemui.volume.domain.interactor.AudioSharingInteractorEmptyImpl;
import com.android.systemui.volume.domain.interactor.AudioSharingInteractorImpl;
import com.android.systemui.volume.domain.interactor.VolumeDialogInteractor;
import com.android.systemui.volume.panel.component.anc.data.repository.AncSliceRepositoryImpl;
import com.android.systemui.volume.panel.component.mediaoutput.data.repository.LocalMediaRepositoryFactoryImpl;
import com.android.systemui.volume.panel.component.mediaoutput.domain.interactor.MediaControllerInteractorImpl;
import com.android.systemui.volume.panel.data.repository.VolumePanelGlobalStateRepository;
import com.android.systemui.volume.panel.domain.interactor.VolumePanelGlobalStateInteractor;
import com.android.systemui.volume.panel.shared.VolumePanelLogger;
import com.android.systemui.volume.panel.ui.viewmodel.VolumePanelViewModel;
import com.android.systemui.volume.shared.VolumeLogger;
import com.android.systemui.volume.ui.navigation.VolumeNavigator;
import com.android.systemui.wallet.controller.QuickAccessWalletController;
import com.android.systemui.wallet.controller.WalletContextualLocationsService;
import com.android.systemui.wallet.controller.WalletContextualSuggestionsController;
import com.android.systemui.wallet.dagger.WalletModule_ProvideQuickAccessWalletClientFactory;
import com.android.systemui.wallet.ui.WalletActivity;
import com.android.systemui.wallpapers.ImageWallpaper;
import com.android.systemui.wallpapers.data.repository.WallpaperRepositoryImpl;
import com.android.systemui.wmshell.WMShell;
import com.android.wm.shell.ProtoLogController;
import com.android.wm.shell.R;
import com.android.wm.shell.RootDisplayAreaOrganizer;
import com.android.wm.shell.RootTaskDisplayAreaOrganizer;
import com.android.wm.shell.ShellTaskOrganizer;
import com.android.wm.shell.WindowManagerShellWrapper;
import com.android.wm.shell.activityembedding.ActivityEmbeddingController;
import com.android.wm.shell.animation.FlingAnimationUtils;
import com.android.wm.shell.apptoweb.AppToWebGenericLinksParser;
import com.android.wm.shell.back.BackAnimationBackground;
import com.android.wm.shell.back.BackAnimationController;
import com.android.wm.shell.back.CrossTaskBackAnimation;
import com.android.wm.shell.back.CustomCrossActivityBackAnimation;
import com.android.wm.shell.back.DefaultCrossActivityBackAnimation;
import com.android.wm.shell.back.ShellBackAnimationRegistry;
import com.android.wm.shell.bubbles.BubbleController;
import com.android.wm.shell.bubbles.BubbleData;
import com.android.wm.shell.bubbles.BubbleDataRepository;
import com.android.wm.shell.bubbles.BubbleEducationController;
import com.android.wm.shell.bubbles.BubbleLogger;
import com.android.wm.shell.bubbles.BubblePositioner;
import com.android.wm.shell.bubbles.DeviceConfig;
import com.android.wm.shell.bubbles.properties.ProdBubbleProperties;
import com.android.wm.shell.bubbles.storage.BubblePersistentRepository;
import com.android.wm.shell.common.DevicePostureController;
import com.android.wm.shell.common.DisplayController;
import com.android.wm.shell.common.DisplayImeController;
import com.android.wm.shell.common.DisplayInsetsController;
import com.android.wm.shell.common.DisplayLayout;
import com.android.wm.shell.common.DockStateReader;
import com.android.wm.shell.common.FloatingContentCoordinator;
import com.android.wm.shell.common.HandlerExecutor;
import com.android.wm.shell.common.LaunchAdjacentController;
import com.android.wm.shell.common.MultiInstanceHelper;
import com.android.wm.shell.common.ShellExecutor;
import com.android.wm.shell.common.SyncTransactionQueue;
import com.android.wm.shell.common.SystemWindows;
import com.android.wm.shell.common.TabletopModeController;
import com.android.wm.shell.common.TaskStackListenerImpl;
import com.android.wm.shell.common.pip.PhonePipKeepClearAlgorithm;
import com.android.wm.shell.common.pip.PhoneSizeSpecSource;
import com.android.wm.shell.common.pip.PipAppOpsListener;
import com.android.wm.shell.common.pip.PipBoundsAlgorithm;
import com.android.wm.shell.common.pip.PipBoundsState;
import com.android.wm.shell.common.pip.PipDisplayLayoutState;
import com.android.wm.shell.common.pip.PipMediaController;
import com.android.wm.shell.common.pip.PipPerfHintController;
import com.android.wm.shell.common.pip.PipSnapAlgorithm;
import com.android.wm.shell.common.pip.PipUiEventLogger;
import com.android.wm.shell.common.pip.PipUtils;
import com.android.wm.shell.compatui.CompatUIConfiguration;
import com.android.wm.shell.compatui.CompatUIShellCommandHandler;
import com.android.wm.shell.compatui.CompatUIStatusManager;
import com.android.wm.shell.dagger.WMShellBaseModule$$ExternalSyntheticLambda0;
import com.android.wm.shell.dagger.WMShellBaseModule$$ExternalSyntheticLambda1;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIComponentFactoryFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIComponentIdGeneratorFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIRepositoryFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIStateFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIStatusManagerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDesktopTaskRepositoryFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayImeControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayInsetsControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideHomeTransitionObserverFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideIconProviderFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideIndependentShellComponentsToCreateFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideLaunchAdjacentControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideRecentTasksControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideRootTaskDisplayAreaOrganizerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellCommandHandlerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellInitFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellSysuiCallbacksFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellTaskOrganizerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideSyncTransactionQueueFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideTaskStackTransitionObserverFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideTransactionPoolFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideTransitionsFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideUnfoldControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProviderTaskStackListenerImplFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvidesSplitScreenControllerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideSharedBackgroundHandlerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellAnimationExecutorFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellMainExecutorFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellMainHandlerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideSysUIMainExecutorFactory;
import com.android.wm.shell.dagger.WMShellCoroutinesModule;
import com.android.wm.shell.dagger.WMShellCoroutinesModule_ProvideApplicationScopeFactory;
import com.android.wm.shell.dagger.WMShellCoroutinesModule_ProvideBackgroundCoroutineScopeFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDesktopModeTaskRepositoryFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDesktopPersistentRepositoryFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDragAndDropControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideGlobalDragListenerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideSplitScreenControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideSplitTaskUnfoldAnimatorBaseFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideUnfoldAnimationControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideUnfoldBackgroundControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideWindowDecorViewModelFactory;
import com.android.wm.shell.desktopmode.DefaultDragToDesktopTransitionHandler;
import com.android.wm.shell.desktopmode.DesktopActivityOrientationChangeHandler;
import com.android.wm.shell.desktopmode.DesktopModeDragAndDropTransitionHandler;
import com.android.wm.shell.desktopmode.DesktopModeEventLogger;
import com.android.wm.shell.desktopmode.DesktopModeLoggerTransitionObserver;
import com.android.wm.shell.desktopmode.DesktopModeTaskRepository;
import com.android.wm.shell.desktopmode.DesktopTasksController;
import com.android.wm.shell.desktopmode.DesktopTasksLimiter;
import com.android.wm.shell.desktopmode.DesktopTasksTransitionObserver;
import com.android.wm.shell.desktopmode.DragToDesktopTransitionHandler;
import com.android.wm.shell.desktopmode.EnterDesktopTaskTransitionHandler;
import com.android.wm.shell.desktopmode.ExitDesktopTaskTransitionHandler;
import com.android.wm.shell.desktopmode.ReturnToDragStartAnimator;
import com.android.wm.shell.desktopmode.ToggleResizeDesktopTaskTransitionHandler;
import com.android.wm.shell.desktopmode.WindowDecorCaptionHandleRepository;
import com.android.wm.shell.desktopmode.education.AppHandleEducationController;
import com.android.wm.shell.desktopmode.education.AppHandleEducationFilter;
import com.android.wm.shell.desktopmode.education.data.AppHandleEducationDatastoreRepository;
import com.android.wm.shell.desktopmode.persistence.DesktopPersistentRepository;
import com.android.wm.shell.displayareahelper.DisplayAreaHelperController;
import com.android.wm.shell.draganddrop.DragAndDropController;
import com.android.wm.shell.draganddrop.GlobalDragListener;
import com.android.wm.shell.freeform.FreeformComponents;
import com.android.wm.shell.freeform.FreeformTaskListener;
import com.android.wm.shell.freeform.FreeformTaskTransitionHandler;
import com.android.wm.shell.freeform.FreeformTaskTransitionObserver;
import com.android.wm.shell.fullscreen.FullscreenTaskListener;
import com.android.wm.shell.hidedisplaycutout.HideDisplayCutoutController;
import com.android.wm.shell.hidedisplaycutout.HideDisplayCutoutOrganizer;
import com.android.wm.shell.keyguard.KeyguardTransitionHandler;
import com.android.wm.shell.keyguard.KeyguardTransitionHandler.KeyguardTransitionsImpl;
import com.android.wm.shell.keyguard.KeyguardTransitions;
import com.android.wm.shell.onehanded.BackgroundWindowManager;
import com.android.wm.shell.onehanded.OneHandedAccessibilityUtil;
import com.android.wm.shell.onehanded.OneHandedAnimationController;
import com.android.wm.shell.onehanded.OneHandedController;
import com.android.wm.shell.onehanded.OneHandedDisplayAreaOrganizer;
import com.android.wm.shell.onehanded.OneHandedSettingsUtil;
import com.android.wm.shell.onehanded.OneHandedState;
import com.android.wm.shell.onehanded.OneHandedTimeoutHandler;
import com.android.wm.shell.onehanded.OneHandedTouchHandler;
import com.android.wm.shell.onehanded.OneHandedTutorialHandler;
import com.android.wm.shell.onehanded.OneHandedUiEventLogger;
import com.android.wm.shell.performance.PerfHintController;
import com.android.wm.shell.pip.Pip;
import com.android.wm.shell.pip.PipAnimationController;
import com.android.wm.shell.pip.PipParamsChangedForwarder;
import com.android.wm.shell.pip.PipSurfaceTransactionHelper;
import com.android.wm.shell.pip.PipTaskOrganizer;
import com.android.wm.shell.pip.PipTransitionController;
import com.android.wm.shell.pip.PipTransitionState;
import com.android.wm.shell.pip.phone.PhonePipMenuController;
import com.android.wm.shell.pip2.phone.PipController;
import com.android.wm.shell.pip2.phone.PipMotionHelper;
import com.android.wm.shell.pip2.phone.PipScheduler;
import com.android.wm.shell.pip2.phone.PipTaskListener;
import com.android.wm.shell.pip2.phone.PipTouchHandler;
import com.android.wm.shell.pip2.phone.PipTransition;
import com.android.wm.shell.pip2.phone.PipUiStateChangeController;
import com.android.wm.shell.protolog.ShellProtoLogGroup;
import com.android.wm.shell.recents.RecentTasksController;
import com.android.wm.shell.recents.RecentsTransitionHandler;
import com.android.wm.shell.recents.TaskStackTransitionObserver;
import com.android.wm.shell.shared.ShellTransitions;
import com.android.wm.shell.shared.TransactionPool;
import com.android.wm.shell.shared.bubbles.BubbleBarLocation;
import com.android.wm.shell.shared.desktopmode.DesktopModeStatus;
import com.android.wm.shell.splitscreen.SplitScreenController;
import com.android.wm.shell.startingsurface.StartingWindowController;
import com.android.wm.shell.startingsurface.phone.PhoneStartingWindowTypeAlgorithm;
import com.android.wm.shell.sysui.ShellCommandHandler;
import com.android.wm.shell.sysui.ShellController;
import com.android.wm.shell.sysui.ShellInit;
import com.android.wm.shell.sysui.ShellInterface;
import com.android.wm.shell.taskview.TaskViewFactoryController;
import com.android.wm.shell.taskview.TaskViewTransitions;
import com.android.wm.shell.transition.DefaultMixedHandler;
import com.android.wm.shell.transition.HomeTransitionObserver;
import com.android.wm.shell.transition.Transitions;
import com.android.wm.shell.unfold.ShellUnfoldProgressProvider;
import com.android.wm.shell.unfold.UnfoldAnimationController;
import com.android.wm.shell.unfold.UnfoldBackgroundController;
import com.android.wm.shell.unfold.UnfoldTransitionHandler;
import com.android.wm.shell.unfold.animation.FullscreenUnfoldTaskAnimator;
import com.android.wm.shell.unfold.animation.SplitTaskUnfoldAnimator;
import com.android.wm.shell.windowdecor.WindowDecorViewModel;
import com.android.wm.shell.windowdecor.viewhost.DefaultWindowDecorViewHostSupplier;
import com.android.wm.shell.windowdecor.viewhost.WindowDecorViewHostSupplier;
import com.google.android.msdl.domain.MSDLPlayer;
import com.google.android.systemui.GoogleServices;
import com.google.android.systemui.ailabs.domain.StrideLockscreenInteractor;
import com.google.android.systemui.ailabs.domain.WarpLockScreenInteractor;
import com.google.android.systemui.ailabs.ui.composable.blueprint.CatwalkKeyguardBlueprint;
import com.google.android.systemui.ailabs.ui.composable.section.StrideAreaSection;
import com.google.android.systemui.ailabs.ui.composable.section.WarpAreaSection;
import com.google.android.systemui.ailabs.ui.composable.viewmodel.StrideComposableViewModel;
import com.google.android.systemui.ailabs.ui.composable.viewmodel.WarpComposableViewModel;
import com.google.android.systemui.ailabs.ui.data.repository.StrideLockscreenRepository;
import com.google.android.systemui.ailabs.ui.data.repository.WarpLockscreenRepository;
import com.google.android.systemui.assist.AssistManagerGoogle;
import com.google.android.systemui.assist.GoogleAssistLogger;
import com.google.android.systemui.assist.OpaEnabledDispatcher;
import com.google.android.systemui.assist.OpaEnabledReceiver;
import com.google.android.systemui.assist.OpaEnabledSettings;
import com.google.android.systemui.assist.uihints.AssistUIView;
import com.google.android.systemui.assist.uihints.AssistantInvocationLightsView;
import com.google.android.systemui.assist.uihints.AssistantPresenceHandler;
import com.google.android.systemui.assist.uihints.CapabilitiesCallbackHandler;
import com.google.android.systemui.assist.uihints.FlingVelocityWrapper;
import com.google.android.systemui.assist.uihints.GoBackHandler;
import com.google.android.systemui.assist.uihints.GoogleDefaultUiController;
import com.google.android.systemui.assist.uihints.LightnessProvider;
import com.google.android.systemui.assist.uihints.NavBarFadeController;
import com.google.android.systemui.assist.uihints.NavBarFader;
import com.google.android.systemui.assist.uihints.NgaMessageHandler;
import com.google.android.systemui.assist.uihints.NgaUiController;
import com.google.android.systemui.assist.uihints.OverlappedElementController;
import com.google.android.systemui.assist.uihints.OverlayUiHost;
import com.google.android.systemui.assist.uihints.SwipeHandler;
import com.google.android.systemui.assist.uihints.TimeoutManager;
import com.google.android.systemui.assist.uihints.TouchInsideHandler;
import com.google.android.systemui.autorotate.AutorotateDataService;
import com.google.android.systemui.autorotate.DataLogger;
import com.google.android.systemui.biometrics.DeviceEntryUnlockTrackerViewBinderGoogle;
import com.google.android.systemui.biometrics.domain.BiometricUnlockTrackerImpl;
import com.google.android.systemui.biometrics.domain.DeviceEntryUnlockStateMachine;
import com.google.android.systemui.biometrics.domain.DeviceEntryUnlockTrackerInteractorGoogle;
import com.google.android.systemui.biometrics.repository.DeviceEntryUnlockTrackerRepositoryGoogle;
import com.google.android.systemui.columbus.ColumbusManager;
import com.google.android.systemui.columbus.ColumbusStarter;
import com.google.android.systemui.columbus.ColumbusStarterImpl;
import com.google.android.systemui.columbus.fetchers.ActionFetcher;
import com.google.android.systemui.columbus.fetchers.ColumbusSettingsFetcher;
import com.google.android.systemui.columbus.fetchers.GateFetcher;
import com.google.android.systemui.columbus.legacy.ColumbusContentObserver;
import com.google.android.systemui.columbus.legacy.ColumbusSettings;
import com.google.android.systemui.columbus.legacy.ColumbusStructuredDataManager;
import com.google.android.systemui.columbus.legacy.ColumbusTargetRequestService;
import com.google.android.systemui.columbus.legacy.ContentResolverWrapper;
import com.google.android.systemui.columbus.sensors.GestureController;
import com.google.android.systemui.columbus.sensors.NoOpGestureSensor;
import com.google.android.systemui.controls.GoogleControlsTileResourceConfigurationImpl;
import com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl;
import com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl;
import com.google.android.systemui.dreamliner.DockAlignmentController;
import com.google.android.systemui.dreamliner.DockObserver;
import com.google.android.systemui.dreamliner.WirelessChargerCommander;
import com.google.android.systemui.dreams.LockscreenWallpaperDreamService;
import com.google.android.systemui.elmyra.ServiceConfigurationGoogle;
import com.google.android.systemui.elmyra.SnapshotConfiguration;
import com.google.android.systemui.elmyra.actions.Action;
import com.google.android.systemui.elmyra.actions.CameraAction;
import com.google.android.systemui.elmyra.actions.LaunchOpa;
import com.google.android.systemui.elmyra.actions.SettingsAction;
import com.google.android.systemui.elmyra.actions.SetupWizardAction;
import com.google.android.systemui.elmyra.actions.UnpinNotifications;
import com.google.android.systemui.elmyra.feedback.AssistInvocationEffect;
import com.google.android.systemui.elmyra.feedback.OpaHomeButton;
import com.google.android.systemui.elmyra.feedback.OpaLockscreen;
import com.google.android.systemui.elmyra.gates.CameraVisibility;
import com.google.android.systemui.elmyra.gates.ChargingState;
import com.google.android.systemui.elmyra.gates.Gate;
import com.google.android.systemui.elmyra.gates.LockTask;
import com.google.android.systemui.elmyra.gates.NavigationBarVisibility;
import com.google.android.systemui.elmyra.gates.NonGesturalNavigation;
import com.google.android.systemui.elmyra.gates.PowerSaveState;
import com.google.android.systemui.elmyra.gates.PowerState;
import com.google.android.systemui.elmyra.gates.SetupWizard;
import com.google.android.systemui.elmyra.gates.SystemKeyPress;
import com.google.android.systemui.elmyra.gates.TelephonyActivity;
import com.google.android.systemui.elmyra.gates.UsbState;
import com.google.android.systemui.elmyra.gates.WakeMode;
import com.google.android.systemui.elmyra.sensors.CHREGestureSensor;
import com.google.android.systemui.elmyra.sensors.GestureSensor;
import com.google.android.systemui.elmyra.sensors.JNIGestureSensor;
import com.google.android.systemui.elmyra.sensors.config.GestureConfiguration;
import com.google.android.systemui.elmyra.sensors.config.ScreenStateAdjustment;
import com.google.android.systemui.fingerprint.FingerprintInteractiveToAuthProviderGoogle;
import com.google.android.systemui.gesture.GestureModule_ProvidsBackGestureTfClassifierProviderFactory;
import com.google.android.systemui.keyguard.data.repository.AmbientIndicationRepository;
import com.google.android.systemui.keyguard.domain.interactor.AmbientIndicationInteractor;
import com.google.android.systemui.lowlightclock.ChargingStatusProvider;
import com.google.android.systemui.lowlightclock.LowLightClockDreamService;
import com.google.android.systemui.power.BatteryEventClient;
import com.google.android.systemui.power.BatterySaverConfirmationDialog;
import com.google.android.systemui.power.EnhancedEstimatesGoogleImpl;
import com.google.android.systemui.power.PowerNotificationWarningsGoogleImpl;
import com.google.android.systemui.power.SevereLowBatteryNotification;
import com.google.android.systemui.power.batteryevent.common.module.BatteryEventModuleProvider;
import com.google.android.systemui.power.batteryevent.domain.BatteryEventService;
import com.google.android.systemui.power.batteryevent.domain.BatteryEventStateController;
import com.google.android.systemui.power.batteryevent.repository.EventSourceMonitor;
import com.google.android.systemui.power.batteryevent.repository.FrameworkDataSource;
import com.google.android.systemui.power.batteryevent.repository.GoogleBatteryManagerWrapperImpl;
import com.google.android.systemui.power.batteryevent.repository.HalDataSource;
import com.google.android.systemui.power.batteryevent.repository.SettingsDataSource;
import com.google.android.systemui.power.batteryevent.repository.SystemEventDataSource;
import com.google.android.systemui.power.batteryhealth.HealthManager;
import com.google.android.systemui.power.batteryhealth.HealthService;
import com.google.android.systemui.power.batteryhealth.HealthUpdateReceiver;
import com.google.android.systemui.qs.launcher.LauncherTileService;
import com.google.android.systemui.qs.pipeline.domain.autoaddable.ReverseChargingAutoAddable;
import com.google.android.systemui.qs.tiles.BatterySaverTileGoogle;
import com.google.android.systemui.qs.tiles.OverlayToggleTile;
import com.google.android.systemui.qs.tiles.ReverseChargingTile;
import com.google.android.systemui.qs.tiles.RotationLockTileGoogle;
import com.google.android.systemui.qs.tiles.impl.battery.domain.interactor.BatterySaverTileDataInteractorGoogle;
import com.google.android.systemui.qs.ui.activity.QSActivity;
import com.google.android.systemui.qs.ui.viewmodel.GridLayoutSelectorViewModel;
import com.google.android.systemui.reversecharging.ReverseChargingController;
import com.google.android.systemui.reversecharging.ReverseChargingViewController;
import com.google.android.systemui.screenshot.ScreenshotNotificationSmartActionsProviderGoogle;
import com.google.android.systemui.screenshot.ThumbnailObserverGoogle;
import com.google.android.systemui.smartspace.AlarmAppSearchController;
import com.google.android.systemui.smartspace.BcSmartspaceDataProvider;
import com.google.android.systemui.smartspace.DateSmartspaceDataProvider;
import com.google.android.systemui.smartspace.KeyguardMediaViewController;
import com.google.android.systemui.smartspace.KeyguardSmartspaceStartable;
import com.google.android.systemui.smartspace.KeyguardZenAlarmViewController;
import com.google.android.systemui.smartspace.NextClockAlarmController;
import com.google.android.systemui.smartspace.WeatherSmartspaceDataProvider;
import com.google.android.systemui.smartspace.dagger.SmartspaceGoogleModule_ProvideGlanceableHubBcSmartspaceDataPluginFactory;
import com.google.android.systemui.smartspace.log.NextClockAlarmControllerLogger;
import com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle;
import com.google.android.systemui.statusbar.phone.CentralSurfacesGoogle;
import com.google.android.systemui.statusbar.phone.CentralSurfacesGoogleModule_ProvideHealthManagerFactory;
import com.google.android.systemui.statusbar.phone.CentralSurfacesGoogleModule_ProvideReverseChargingViewControllerOptionalFactory;
import com.google.android.systemui.statusbar.phone.WallpaperNotifier;
import com.google.android.systemui.statusbar.policy.GooglePolicyModule_ProvideBatteryControllerFactory;
import com.google.android.systemui.theme.ThemeOverlayControllerGoogle;
import dagger.Lazy;
import dagger.internal.DelegateFactory;
import dagger.internal.DoubleCheck;
import dagger.internal.MapBuilder;
import dagger.internal.Preconditions;
import dagger.internal.Provider;
import dagger.internal.SetBuilder;
import java.time.Clock;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.function.Function;
import java.util.function.Supplier;
import kotlin.Pair;
import kotlin.ResultKt;
import kotlin.Unit;
import kotlin.collections.CollectionsKt;
import kotlin.collections.CollectionsKt__CollectionsKt;
import kotlin.collections.CollectionsKt__IterablesKt;
import kotlin.collections.EmptyIterator;
import kotlin.collections.EmptyList;
import kotlin.collections.EmptySet;
import kotlin.collections.MapsKt;
import kotlin.collections.SetsKt;
import kotlin.coroutines.Continuation;
import kotlin.coroutines.CoroutineContext;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.jvm.functions.Function2;
import kotlin.jvm.internal.Intrinsics;
import kotlinx.coroutines.BuildersKt;
import kotlinx.coroutines.CoroutineDispatcher;
import kotlinx.coroutines.CoroutineScope;
import kotlinx.coroutines.ExecutorsKt;
import kotlinx.coroutines.android.HandlerContext;
import kotlinx.coroutines.android.HandlerDispatcherKt;
import kotlinx.coroutines.flow.FlowCollector;
import kotlinx.coroutines.flow.ReadonlyStateFlow;

/* compiled from: go/retraceme 97024faaf470985feb378c0f604e66d2eca678dbbb151206fad2ab4525fd6f86 */
/* loaded from: classes2.dex */
public final class DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl {
    public final Provider compatUIConfigurationProvider;
    public final Provider compatUIShellCommandHandlerProvider;
    public final Provider dockStateReaderProvider;
    public final SwitchingProvider dynamicOverrideOptionalOfUnfoldAnimationControllerProvider;
    public final SwitchingProvider dynamicOverrideOptionalOfUnfoldTransitionHandlerProvider;
    public final Provider pipDisplayLayoutStateProvider;
    public final Provider provideActivityEmbeddingControllerProvider;
    public final Provider provideActivityOrientationHandlerProvider;
    public final Provider provideAppHandleEducationControllerProvider;
    public final Provider provideAppHandleEducationDatastoreRepositoryProvider;
    public final Provider provideAppHandleEducationFilterProvider;
    public final Provider provideAppHandleRepositoryProvider;
    public final Provider provideApplicationScopeProvider;
    public final Provider provideBackAnimationBackgroundProvider;
    public final Provider provideBackAnimationControllerProvider;
    public final Provider provideBackAnimationProvider;
    public final Provider provideBackgroundCoroutineScopeProvider;
    public final Provider provideBubbleControllerProvider;
    public final Provider provideBubbleDataProvider;
    public final Provider provideBubbleEducationProvider;
    public final Provider provideBubbleLoggerProvider;
    public final Provider provideBubblePositionerProvider;
    public final Provider provideBubblesProvider;
    public final Provider provideCompatUIComponentFactoryProvider;
    public final Provider provideCompatUIComponentIdGeneratorProvider;
    public final Provider provideCompatUIControllerProvider;
    public final Provider provideCompatUIRepositoryProvider;
    public final Provider provideCompatUIStateProvider;
    public final Provider provideCompatUIStatusManagerProvider;
    public final Provider provideDesktopModeDragAndDropTransitionHandlerProvider;
    public final Provider provideDesktopModeEventLoggerProvider;
    public final Provider provideDesktopModeLoggerTransitionObserverProvider;
    public final Provider provideDesktopModeProvider;
    public final Provider provideDesktopModeTaskRepositoryProvider;
    public final Provider provideDesktopPersistentRepositoryProvider;
    public final Provider provideDesktopTaskRepositoryProvider;
    public final Provider provideDesktopTasksControllerProvider;
    public final Provider provideDesktopTasksLimiterProvider;
    public final Provider provideDesktopTasksTransitionObserverProvider;
    public final Provider provideDevicePostureControllerProvider;
    public final Provider provideDisplayAreaHelperProvider;
    public final Provider provideDisplayControllerProvider;
    public final Provider provideDisplayImeControllerProvider;
    public final Provider provideDisplayInsetsControllerProvider;
    public final Provider provideDisplayLayoutProvider;
    public final Provider provideDragAndDropControllerProvider;
    public final Provider provideDragToDesktopTransitionHandlerProvider;
    public final Provider provideEnterDesktopModeTaskTransitionHandlerProvider;
    public final Provider provideExitDesktopTaskTransitionHandlerProvider;
    public final Provider provideFloatingContentCoordinatorProvider;
    public final Provider provideFreeformComponentsProvider;
    public final Provider provideFreeformComponentsProvider2;
    public final Provider provideFreeformTaskListenerProvider;
    public final Provider provideFreeformTaskTransitionHandlerProvider;
    public final Provider provideFreeformTaskTransitionObserverProvider;
    public final Provider provideFullscreenTaskListenerProvider;
    public final Provider provideGenericLinksParserProvider;
    public final Provider provideGlobalDragListenerProvider;
    public final Provider provideHideDisplayCutoutControllerProvider;
    public final Provider provideHomeTransitionObserverProvider;
    public final Provider provideIconProvider;
    public final Provider provideIndependentShellComponentsToCreateProvider;
    public final Provider provideIndependentShellComponentsToCreateProvider2;
    public final Provider provideKeyguardTransitionHandlerProvider;
    public final Provider provideKeyguardTransitionsProvider;
    public final Provider provideLaunchAdjacentControllerProvider;
    public final Provider provideMixedTransitionHandlerProvider;
    public final Provider provideMixedTransitionHandlerProvider2;
    public final Provider provideMultiInstanceHelperProvider;
    public final Provider provideOneHandedControllerProvider;
    public final Provider provideOneHandedProvider;
    public final Provider providePhonePipKeepClearAlgorithmProvider;
    public final Provider providePip1Provider;
    public final Provider providePip2Provider;
    public final Provider providePipAnimationControllerProvider;
    public final Provider providePipAppOpsListenerProvider;
    public final Provider providePipBoundsStateProvider;
    public final Provider providePipControllerProvider;
    public final Provider providePipMediaControllerProvider;
    public final Provider providePipMotionHelperProvider;
    public final Provider providePipMotionHelperProvider2;
    public final Provider providePipParamsChangedForwarderProvider;
    public final Provider providePipPerfHintControllerProvider;
    public final Provider providePipPhoneMenuControllerProvider;
    public final Provider providePipProvider;
    public final Provider providePipSchedulerProvider;
    public final Provider providePipSnapAlgorithmProvider;
    public final Provider providePipSurfaceTransactionHelperProvider;
    public final Provider providePipTaskListenerProvider;
    public final Provider providePipTaskOrganizerProvider;
    public final Provider providePipTouchHandlerProvider;
    public final Provider providePipTouchHandlerProvider2;
    public final Provider providePipTransitionControllerProvider;
    public final Provider providePipTransitionProvider;
    public final Provider providePipTransitionProvider2;
    public final Provider providePipTransitionStateProvider;
    public final Provider providePipTransitionStateProvider2;
    public final Provider providePipUiEventLoggerProvider;
    public final Provider providePipUiStateChangeControllerProvider;
    public final Provider provideProtoLogControllerProvider;
    public final Provider provideRecentTasksControllerProvider;
    public final Provider provideRecentTasksProvider;
    public final Provider provideRecentsTransitionHandlerProvider;
    public final Provider provideRemoteTransitionsProvider;
    public final Provider provideReturnToDragStartAnimatorProvider;
    public final Provider provideRootDisplayAreaOrganizerProvider;
    public final Provider provideRootTaskDisplayAreaOrganizerProvider;
    public final Provider provideSharedBackgroundExecutorProvider;
    public final Provider provideSharedBackgroundHandlerProvider;
    public final Provider provideShellAnimationExecutorProvider;
    public final Provider provideShellCommandHandlerProvider;
    public final Provider provideShellControllerProvider;
    public final Provider provideShellInitProvider;
    public final Provider provideShellMainChoreographerProvider;
    public final Provider provideShellMainExecutorProvider;
    public final Provider provideShellMainHandlerProvider;
    public final Provider provideShellSplitTaskUnfoldAnimatorProvider;
    public final Provider provideShellSysuiCallbacksProvider;
    public final DelegateFactory provideShellTaskOrganizerProvider = new DelegateFactory();
    public final Provider provideSizeSpecSourceProvider;
    public final Provider provideSplashScreenExecutorProvider;
    public final Provider provideSplitScreenControllerProvider;
    public final Provider provideSplitScreenProvider;
    public final SwitchingProvider provideSplitTaskUnfoldAnimatorBaseProvider;
    public final Provider provideSplitTaskUnfoldAnimatorProvider;
    public final Provider provideStartingSurfaceProvider;
    public final Provider provideStartingWindowControllerProvider;
    public final Provider provideStartingWindowTypeAlgorithmProvider;
    public final Provider provideSyncTransactionQueueProvider;
    public final Provider provideSysUIMainExecutorProvider;
    public final Provider provideSystemPerformanceHinterProvider;
    public final Provider provideSystemWindowsProvider;
    public final Provider provideTabletopModeControllerProvider;
    public final Provider provideTaskStackTransitionObserverProvider;
    public final Provider provideTaskViewFactoryControllerProvider;
    public final Provider provideTaskViewFactoryProvider;
    public final Provider provideTaskViewTransitionsProvider;
    public final Provider provideToggleResizeDesktopTaskTransitionHandlerProvider;
    public final Provider provideTransactionPoolProvider;
    public final Provider provideTransitionsProvider;
    public final Provider provideUnfoldAnimationControllerProvider;
    public final Provider provideUnfoldBackgroundControllerProvider;
    public final Provider provideUnfoldControllerProvider;
    public final Provider provideUnfoldTransitionHandlerProvider;
    public final Provider provideUnfoldTransitionHandlerProvider2;
    public final Provider provideWindowDecorViewHostSupplierProvider;
    public final Provider provideWindowDecorViewModelProvider;
    public final Provider provideWindowManagerShellWrapperProvider;
    public final Provider providerTaskStackListenerImplProvider;
    public final Provider providesDesktopTasksControllerProvider;
    public final Provider providesOneHandedControllerProvider;
    public final Provider providesPipBoundsAlgorithmProvider;
    public final Provider providesPipPhoneMenuControllerProvider;
    public final Provider providesSplitScreenControllerProvider;
    public final HandlerThread setShellMainThread;
    public final DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl sysUIGoogleGlobalRootComponentImpl;
    public final WMShellCoroutinesModule wMShellCoroutinesModule;

    /* compiled from: go/retraceme 97024faaf470985feb378c0f604e66d2eca678dbbb151206fad2ab4525fd6f86 */
    public final class SwitchingProvider implements Provider {
        public final /* synthetic */ int $r8$classId;
        public final int id;
        public final DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl sysUIGoogleGlobalRootComponentImpl;
        public final Object wMComponentImpl;

        public /* synthetic */ SwitchingProvider(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, Object obj, int i, int i2) {
            this.$r8$classId = i2;
            this.sysUIGoogleGlobalRootComponentImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl;
            this.wMComponentImpl = obj;
            this.id = i;
        }

        private final Object get$com$google$android$systemui$dagger$DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider() {
            Object daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77;
            int i = this.id;
            switch (i / 100) {
                case 0:
                    return get0$1();
                case 1:
                    return get1$1();
                case 2:
                    return get2();
                case 3:
                    return get3();
                case 4:
                    return get4();
                case 5:
                    return get5();
                case 6:
                    return get6();
                case 7:
                    return get7();
                case 8:
                    return get8();
                case 9:
                    return get9();
                case 10:
                    return get10();
                case ViewNode.TRANSLATIONX_FIELD_NUMBER /* 11 */:
                    return get11();
                case ViewNode.TRANSLATIONY_FIELD_NUMBER /* 12 */:
                    return get12();
                case ViewNode.SCALEX_FIELD_NUMBER /* 13 */:
                    return get13();
                case ViewNode.SCALEY_FIELD_NUMBER /* 14 */:
                    return get14();
                case 15:
                    return get15();
                case 16:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
                    switch (i) {
                        case 1600:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77(this);
                            break;
                        case 1601:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$78(this);
                            break;
                        case 1602:
                            return new CastAutoAddable((CastControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get());
                        case 1603:
                            return new DataSaverAutoAddable((DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get());
                        case 1604:
                            return new DeviceControlsAutoAddable((DeviceControlsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceControlsControllerImplProvider.get());
                        case 1605:
                            return new DeviceControlsControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get(), (UserContextProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                        case 1606:
                            return new HotspotAutoAddable((HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get());
                        case 1607:
                            return new NightDisplayAutoAddable(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nightDisplayListenerModuleBuilder(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                        case 1608:
                            return new ReduceBrightColorsAutoAddable((ReduceBrightColorsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsControllerImplProvider.get(), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isReduceBrightColorsAvailableProvider.get()).booleanValue());
                        case 1609:
                            return new WalletAutoAddable((WalletControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.walletControllerImplProvider.get());
                        case 1610:
                            return new WalletControllerImpl((QuickAccessWalletClient) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickAccessWalletClientProvider.get());
                        case 1611:
                            return new WorkTileAutoAddable((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (WorkTileRestoreProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.workTileRestoreProcessorProvider.get());
                        case 1612:
                            return new WorkTileRestoreProcessor();
                        case 1613:
                            return new ReverseChargingAutoAddable((BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                        case 1614:
                            return new AutoAddSettingRepository((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$79) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider82.get());
                        case 1615:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$79(this);
                            break;
                        case 1616:
                            return new RestoreReconciliationInteractor((TileSpecSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileSpecSettingsRepositoryProvider.get(), (AutoAddSettingRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.autoAddSettingRepositoryProvider.get(), (QSSettingsRestoredRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSettingsRestoredBroadcastRepositoryProvider.get(), Collections.singleton((RestoreProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.workTileRestoreProcessorProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1649$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                        case 1617:
                            return new QSSettingsRestoredBroadcastRepository((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1649$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                        case 1618:
                            return new SceneContainerStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (DeviceEntryHapticsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryHapticsInteractorProvider.get(), (DeviceUnlockedInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider.get(), (BouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1656$$Nest$msceneLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (DeviceProvisioningInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisioningInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpNotificationInteractor(), (SceneContainerOcclusionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (SceneBackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneBackInteractorProvider.get(), (SessionStorage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSessionStorageProvider.get(), (WindowManagerLockscreenVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityInteractorProvider.get(), (KeyguardEnabledInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardEnabledInteractorProvider.get(), (DismissCallbackRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), (MSDLPlayer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMSDLPlayerProvider.get());
                        case 1619:
                            return new ScrimStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (SceneContainerOcclusionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider.get(), (BiometricUnlockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockInteractorProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (BrightnessMirrorShowingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightnessMirrorShowingInteractorProvider.get(), (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get());
                        case 1620:
                            return new StatusBarStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (SceneContainerOcclusionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider.get(), (DeviceConfigInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigInteractorProvider.get(), (NavigationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationInteractorProvider.get(), (AuthenticationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get());
                        case 1621:
                            Context context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                            KeyguardZenAlarmViewController keyguardZenAlarmViewController = new KeyguardZenAlarmViewController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDateSmartspaceDataPluginProvider.get(), (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeInteractor(), (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideAlarmManagerProvider.get(), new NextClockAlarmController((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.dumpManagerProvider.get(), new AlarmAppSearchController((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainExecutorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get()), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainExecutorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.applicationScopeProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), new NextClockAlarmControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardLogBufferProvider.get())), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainHandlerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.applicationScopeProvider.get());
                            Context context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context;
                            UserTracker userTracker = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                            BcSmartspaceDataPlugin bcSmartspaceDataPlugin = (BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBcSmartspaceDataPluginProvider.get();
                            DelayableExecutor delayableExecutor = (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainDelayableExecutorProvider.get();
                            NotificationMediaManager notificationMediaManager = (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get();
                            return new KeyguardSmartspaceStartable(keyguardZenAlarmViewController, new KeyguardMediaViewController(context2, userTracker, bcSmartspaceDataPlugin, delayableExecutor, notificationMediaManager), new InitializationChecker(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.instrumentationTest.booleanValue()));
                        case 1622:
                            return new UnfoldInitializationStartable((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFoldStateLoggingProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFoldStateLoggerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldBgTransitionProgressProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideProgressForwarderProvider.get());
                        case 1623:
                            return new ShadeStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeTouchLogBufferProvider.get(), (ConfigurationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider.get(), (ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), (ScrimShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimShadeTransitionControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider, (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get(), (DisplayStateInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get());
                        case 1624:
                            LogBufferFactory logBufferFactory = (LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get();
                            logBufferFactory.getClass();
                            return LogBufferFactory.create$default(logBufferFactory, "ShadeTouchLog", 500, false, 8);
                        case 1625:
                            return new ScrimShadeTransitionController((ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get());
                        case 1626:
                            return new UnfoldTraceLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, new FoldStateRepositoryImpl((DeviceFoldStateProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFoldStateProvider.get()), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (DeviceStateRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.deviceStateRepositoryImplProvider.get());
                        case 1627:
                            return new NotificationChannels(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                        case 1628:
                            return new KeyguardRemotePreviewManager((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$80) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardPreviewRendererFactoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                        case 1629:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$80(this);
                            break;
                        case 1630:
                            return new ToAodFoldTransitionInteractor((KeyguardClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider.get());
                        case 1631:
                            return new RetailModeInteractorImpl((RetailModeSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.retailModeSettingsRepositoryProvider.get());
                        case 1632:
                            Optional empty = Optional.empty();
                            Preconditions.checkNotNullFromProvides(empty);
                            return empty;
                        case 1633:
                            return new DreamOverlayStatusBarItemsProvider((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                        case 1634:
                            return new SectionStyleProvider((HighPriorityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.highPriorityProvider.get());
                        case 1635:
                            LogBufferFactory logBufferFactory2 = (LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get();
                            logBufferFactory2.getClass();
                            return LogBufferFactory.create$default(logBufferFactory2, "UnseenNotifLog", 20, false, 8);
                        case 1636:
                            return new DebugModeFilterProvider((CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                        case 1637:
                            Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                            SecureSettings secureSettings = (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get();
                            NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get();
                            SensitiveNotificationProtectionController sensitiveNotificationProtectionController = (SensitiveNotificationProtectionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensitiveNotificationProtectionControllerImplProvider.get();
                            SectionStyleProvider sectionStyleProvider = (SectionStyleProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionStyleProvider.get();
                            UserTracker userTracker2 = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                            return new NotifUiAdjustmentProvider(handler, secureSettings, notificationLockscreenUserManager, sensitiveNotificationProtectionController, sectionStyleProvider, userTracker2);
                        case 1638:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new RemoteInputNotificationRebuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                            break;
                        case 1639:
                            return new NotificationSettingsController((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                        case 1640:
                            return new BigPictureStatsManager((LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                        case 1641:
                            return new UserSwitchDialogController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.adapterProvider, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                        case 1642:
                            CoroutineScope coroutineScope = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpNotificationInteractor();
                            return new KeyguardStatusBarViewModel(coroutineScope, (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardStatusBarInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStatusBarInteractorProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                        case 1643:
                            return new KeyguardStatusBarInteractor((KeyguardStatusBarRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStatusBarRepositoryImplProvider.get());
                        case 1644:
                            return new KeyguardStatusBarRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get(), (UserSwitcherRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherRepositoryImplProvider.get());
                        case 1645:
                            return new CustomTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (IUriGrantsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIUriGrantsManagerProvider.get());
                        case 1646:
                            return new KeyguardKeyboardInteractor((KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get());
                        case 1647:
                            return new FaceAuthAccessibilityDelegate(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider.get());
                        case 1648:
                            return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "NavBarButtonClick");
                        case 1649:
                            return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "NavbarOrientationTrackingLog");
                        case 1650:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new AudioModeInteractor((AudioRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioRepositoryProvider.get());
                            break;
                        case 1651:
                            return new LocalMediaRepositoryFactoryImpl((AudioManagerEventsReceiverImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioManagerIntentsReceiverProvider.get(), new LocalMediaManagerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context, (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get()));
                        case 1652:
                            AudioManagerEventsReceiverImpl audioManagerEventsReceiverImpl = (AudioManagerEventsReceiverImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioManagerIntentsReceiverProvider.get();
                            MediaSessionManager mediaSessionManager = (MediaSessionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getSystemService(MediaSessionManager.class);
                            Preconditions.checkNotNullFromProvides(mediaSessionManager);
                            return new MediaControllerRepositoryImpl(audioManagerEventsReceiverImpl, mediaSessionManager, (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get());
                        case 1653:
                            return new MediaControllerInteractorImpl((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                        case 1654:
                            Context context3 = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get();
                            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$81 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$81 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$81) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider83.get();
                            return new AncSliceRepositoryImpl((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$81.this$0.sysUIGoogleGlobalRootComponentImpl.mainCoroutineContextProvider.get(), new SliceViewManagerWrapper(context3));
                        case 1655:
                            daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$81(this);
                            break;
                        case 1656:
                            return new CaptioningInteractor((CaptioningRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindCaptioningRepositoryProvider.get());
                        case 1657:
                            return new CaptioningRepositoryImpl((UserScopedServiceImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserScopedCaptioningManagerProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                        default:
                            throw new AssertionError(i);
                    }
                    return daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$77;
                default:
                    throw new AssertionError(i);
            }
        }

        @Override // javax.inject.Provider
        public final Object get() {
            DisplayAreaOrganizer phonePipKeepClearAlgorithm;
            Object phonePipMenuController;
            Optional ofNullable;
            Object appHandleEducationController;
            int i = 0;
            int i2 = 3;
            Object obj = null;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            Object obj2 = this.wMComponentImpl;
            int i3 = this.id;
            int i4 = 1;
            switch (this.$r8$classId) {
                case 0:
                    int i5 = i3 / 100;
                    if (i5 == 0) {
                        return get0$2();
                    }
                    if (i5 != 1) {
                        throw new AssertionError(i3);
                    }
                    DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl) obj2;
                    switch (i3) {
                        case 100:
                            Context context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            phonePipKeepClearAlgorithm = new PhonePipKeepClearAlgorithm();
                            phonePipKeepClearAlgorithm.mKeepClearAreaGravityEnabled = SystemProperties.getBoolean("persist.wm.debug.enable_pip_keep_clear_algorithm_gravity", false);
                            Resources resources = context.getResources();
                            phonePipKeepClearAlgorithm.mKeepClearAreasPadding = resources.getDimensionPixelSize(R.dimen.pip_keep_clear_areas_padding);
                            phonePipKeepClearAlgorithm.mImeOffset = resources.getDimensionPixelSize(R.dimen.pip_ime_offset);
                            return phonePipKeepClearAlgorithm;
                        case 101:
                            return new PipTransitionState();
                        case 102:
                            phonePipMenuController = new PhonePipMenuController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipMediaController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMediaControllerProvider.get(), (SystemWindows) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSystemWindowsProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                            return phonePipMenuController;
                        case 103:
                            phonePipKeepClearAlgorithm = new PipMediaController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                            return phonePipKeepClearAlgorithm;
                        case 104:
                            phonePipKeepClearAlgorithm = new SystemWindows((DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get());
                            return phonePipKeepClearAlgorithm;
                        case 105:
                            phonePipKeepClearAlgorithm = new PipUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get());
                            return phonePipKeepClearAlgorithm;
                        case 106:
                            Context context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            ShellInit shellInit = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                            ShellTaskOrganizer shellTaskOrganizer = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                            Transitions transitions = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                            PipBoundsState pipBoundsState = (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get();
                            PipBoundsAlgorithm pipBoundsAlgorithm = (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get();
                            PipTaskListener pipTaskListener = (PipTaskListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskListenerProvider.get();
                            PipScheduler pipScheduler = (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get();
                            com.android.wm.shell.pip2.phone.PipTransitionState pipTransitionState = (com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get();
                            return new PipTransition(context2, shellInit, shellTaskOrganizer, transitions, pipBoundsState, pipBoundsAlgorithm, pipTaskListener, pipScheduler, pipTransitionState);
                        case 107:
                            Context context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            ShellInit shellInit2 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                            ShellCommandHandler shellCommandHandler = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                            ShellController shellController = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                            DisplayController displayController = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                            DisplayInsetsController displayInsetsController = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                            PipBoundsState pipBoundsState2 = (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get();
                            PipBoundsAlgorithm pipBoundsAlgorithm2 = (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get();
                            PipDisplayLayoutState pipDisplayLayoutState = (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get();
                            PipScheduler pipScheduler2 = (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get();
                            TaskStackListenerImpl taskStackListenerImpl = (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get();
                            ShellTaskOrganizer shellTaskOrganizer2 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                            com.android.wm.shell.pip2.phone.PipTransitionState pipTransitionState2 = (com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get();
                            PipTouchHandler pipTouchHandler = (PipTouchHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTouchHandlerProvider.get();
                            ShellExecutor shellExecutor = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                            if (PipUtils.isPip2ExperimentEnabled()) {
                                if (context3.getPackageManager().hasSystemFeature("android.software.picture_in_picture")) {
                                    obj = new PipController(context3, shellInit2, shellCommandHandler, shellController, displayController, displayInsetsController, pipBoundsState2, pipBoundsAlgorithm2, pipDisplayLayoutState, pipScheduler2, taskStackListenerImpl, shellTaskOrganizer2, pipTransitionState2, pipTouchHandler, shellExecutor);
                                } else if (ProtoLogImpl_411527699.Cache.WM_SHELL_PICTURE_IN_PICTURE_enabled[3]) {
                                    ProtoLogImpl_411527699.w(ShellProtoLogGroup.WM_SHELL_PICTURE_IN_PICTURE, -1604738762234449471L, 0, "PipController");
                                }
                                ofNullable = Optional.ofNullable(obj);
                            } else {
                                ofNullable = Optional.empty();
                            }
                            Preconditions.checkNotNullFromProvides(ofNullable);
                            return ofNullable;
                        case 108:
                            return new PipScheduler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (com.android.wm.shell.pip2.phone.PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPhoneMenuControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get());
                        case 109:
                            phonePipMenuController = new com.android.wm.shell.pip2.phone.PhonePipMenuController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipMediaController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMediaControllerProvider.get(), (SystemWindows) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSystemWindowsProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                            return phonePipMenuController;
                        case 110:
                            phonePipMenuController = new com.android.wm.shell.pip2.phone.PipTransitionState((Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                            return phonePipMenuController;
                        case 111:
                            return new PipTouchHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (com.android.wm.shell.pip2.phone.PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPhoneMenuControllerProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get(), (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get(), (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get(), (PipMotionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMotionHelperProvider.get(), (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get());
                        case 112:
                            Context context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            PipBoundsState pipBoundsState3 = (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get();
                            com.android.wm.shell.pip2.phone.PhonePipMenuController phonePipMenuController2 = (com.android.wm.shell.pip2.phone.PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPhoneMenuControllerProvider.get();
                            PipSnapAlgorithm pipSnapAlgorithm = (PipSnapAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSnapAlgorithmProvider.get();
                            FloatingContentCoordinator floatingContentCoordinator = (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get();
                            PipScheduler pipScheduler3 = (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get();
                            Optional optional = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get();
                            return new PipMotionHelper(context4, pipBoundsState3, phonePipMenuController2, pipSnapAlgorithm, floatingContentCoordinator, pipScheduler3, optional, (com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get());
                        case 113:
                            PipDisplayLayoutState pipDisplayLayoutState2 = (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get();
                            ShellExecutor shellExecutor2 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                            Optional optional2 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSystemPerformanceHinterProvider.get();
                            Optional of = optional2.isPresent() ? Optional.of(new PipPerfHintController(pipDisplayLayoutState2, shellExecutor2, (SystemPerformanceHinter) optional2.get())) : Optional.empty();
                            Preconditions.checkNotNullFromProvides(of);
                            return of;
                        case 114:
                            Optional of2 = Optional.of(new PerfHintController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get()).hinter);
                            Preconditions.checkNotNullFromProvides(of2);
                            return of2;
                        case 115:
                            phonePipMenuController = new PipTaskListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get(), (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                            return phonePipMenuController;
                        case 116:
                            phonePipMenuController = new PipUiStateChangeController((com.android.wm.shell.pip2.phone.PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider2.get());
                            return phonePipMenuController;
                        case 117:
                            ShellInit shellInit3 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                            ShellController shellController2 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                            Transitions transitions2 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                            TaskStackListenerImpl taskStackListenerImpl2 = (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get();
                            return new KeyguardTransitionHandler(shellInit3, shellController2, transitions2, taskStackListenerImpl2, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                        case 118:
                            phonePipMenuController = new StartingWindowController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSplashScreenExecutorProvider.get(), (PhoneStartingWindowTypeAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideStartingWindowTypeAlgorithmProvider.get(), (IconProvider) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIconProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get());
                            return phonePipMenuController;
                        case 119:
                            HandlerThread handlerThread = new HandlerThread("wmshell.splashscreen", -10);
                            handlerThread.start();
                            phonePipMenuController = new HandlerExecutor(handlerThread.getThreadHandler());
                            return phonePipMenuController;
                        case 120:
                            Optional empty = Optional.empty();
                            PhoneStartingWindowTypeAlgorithm phoneStartingWindowTypeAlgorithm = empty.isPresent() ? (PhoneStartingWindowTypeAlgorithm) empty.get() : new PhoneStartingWindowTypeAlgorithm();
                            Preconditions.checkNotNullFromProvides(phoneStartingWindowTypeAlgorithm);
                            return phoneStartingWindowTypeAlgorithm;
                        case 121:
                            phonePipKeepClearAlgorithm = new ProtoLogController((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get());
                            return phonePipKeepClearAlgorithm;
                        case 122:
                            return new Object();
                        case 123:
                            final Context context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            Optional optional3 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTaskRepositoryProvider.get();
                            final Transitions transitions3 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                            final ShellTaskOrganizer shellTaskOrganizer3 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                            final ShellInit shellInit4 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                            Optional flatMap = optional3.flatMap(new Function() { // from class: com.android.wm.shell.dagger.WMShellModule$$ExternalSyntheticLambda0
                                @Override // java.util.function.Function
                                public final Object apply(Object obj3) {
                                    return Optional.of(new DesktopTasksTransitionObserver(context5, (DesktopModeTaskRepository) obj3, transitions3, shellTaskOrganizer3, shellInit4));
                                }
                            });
                            Preconditions.checkNotNullFromProvides(flatMap);
                            return flatMap;
                        case 124:
                            AppHandleEducationFilter appHandleEducationFilter = (AppHandleEducationFilter) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideAppHandleEducationFilterProvider.get();
                            appHandleEducationController = new AppHandleEducationController(appHandleEducationFilter, (AppHandleEducationDatastoreRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideAppHandleEducationDatastoreRepositoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideApplicationScopeProvider.get());
                            return appHandleEducationController;
                        case 125:
                            phonePipKeepClearAlgorithm = new AppHandleEducationFilter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AppHandleEducationDatastoreRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideAppHandleEducationDatastoreRepositoryProvider.get());
                            return phonePipKeepClearAlgorithm;
                        case 126:
                            phonePipMenuController = new AppHandleEducationDatastoreRepository(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                            return phonePipMenuController;
                        case 127:
                            Optional map = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesOneHandedControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda1(4));
                            Preconditions.checkNotNullFromProvides(map);
                            return map;
                        case 128:
                            Optional ofNullable2 = PipUtils.isPip2ExperimentEnabled() ? Optional.ofNullable((Pip) ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePip2Provider.get()).orElse(null)) : Optional.ofNullable((Pip) ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePip1Provider.get()).orElse(null));
                            Preconditions.checkNotNullFromProvides(ofNullable2);
                            return ofNullable2;
                        case 129:
                            Context context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            ShellInit shellInit5 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                            ShellCommandHandler shellCommandHandler2 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                            ShellController shellController3 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                            DisplayController displayController2 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                            PipAnimationController pipAnimationController = (PipAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAnimationControllerProvider.get();
                            PipAppOpsListener pipAppOpsListener = (PipAppOpsListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAppOpsListenerProvider.get();
                            PipBoundsAlgorithm pipBoundsAlgorithm3 = (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get();
                            PhonePipKeepClearAlgorithm phonePipKeepClearAlgorithm2 = (PhonePipKeepClearAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePhonePipKeepClearAlgorithmProvider.get();
                            PipBoundsState pipBoundsState4 = (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get();
                            PipDisplayLayoutState pipDisplayLayoutState3 = (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get();
                            PipMediaController pipMediaController = (PipMediaController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMediaControllerProvider.get();
                            PhonePipMenuController phonePipMenuController3 = (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get();
                            PipTaskOrganizer pipTaskOrganizer = (PipTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskOrganizerProvider.get();
                            PipTransitionState pipTransitionState3 = (PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider.get();
                            com.android.wm.shell.pip.phone.PipTouchHandler pipTouchHandler2 = (com.android.wm.shell.pip.phone.PipTouchHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTouchHandlerProvider2.get();
                            PipTransitionController pipTransitionController = (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get();
                            WindowManagerShellWrapper windowManagerShellWrapper = (WindowManagerShellWrapper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowManagerShellWrapperProvider.get();
                            TaskStackListenerImpl taskStackListenerImpl3 = (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get();
                            PipParamsChangedForwarder pipParamsChangedForwarder = (PipParamsChangedForwarder) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipParamsChangedForwarderProvider.get();
                            DisplayInsetsController displayInsetsController2 = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                            TabletopModeController tabletopModeController = (TabletopModeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTabletopModeControllerProvider.get();
                            Optional optional4 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesOneHandedControllerProvider.get();
                            ShellExecutor shellExecutor3 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                            Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                            int i6 = com.android.wm.shell.pip.phone.PipController.$r8$clinit;
                            if (context6.getPackageManager().hasSystemFeature("android.software.picture_in_picture")) {
                                obj = new com.android.wm.shell.pip.phone.PipController(context6, shellInit5, shellCommandHandler2, shellController3, displayController2, pipAnimationController, pipAppOpsListener, pipBoundsAlgorithm3, phonePipKeepClearAlgorithm2, pipBoundsState4, pipDisplayLayoutState3, pipMediaController, phonePipMenuController3, pipTaskOrganizer, pipTransitionState3, pipTouchHandler2, pipTransitionController, windowManagerShellWrapper, taskStackListenerImpl3, pipParamsChangedForwarder, displayInsetsController2, tabletopModeController, optional4, shellExecutor3, handler).mImpl;
                            } else if (ProtoLogImpl_411527699.Cache.WM_SHELL_PICTURE_IN_PICTURE_enabled[3]) {
                                ProtoLogImpl_411527699.w(ShellProtoLogGroup.WM_SHELL_PICTURE_IN_PICTURE, -784520377779406630L, 0, "PipController");
                            }
                            Optional ofNullable3 = Optional.ofNullable(obj);
                            Preconditions.checkNotNullFromProvides(ofNullable3);
                            return ofNullable3;
                        case 130:
                            appHandleEducationController = new PipAppOpsListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, ((com.android.wm.shell.pip.phone.PipTouchHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTouchHandlerProvider2.get()).mMotionHelper, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                            return appHandleEducationController;
                        case 131:
                            phonePipMenuController = new com.android.wm.shell.pip.phone.PipTouchHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get(), (PipTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskOrganizerProvider.get(), (com.android.wm.shell.pip.phone.PipMotionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMotionHelperProvider2.get(), (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get());
                            return phonePipMenuController;
                        case 132:
                            return new PipTaskOrganizer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAnimationControllerProvider.get(), (PipSurfaceTransactionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSurfaceTransactionHelperProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), (PipParamsChangedForwarder) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipParamsChangedForwarderProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                        case 133:
                            return new PipParamsChangedForwarder();
                        case 134:
                            return new com.android.wm.shell.pip.phone.PipMotionHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskOrganizerProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipSnapAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSnapAlgorithmProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get());
                        case 135:
                            phonePipMenuController = new TabletopModeController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (DevicePostureController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDevicePostureControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                            return phonePipMenuController;
                        case 136:
                            appHandleEducationController = new DevicePostureController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                            return appHandleEducationController;
                        case 137:
                            Optional optional5 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipControllerProvider.get();
                            Optional empty2 = optional5.isEmpty() ? Optional.empty() : Optional.ofNullable(((PipController) optional5.get()).mImpl);
                            Preconditions.checkNotNullFromProvides(empty2);
                            return empty2;
                        case 138:
                            Optional map2 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda1(2));
                            Preconditions.checkNotNullFromProvides(map2);
                            return map2;
                        case 139:
                            Optional map3 = Optional.of((BubbleController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda1(i4));
                            Preconditions.checkNotNullFromProvides(map3);
                            return map3;
                        case 140:
                            Optional of3 = Optional.of(((TaskViewFactoryController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskViewFactoryControllerProvider.get()).mImpl);
                            Preconditions.checkNotNullFromProvides(of3);
                            return of3;
                        case 141:
                            return new TaskViewFactoryController((ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (TaskViewTransitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskViewTransitionsProvider.get());
                        case 142:
                            return ((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get()).mImpl;
                        case 143:
                            KeyguardTransitionHandler keyguardTransitionHandler = (KeyguardTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideKeyguardTransitionHandlerProvider.get();
                            keyguardTransitionHandler.getClass();
                            phonePipMenuController = keyguardTransitionHandler.new KeyguardTransitionsImpl();
                            return phonePipMenuController;
                        case 144:
                            Optional of4 = Optional.of(((StartingWindowController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideStartingWindowControllerProvider.get()).mImpl);
                            Preconditions.checkNotNullFromProvides(of4);
                            return of4;
                        case 145:
                            Optional of5 = Optional.of(new DisplayAreaHelperController((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (RootDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootDisplayAreaOrganizerProvider.get()));
                            Preconditions.checkNotNullFromProvides(of5);
                            return of5;
                        case 146:
                            phonePipKeepClearAlgorithm = new RootDisplayAreaOrganizer((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                            return phonePipKeepClearAlgorithm;
                        case 147:
                            Optional map4 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda1(i));
                            Preconditions.checkNotNullFromProvides(map4);
                            return map4;
                        case 148:
                            Optional map5 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda1(i2));
                            Preconditions.checkNotNullFromProvides(map5);
                            return map5;
                        case 149:
                            final Context context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                            final ShellInit shellInit6 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                            final ShellController shellController4 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                            final ShellExecutor shellExecutor4 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                            final Handler handler2 = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundHandlerProvider.get();
                            final BackAnimationBackground backAnimationBackground = (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get();
                            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                            Optional of6 = Optional.of(new ShellBackAnimationRegistry(new DefaultCrossActivityBackAnimation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get()), new CrossTaskBackAnimation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get()), new CustomCrossActivityBackAnimation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get())));
                            final ShellCommandHandler shellCommandHandler3 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                            final Transitions transitions4 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                            final Handler handler3 = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                            Optional map6 = BackAnimationController.IS_ENABLED ? of6.map(new Function() { // from class: com.android.wm.shell.dagger.WMShellBaseModule$$ExternalSyntheticLambda4
                                @Override // java.util.function.Function
                                public final Object apply(Object obj3) {
                                    ShellInit shellInit7 = ShellInit.this;
                                    ShellController shellController5 = shellController4;
                                    ShellExecutor shellExecutor5 = shellExecutor4;
                                    Handler handler4 = handler2;
                                    Context context8 = context7;
                                    BackAnimationBackground backAnimationBackground2 = backAnimationBackground;
                                    ShellCommandHandler shellCommandHandler4 = shellCommandHandler3;
                                    Transitions transitions5 = transitions4;
                                    Handler handler5 = handler3;
                                    return new BackAnimationController(shellInit7, shellController5, shellExecutor5, handler4, ActivityTaskManager.getService(), context8, context8.getContentResolver(), backAnimationBackground2, (ShellBackAnimationRegistry) obj3, shellCommandHandler4, transitions5, handler5);
                                }
                            }) : Optional.empty();
                            Preconditions.checkNotNullFromProvides(map6);
                            return map6;
                        case 150:
                            phonePipMenuController = new BackAnimationBackground((RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get());
                            return phonePipMenuController;
                        case 151:
                            Optional map7 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda1(5));
                            Preconditions.checkNotNullFromProvides(map7);
                            return map7;
                        default:
                            throw new AssertionError(i3);
                    }
                case 1:
                    return get$com$google$android$systemui$dagger$DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider();
                default:
                    if (i3 == 0) {
                        ConstraintLayout constraintLayout = (ConstraintLayout) com.android.internal.util.Preconditions.checkNotNull((ConstraintLayout) ((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get()).inflate(R.layout.dream_overlay_complications_layer, (ViewGroup) null), "R.layout.dream_overlay_complications_layer did not properly inflated");
                        Preconditions.checkNotNullFromProvides(constraintLayout);
                        return constraintLayout;
                    }
                    if (i3 != 1) {
                        throw new AssertionError(i3);
                    }
                    DaggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl daggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl) obj2;
                    ConstraintLayout constraintLayout2 = (ConstraintLayout) ((Provider) daggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl.loggingName).get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    int dimensionPixelSize = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getDimensionPixelSize(R.dimen.dream_overlay_complication_margin);
                    int dimensionPixelSize2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getDimensionPixelSize(R.dimen.dream_overlay_container_padding_start);
                    int dimensionPixelSize3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getDimensionPixelSize(R.dimen.dream_overlay_container_padding_top);
                    int dimensionPixelSize4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getDimensionPixelSize(R.dimen.dream_overlay_container_padding_end);
                    int dimensionPixelSize5 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getDimensionPixelSize(R.dimen.dream_overlay_container_padding_bottom);
                    TouchInsetManager touchInsetManager = (TouchInsetManager) daggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl.lifecycleOwner;
                    return new ComplicationLayoutEngine(constraintLayout2, dimensionPixelSize, dimensionPixelSize2, dimensionPixelSize3, dimensionPixelSize4, dimensionPixelSize5, new TouchInsetManager.TouchInsetSession(touchInsetManager, touchInsetManager.mExecutor), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getInteger(R.integer.complicationFadeInMs), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getInteger(R.integer.complicationFadeOutMs));
            }
        }

        public Object get0$1() {
            Provider provider;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            Provider provider2;
            Map singletonMap;
            Provider provider3;
            Provider provider4;
            DelegateFactory delegateFactory;
            DelegateFactory delegateFactory2;
            Provider provider5;
            Context context;
            Provider provider6;
            DelegateFactory delegateFactory3;
            Provider provider7;
            Provider provider8;
            DelegateFactory delegateFactory4;
            Context context2;
            DelegateFactory delegateFactory5;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            SwitchingProvider switchingProvider2;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            DelegateFactory delegateFactory6;
            DelegateFactory delegateFactory7;
            Provider provider17;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            Provider provider18;
            Provider provider19;
            Context context3;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            DelegateFactory delegateFactory8;
            Provider provider23;
            Provider provider24;
            SwitchingProvider switchingProvider4;
            Provider provider25;
            Provider provider26;
            GlobalSettingsImpl globalSettingsImpl;
            Provider provider27;
            SysUICoroutinesModule sysUICoroutinesModule;
            SysUICoroutinesModule sysUICoroutinesModule2;
            SwitchingProvider switchingProvider5;
            Provider provider28;
            Context context4;
            Provider provider29;
            Provider provider30;
            DelegateFactory delegateFactory9;
            DelegateFactory delegateFactory10;
            DelegateFactory delegateFactory11;
            DelegateFactory delegateFactory12;
            Provider provider31;
            DelegateFactory delegateFactory13;
            Provider provider32;
            Provider provider33;
            Provider provider34;
            Provider provider35;
            Provider provider36;
            DelegateFactory delegateFactory14;
            Provider provider37;
            Provider provider38;
            DelegateFactory delegateFactory15;
            Context context5;
            Provider provider39;
            Provider provider40;
            Provider provider41;
            Provider provider42;
            Provider provider43;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            SwitchingProvider switchingProvider7;
            DelegateFactory delegateFactory16;
            Provider provider44;
            SwitchingProvider switchingProvider8;
            DelegateFactory delegateFactory17;
            Context context6;
            Context context7;
            Provider provider45;
            GlobalSettingsImpl globalSettingsImpl2;
            Provider provider46;
            Provider provider47;
            Provider provider48;
            Context context8;
            Provider provider49;
            Provider provider50;
            Provider provider51;
            Provider provider52;
            Provider provider53;
            Provider provider54;
            Context context9;
            Context context10;
            Provider provider55;
            Provider provider56;
            Context context11;
            Provider provider57;
            DelegateFactory delegateFactory18;
            Provider provider58;
            Provider provider59;
            DelegateFactory delegateFactory19;
            Provider provider60;
            DelegateFactory delegateFactory20;
            Context context12;
            Provider provider61;
            Provider provider62;
            Provider provider63;
            DelegateFactory delegateFactory21;
            Provider provider64;
            DelegateFactory delegateFactory22;
            DelegateFactory delegateFactory23;
            Provider provider65;
            Provider provider66;
            DelegateFactory delegateFactory24;
            DelegateFactory delegateFactory25;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            DelegateFactory delegateFactory26;
            Provider provider70;
            Provider provider71;
            DelegateFactory delegateFactory27;
            DelegateFactory delegateFactory28;
            DelegateFactory delegateFactory29;
            Provider provider72;
            DelegateFactory delegateFactory30;
            Provider provider73;
            Provider provider74;
            Provider provider75;
            Provider provider76;
            DelegateFactory delegateFactory31;
            Provider provider77;
            Context context13;
            DelegateFactory delegateFactory32;
            Provider provider78;
            Provider provider79;
            Provider provider80;
            DelegateFactory delegateFactory33;
            Provider provider81;
            Context context14;
            DelegateFactory delegateFactory34;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            Provider provider85;
            DelegateFactory delegateFactory35;
            Provider provider86;
            DelegateFactory delegateFactory36;
            Provider provider87;
            Provider provider88;
            Provider provider89;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            Provider provider96;
            Provider provider97;
            Provider provider98;
            Provider provider99;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            DelegateFactory delegateFactory37;
            Context context15;
            Provider provider103;
            Provider provider104;
            Provider provider105;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Provider provider110;
            Provider provider111;
            Provider provider112;
            SwitchingProvider switchingProvider9;
            Provider provider113;
            SwitchingProvider switchingProvider10;
            SwitchingProvider switchingProvider11;
            Provider provider114;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider12;
            Provider provider115;
            Provider provider116;
            Context context16;
            Provider provider117;
            Provider provider118;
            DelegateFactory delegateFactory38;
            Provider provider119;
            SwitchingProvider switchingProvider13;
            Context context17;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            Provider provider123;
            Context context18;
            Context context19;
            Provider provider124;
            Provider provider125;
            Provider provider126;
            Provider provider127;
            DelegateFactory delegateFactory39;
            Provider provider128;
            DelegateFactory delegateFactory40;
            Provider provider129;
            DelegateFactory delegateFactory41;
            Provider provider130;
            Provider provider131;
            Provider provider132;
            Provider provider133;
            Provider provider134;
            Provider provider135;
            Provider provider136;
            DelegateFactory delegateFactory42;
            Provider provider137;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider14;
            Provider provider138;
            Provider provider139;
            Provider provider140;
            Provider provider141;
            Provider provider142;
            DelegateFactory delegateFactory43;
            Provider provider143;
            Provider provider144;
            Provider provider145;
            Provider provider146;
            DelegateFactory delegateFactory44;
            Provider provider147;
            Provider provider148;
            Provider provider149;
            SwitchingProvider switchingProvider15;
            SwitchingProvider switchingProvider16;
            Provider provider150;
            DelegateFactory delegateFactory45;
            Provider provider151;
            Provider provider152;
            DelegateFactory delegateFactory46;
            Provider provider153;
            DelegateFactory delegateFactory47;
            Provider provider154;
            DelegateFactory delegateFactory48;
            DelegateFactory delegateFactory49;
            DelegateFactory delegateFactory50;
            Provider provider155;
            DelegateFactory delegateFactory51;
            Provider provider156;
            Provider provider157;
            Provider provider158;
            DelegateFactory delegateFactory52;
            Provider provider159;
            Provider provider160;
            Provider provider161;
            Provider provider162;
            DelegateFactory delegateFactory53;
            Provider provider163;
            Provider provider164;
            DelegateFactory delegateFactory54;
            Provider provider165;
            Context context20;
            Provider provider166;
            Provider provider167;
            DelegateFactory delegateFactory55;
            Provider provider168;
            Provider provider169;
            Provider provider170;
            DelegateFactory delegateFactory56;
            Provider provider171;
            DelegateFactory delegateFactory57;
            Provider provider172;
            Provider provider173;
            Provider provider174;
            Provider provider175;
            Provider provider176;
            Provider provider177;
            Provider provider178;
            DelegateFactory delegateFactory58;
            DelegateFactory delegateFactory59;
            DelegateFactory delegateFactory60;
            Provider provider179;
            DelegateFactory delegateFactory61;
            Provider provider180;
            KeyguardTransitions keyguardTransitions;
            Provider provider181;
            Provider provider182;
            DelegateFactory delegateFactory62;
            DelegateFactory delegateFactory63;
            Provider provider183;
            Provider provider184;
            Provider provider185;
            DelegateFactory delegateFactory64;
            SwitchingProvider switchingProvider17;
            Provider provider186;
            Provider provider187;
            Provider provider188;
            Provider provider189;
            DelegateFactory delegateFactory65;
            Provider provider190;
            DelegateFactory delegateFactory66;
            DelegateFactory delegateFactory67;
            DelegateFactory delegateFactory68;
            Provider provider191;
            Provider provider192;
            Provider provider193;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider18;
            DelegateFactory delegateFactory69;
            DelegateFactory delegateFactory70;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider19;
            Provider provider194;
            DelegateFactory delegateFactory71;
            DelegateFactory delegateFactory72;
            DelegateFactory delegateFactory73;
            Provider provider195;
            Provider provider196;
            Provider provider197;
            Provider provider198;
            DelegateFactory delegateFactory74;
            Provider provider199;
            Provider provider200;
            Provider provider201;
            Provider provider202;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider20;
            Provider provider203;
            Provider provider204;
            Provider provider205;
            Provider provider206;
            GlobalSettingsImpl globalSettingsImpl3;
            DelegateFactory delegateFactory75;
            DelegateFactory delegateFactory76;
            Provider provider207;
            Provider provider208;
            Provider provider209;
            DelegateFactory delegateFactory77;
            DelegateFactory delegateFactory78;
            Context context21;
            Provider provider210;
            DelegateFactory delegateFactory79;
            Provider provider211;
            int displayId;
            Provider provider212;
            Provider provider213;
            DelegateFactory delegateFactory80;
            Provider provider214;
            DelegateFactory delegateFactory81;
            Provider provider215;
            Provider provider216;
            DelegateFactory delegateFactory82;
            Provider provider217;
            DelegateFactory delegateFactory83;
            Provider provider218;
            DelegateFactory delegateFactory84;
            Provider provider219;
            DelegateFactory delegateFactory85;
            Provider provider220;
            Context context22;
            Provider provider221;
            Provider provider222;
            DelegateFactory delegateFactory86;
            Provider provider223;
            DelegateFactory delegateFactory87;
            DelegateFactory delegateFactory88;
            Provider provider224;
            Provider provider225;
            Provider provider226;
            Provider provider227;
            Provider provider228;
            DelegateFactory delegateFactory89;
            Provider provider229;
            Provider provider230;
            Provider provider231;
            DelegateFactory delegateFactory90;
            Provider provider232;
            Provider provider233;
            Provider provider234;
            DelegateFactory delegateFactory91;
            Provider provider235;
            DelegateFactory delegateFactory92;
            Optional optional;
            Provider provider236;
            DelegateFactory delegateFactory93;
            Provider provider237;
            DelegateFactory delegateFactory94;
            Provider provider238;
            DelegateFactory delegateFactory95;
            DelegateFactory delegateFactory96;
            Provider provider239;
            DelegateFactory delegateFactory97;
            DelegateFactory delegateFactory98;
            Provider provider240;
            Provider provider241;
            Provider provider242;
            Provider provider243;
            Provider provider244;
            DelegateFactory delegateFactory99;
            Provider provider245;
            DelegateFactory delegateFactory100;
            Provider provider246;
            Provider provider247;
            Provider provider248;
            DelegateFactory delegateFactory101;
            Provider provider249;
            DelegateFactory delegateFactory102;
            Provider provider250;
            Provider provider251;
            Optional optional2;
            Provider provider252;
            Provider provider253;
            Provider provider254;
            Provider provider255;
            SwitchingProvider switchingProvider21;
            Provider provider256;
            DelegateFactory delegateFactory103;
            Provider provider257;
            DelegateFactory delegateFactory104;
            Provider provider258;
            Provider provider259;
            Provider provider260;
            Provider provider261;
            Provider provider262;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider22;
            Provider provider263;
            Provider provider264;
            Provider provider265;
            Provider provider266;
            Provider provider267;
            Provider provider268;
            NotifPipelineFlags notifPipelineFlags;
            Provider provider269;
            Provider provider270;
            Provider provider271;
            Provider provider272;
            Provider provider273;
            Provider provider274;
            Context context23;
            Provider provider275;
            Provider provider276;
            Provider provider277;
            Provider provider278;
            Context context24;
            Provider provider279;
            DelegateFactory delegateFactory105;
            Provider provider280;
            Provider provider281;
            Provider provider282;
            Provider provider283;
            Context context25;
            Provider provider284;
            Provider provider285;
            DelegateFactory delegateFactory106;
            DelegateFactory delegateFactory107;
            Provider provider286;
            DelegateFactory delegateFactory108;
            DelegateFactory delegateFactory109;
            Provider provider287;
            Provider provider288;
            Provider provider289;
            DelegateFactory delegateFactory110;
            DelegateFactory delegateFactory111;
            DelegateFactory delegateFactory112;
            Provider provider290;
            DelegateFactory delegateFactory113;
            Provider provider291;
            Context context26;
            SwitchingProvider switchingProvider23;
            Provider provider292;
            Provider provider293;
            Provider provider294;
            DelegateFactory delegateFactory114;
            Provider provider295;
            DelegateFactory delegateFactory115;
            Provider provider296;
            DelegateFactory delegateFactory116;
            Provider provider297;
            DelegateFactory delegateFactory117;
            DelegateFactory delegateFactory118;
            SwitchingProvider switchingProvider24;
            Context context27;
            Context context28;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider25;
            Provider provider298;
            DelegateFactory delegateFactory119;
            DelegateFactory delegateFactory120;
            LeakModule leakModule;
            Provider provider299;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider26;
            DelegateFactory delegateFactory121;
            Provider provider300;
            Provider provider301;
            Provider provider302;
            DelegateFactory delegateFactory122;
            Provider provider303;
            Provider provider304;
            Provider provider305;
            DelegateFactory delegateFactory123;
            Provider provider306;
            Provider provider307;
            SwitchingProvider switchingProvider27;
            Provider provider308;
            Provider provider309;
            Provider provider310;
            Set singleton;
            Provider provider311;
            DelegateFactory delegateFactory124;
            Provider provider312;
            Provider provider313;
            DelegateFactory delegateFactory125;
            Provider provider314;
            Provider provider315;
            Provider provider316;
            Provider provider317;
            Provider provider318;
            Provider provider319;
            DelegateFactory delegateFactory126;
            Provider provider320;
            Provider provider321;
            DelegateFactory delegateFactory127;
            DelegateFactory delegateFactory128;
            DelegateFactory delegateFactory129;
            DelegateFactory delegateFactory130;
            DelegateFactory delegateFactory131;
            Provider provider322;
            Provider provider323;
            Context context29;
            Provider provider324;
            Provider provider325;
            Provider provider326;
            DelegateFactory delegateFactory132;
            Provider provider327;
            Provider provider328;
            DelegateFactory delegateFactory133;
            Provider provider329;
            DelegateFactory delegateFactory134;
            Provider provider330;
            Provider provider331;
            Provider provider332;
            DelegateFactory delegateFactory135;
            SwitchingProvider switchingProvider28;
            Provider provider333;
            Provider provider334;
            DelegateFactory delegateFactory136;
            Context unused;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 0:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new BootCompleteCacheImpl((DumpManager) provider.get());
                case 1:
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context30 = (Context) switchingProvider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider;
                    return StatusBarPolicyModule_ProvideGlobalConfigurationControllerFactory.provideGlobalConfigurationController(context30, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$1) provider2.get());
                case 2:
                    return new Object() { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$1
                    };
                case 3:
                    Map m1596$$Nest$mmapOfClassOfAndProviderOfActivity = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1596$$Nest$mmapOfClassOfAndProviderOfActivity(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Map m1599$$Nest$mmapOfClassOfAndProviderOfService = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1599$$Nest$mmapOfClassOfAndProviderOfService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    singletonMap = Collections.singletonMap(OverviewProxyRecentsImpl.class, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyRecentsImplProvider);
                    return ContextComponentResolver_Factory.newInstance(m1596$$Nest$mmapOfClassOfAndProviderOfActivity, m1599$$Nest$mmapOfClassOfAndProviderOfService, singletonMap, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1597$$Nest$mmapOfClassOfAndProviderOfBroadcastReceiver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 4:
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor2 = (Executor) provider4.get();
                    ControlsListingController controlsListingController = (ControlsListingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsListingControllerImplProvider.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider;
                    ControlsController controlsController = (ControlsController) delegateFactory.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ControlsProviderSelectorActivity(executor, executor2, controlsListingController, controlsController, (UserTracker) delegateFactory2.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1637$$Nest$mpanelConfirmationDialogFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 5:
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    return SysUIConcurrencyModule_ProvideBackgroundExecutorFactory.provideBackgroundExecutor((Looper) provider5.get());
                case 6:
                    return SysUIConcurrencyModule_ProvideBgLooperFactory.provideBgLooper();
                case 7:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor3 = (Executor) provider6.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory3.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityTaskManagerProxyProvider;
                    ActivityTaskManagerProxy activityTaskManagerProxy = (ActivityTaskManagerProxy) provider7.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider8.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new ControlsListingControllerImpl(context, executor3, userTracker, activityTaskManagerProxy, dumpManager, (FeatureFlags) delegateFactory4.get());
                case 8:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    IActivityManager iActivityManager = (IActivityManager) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider11.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider12.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider13.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return MultiUserUtilsModule_ProvideUserTrackerFactory.provideUserTracker(context2, delegateFactory5, userManager, iActivityManager, dumpManager2, coroutineScope, coroutineDispatcher, (Handler) switchingProvider2.get());
                case 9:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    SystemPropertiesHelper systemPropertiesHelper = (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindsReaderProvider;
                    ServerFlagReaderImpl serverFlagReaderImpl = (ServerFlagReaderImpl) provider14.get();
                    FlagsCommonModule_ProvidesAllFlagsFactory.providesAllFlags();
                    return new FeatureFlagsClassicRelease(m977$$Nest$mmainResources, systemPropertiesHelper, serverFlagReaderImpl, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1528$$Nest$mconditionalRestarter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 10:
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider15.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return ServerFlagReaderModule_BindsReaderFactory.bindsReader(deviceConfigProxy, ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIsTestHarnessProvider.get()).booleanValue());
                case ViewNode.TRANSLATIONX_FIELD_NUMBER /* 11 */:
                    return new DeviceConfigProxy();
                case ViewNode.TRANSLATIONY_FIELD_NUMBER /* 12 */:
                    PowerRepositoryImpl powerRepositoryImpl = (PowerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerRepositoryImplProvider.get();
                    FalsingCollector falsingCollector = (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController = (ScreenOffAnimationController) delegateFactory6.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new PowerInteractor(powerRepositoryImpl, falsingCollector, screenOffAnimationController, (StatusBarStateController) delegateFactory7.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraGestureHelperProvider);
                case ViewNode.SCALEX_FIELD_NUMBER /* 13 */:
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider17.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context31 = (Context) switchingProvider3.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new PowerRepositoryImpl(powerManager, context31, systemClock, (BroadcastDispatcher) provider19.get());
                case ViewNode.SCALEY_FIELD_NUMBER /* 14 */:
                    return new SystemClockImpl();
                case 15:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor4 = (Executor) provider20.get();
                    Looper looper = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBroadcastRunningLooperProvider.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBroadcastRunningExecutorProvider;
                    Executor executor5 = (Executor) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider22.get();
                    BroadcastDispatcherLogger m1511$$Nest$mbroadcastDispatcherLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1511$$Nest$mbroadcastDispatcherLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new BroadcastDispatcher(context3, executor4, looper, executor5, dumpManager3, m1511$$Nest$mbroadcastDispatcherLogger, (UserTracker) delegateFactory8.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1638$$Nest$mpendingRemovalStore(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 16:
                    return SysUIConcurrencyModule_ProvideBroadcastRunningLooperFactory.provideBroadcastRunningLooper();
                case ViewNode.CLIPCHILDREN_FIELD_NUMBER /* 17 */:
                    return SysUIConcurrencyModule_ProvideBroadcastRunningExecutorFactory.provideBroadcastRunningExecutor((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBroadcastRunningLooperProvider.get());
                case ViewNode.VISIBILITY_FIELD_NUMBER /* 18 */:
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideBroadcastDispatcherLogBufferFactory.provideBroadcastDispatcherLogBuffer((LogBufferFactory) provider23.get());
                case ViewNode.ELEVATION_FIELD_NUMBER /* 19 */:
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new LogBufferFactory((DumpManager) provider24.get(), (LogcatEchoTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLogcatEchoTrackerProvider.get());
                case 20:
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logcatEchoTrackerDebugProvider;
                    return LogModule_ProvideLogcatEchoTrackerFactory.provideLogcatEchoTracker(DoubleCheck.lazy(switchingProvider4));
                case 21:
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider25.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider26.get();
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    return new LogcatEchoTrackerDebug(coroutineScope2, coroutineDispatcher2, globalSettingsImpl, (CommandRegistry) provider27.get());
                case 22:
                    sysUICoroutinesModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule;
                    return SysUICoroutinesModule_BgDispatcherFactory.bgDispatcher(sysUICoroutinesModule);
                case 23:
                    sysUICoroutinesModule2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule;
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return SysUICoroutinesModule_SettingsBgDispatcherFactory.settingsBgDispatcher(sysUICoroutinesModule2, (Handler) switchingProvider5.get());
                case 24:
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    return SysUIConcurrencyModule_ProvideBgHandlerFactory.provideBgHandler((Looper) provider28.get());
                case 25:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new CommandRegistry(context4, (Executor) provider29.get());
                case 26:
                    FalsingDataProvider falsingDataProvider = (FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider30.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory9.get();
                    HistoryTracker historyTracker = (HistoryTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.historyTrackerProvider.get();
                    ProximitySensor proximitySensor = (ProximitySensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideProximitySensorProvider.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory10.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory11.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Lazy lazy = DoubleCheck.lazy(delegateFactory12);
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController = (BatteryController) provider31.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockManager dockManager = (DockManager) delegateFactory13.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider32.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter = (JavaAdapter) provider33.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock2 = (SystemClock) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    Lazy lazy2 = DoubleCheck.lazy(provider35);
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    Lazy lazy3 = DoubleCheck.lazy(provider36);
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return FalsingCollectorImpl_Factory.newInstance(falsingDataProvider, falsingManager, keyguardUpdateMonitor, historyTracker, proximitySensor, statusBarStateController, keyguardStateController, lazy, batteryController, dockManager, delayableExecutor, javaAdapter, systemClock2, lazy2, lazy3, DoubleCheck.lazy(delegateFactory14), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider));
                case 27:
                    DisplayMetrics m976$$Nest$mdisplayMetrics = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController2 = (BatteryController) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFoldStateListenerProvider;
                    DeviceStateManager.FoldStateListener foldStateListener = (DeviceStateManager.FoldStateListener) provider38.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    return new FalsingDataProvider(m976$$Nest$mdisplayMetrics, batteryController2, foldStateListener, (DockManager) delegateFactory15.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1609$$Nest$mnamedBoolean4(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 28:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    EnhancedEstimates enhancedEstimates = (EnhancedEstimates) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.enhancedEstimatesGoogleImplProvider.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager2 = (PowerManager) provider39.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider40.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController = (DemoModeController) provider41.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider42.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batteryControllerLoggerProvider;
                    BatteryControllerLogger batteryControllerLogger = (BatteryControllerLogger) provider43.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider6.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider7.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory16.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reverseChargingControllerProvider;
                    ReverseChargingController reverseChargingController = (ReverseChargingController) provider44.get();
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider8.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return GooglePolicyModule_ProvideBatteryControllerFactory.provideBatteryController(context5, enhancedEstimates, powerManager2, broadcastDispatcher, demoModeController, dumpManager4, batteryControllerLogger, handler, handler2, userTracker2, reverseChargingController, secureSettings, (UserTracker) delegateFactory17.get());
                case 29:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new EnhancedEstimatesGoogleImpl(context6);
                case 30:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager5 = (DumpManager) provider45.get();
                    globalSettingsImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return DemoModeModule_ProvideDemoModeControllerFactory.provideDemoModeController(context7, dumpManager5, globalSettingsImpl2, (BroadcastDispatcher) provider46.get());
                case 31:
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerLogProvider;
                    return new BatteryControllerLogger((LogBuffer) provider47.get());
                case 32:
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPolicyModule_ProvideBatteryControllerLogFactory.provideBatteryControllerLog((LogBufferFactory) provider48.get());
                case 33:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider49.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideReverseWirelessChargerProvider;
                    Optional optional3 = (Optional) provider50.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager = (AlarmManager) provider51.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUsbManagerProvider;
                    Optional optional4 = (Optional) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor6 = (Executor) provider53.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new ReverseChargingController(context8, broadcastDispatcher2, optional3, alarmManager, optional4, executor6, (Executor) provider54.get(), (BootCompleteCacheImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bootCompleteCacheImplProvider.get(), (IThermalService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIThermalServiceProvider.get());
                case 34:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return SystemUIGoogleModule_ProvideReverseWirelessChargerFactory.provideReverseWirelessCharger(context9);
                case 35:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return SystemUIGoogleModule_ProvideUsbManagerFactory.provideUsbManager(context10);
                case 36:
                    return SystemUIGoogleModule_ProvideIThermalServiceFactory.provideIThermalService();
                case 37:
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver = (ContentResolver) provider55.get();
                    SystemUIModule$$ExternalSyntheticLambda0 m1530$$Nest$mcurrentUserIdProvider = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1530$$Nest$mcurrentUserIdProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsBgDispatcherProvider;
                    return SecureSettingsImpl_Factory.newInstance(contentResolver, m1530$$Nest$mcurrentUserIdProvider, (CoroutineDispatcher) provider56.get());
                case 38:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Optional optional5 = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWirelessChargerProvider.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wirelessChargerCommanderProvider;
                    WirelessChargerCommander wirelessChargerCommander = (WirelessChargerCommander) provider57.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) delegateFactory18.get();
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVisualInterruptionDecisionProvider);
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider59.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory19.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockAlignmentControllerProvider;
                    DockAlignmentController dockAlignmentController = (DockAlignmentController) provider60.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new DockObserver(context11, optional5, wirelessChargerCommander, statusBarStateController2, lazy4, configurationController, delayableExecutor2, keyguardStateController2, dockAlignmentController, (UserTracker) delegateFactory20.get());
                case 39:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return SystemUIGoogleModule_ProvideWirelessChargerFactory.provideWirelessCharger(context12);
                case 40:
                    return new WirelessChargerCommander((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWirelessChargerProvider.get());
                case 41:
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider61.get();
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    Lazy lazy5 = DoubleCheck.lazy(provider62);
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter2 = (JavaAdapter) provider63.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    Lazy lazy6 = DoubleCheck.lazy(delegateFactory21);
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    Lazy lazy7 = DoubleCheck.lazy(provider64);
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Lazy lazy8 = DoubleCheck.lazy(delegateFactory22);
                    Lazy lazy9 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider);
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    Lazy lazy10 = DoubleCheck.lazy(delegateFactory23);
                    Lazy lazy11 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider);
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider;
                    return new StatusBarStateControllerImpl(uiEventLogger, lazy5, javaAdapter2, lazy6, lazy7, lazy8, lazy9, lazy10, lazy11, DoubleCheck.lazy(provider65), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneBackInteractorProvider));
                case 42:
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new JavaAdapter((CoroutineScope) provider66.get());
                case 43:
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl = (KeyguardRepositoryImpl) delegateFactory24.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory25.get();
                    KeyguardBouncerRepositoryImpl keyguardBouncerRepositoryImpl = (KeyguardBouncerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBouncerRepositoryImplProvider.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    ShadeRepository shadeRepository = (ShadeRepository) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider69.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromGoneTransitionInteractorProvider;
                    Provider provider335 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromLockscreenTransitionInteractorProvider;
                    Provider provider336 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromOccludedTransitionInteractorProvider;
                    Provider provider337 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerInteractorProvider;
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new KeyguardInteractor(keyguardRepositoryImpl, powerInteractor, keyguardBouncerRepositoryImpl, configurationInteractor, shadeRepository, keyguardTransitionInteractor, delegateFactory26, provider70, provider335, provider336, provider337, (CoroutineScope) provider71.get());
                case 44:
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController3 = (StatusBarStateController) delegateFactory27.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory28.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory29.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeTransitionListenerProvider;
                    DozeTransitionListener dozeTransitionListener = (DozeTransitionListener) provider72.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController = (AuthController) delegateFactory30.get();
                    DreamOverlayCallbackController dreamOverlayCallbackController = (DreamOverlayCallbackController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayCallbackControllerProvider.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider74.get();
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock3 = (SystemClock) provider75.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider;
                    FacePropertyRepositoryImpl facePropertyRepositoryImpl = (FacePropertyRepositoryImpl) provider76.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory31.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    return new KeyguardRepositoryImpl(statusBarStateController3, keyguardStateController3, keyguardUpdateMonitor2, dozeTransitionListener, authController, dreamOverlayCallbackController, coroutineDispatcher3, coroutineScope3, systemClock3, facePropertyRepositoryImpl, userTracker3, (LockPatternUtils) provider77.get());
                case 45:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor3 = (KeyguardUpdateMonitor) delegateFactory32.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider78.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    Lazy lazy12 = DoubleCheck.lazy(provider79);
                    KeyguardUpdateMonitorLogger keyguardUpdateMonitorLogger = new KeyguardUpdateMonitorLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardUpdateMonitorLogBufferProvider.get());
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager6 = (DumpManager) provider80.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory33.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new KeyguardStateControllerImpl(context13, keyguardUpdateMonitor3, lockPatternUtils, lazy12, keyguardUpdateMonitorLogger, dumpManager6, featureFlags, (SelectedUserInteractor) provider81.get());
                case 46:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory34.get();
                    Looper provideMainLooper = GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager7 = (DumpManager) provider83.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor7 = (Executor) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor8 = (Executor) provider85.get();
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController4 = (StatusBarStateController) delegateFactory35.get();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils2 = (LockPatternUtils) provider86.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController2 = (AuthController) delegateFactory36.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider;
                    TelephonyListenerManager telephonyListenerManager = (TelephonyListenerManager) provider87.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) provider88.get();
                    LatencyTracker latencyTracker = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeUnlockConfigProvider;
                    ActiveUnlockConfig activeUnlockConfig = (ActiveUnlockConfig) provider89.get();
                    KeyguardUpdateMonitorLogger keyguardUpdateMonitorLogger2 = new KeyguardUpdateMonitorLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardUpdateMonitorLogBufferProvider.get());
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider90.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider;
                    TrustManager trustManager = (TrustManager) provider92.get();
                    SubscriptionManager subscriptionManager = (SubscriptionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSubscriptionManagerProvider.get();
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager2 = (UserManager) provider93.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider;
                    IDreamManager iDreamManager = (IDreamManager) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) provider95.get();
                    SensorPrivacyManager sensorPrivacyManager = (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager = (TelephonyManager) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider97.get();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    FingerprintManager fingerprintManager = (FingerprintManager) provider98.get();
                    BiometricManager biometricManager = (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get();
                    FaceWakeUpTriggersConfig faceWakeUpTriggersConfig = (FaceWakeUpTriggersConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceWakeUpTriggersConfigImplProvider.get();
                    com.android.systemui.statusbar.policy.DevicePostureController devicePostureController = (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get();
                    Optional of = Optional.of((FingerprintInteractiveToAuthProviderGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFingerprintInteractiveToAuthProvider.get());
                    TaskStackChangeListeners taskStackChangeListeners = (TaskStackChangeListeners) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideTaskStackChangeListenersProvider.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider99.get();
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider;
                    IActivityTaskManager iActivityTaskManager = (IActivityTaskManager) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return KeyguardUpdateMonitor_Factory.newInstance(context14, userTracker4, provideMainLooper, broadcastDispatcher3, dumpManager7, executor7, executor8, statusBarStateController4, lockPatternUtils2, authController2, telephonyListenerManager, interactionJankMonitor, latencyTracker, activeUnlockConfig, keyguardUpdateMonitorLogger2, uiEventLogger2, provider91, trustManager, subscriptionManager, userManager2, iDreamManager, devicePolicyManager, sensorPrivacyManager, telephonyManager, packageManager, fingerprintManager, biometricManager, faceWakeUpTriggersConfig, devicePostureController, of, taskStackChangeListeners, selectedUserInteractor, iActivityTaskManager, provider101, provider102, delegateFactory37);
                case 47:
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider103.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider;
                    ExecutionImpl executionImpl = (ExecutionImpl) provider104.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider105.get();
                    ActivityTaskManager activityTaskManager = (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get();
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager = (WindowManager) provider106.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    FingerprintManager fingerprintManager2 = (FingerprintManager) provider107.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider;
                    FaceManager faceManager = (FaceManager) provider108.get();
                    DelegateFactory delegateFactory137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsControllerProvider;
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager = (DisplayManager) provider109.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider110.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager3 = (UserManager) provider111.get();
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils3 = (LockPatternUtils) provider112.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsLoggerProvider;
                    Lazy lazy13 = DoubleCheck.lazy(switchingProvider9);
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logContextInteractorImplProvider;
                    Lazy lazy14 = DoubleCheck.lazy(provider113);
                    Provider provider338 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptSelectorInteractorImplProvider;
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.credentialViewModelProvider;
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptViewModelProvider;
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor2 = (InteractionJankMonitor) provider114.get();
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider12.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor3 = (DelayableExecutor) provider115.get();
                    UdfpsUtils udfpsUtils = new UdfpsUtils();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    return new AuthController(context15, coroutineScope4, executionImpl, commandQueue, activityTaskManager, windowManager, fingerprintManager2, faceManager, delegateFactory137, displayManager, wakefulnessLifecycle, userManager3, lockPatternUtils3, lazy13, lazy14, provider338, switchingProvider10, switchingProvider11, interactionJankMonitor2, handler3, delayableExecutor3, udfpsUtils, (VibratorHelper) provider116.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureProvider), (MSDLPlayer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMSDLPlayerProvider.get());
                case 48:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker = (DisplayTracker) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry = (CommandRegistry) provider118.get();
                    DumpHandler m1549$$Nest$mdumpHandler = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1549$$Nest$mdumpHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return CentralSurfacesDependenciesModule_ProvideCommandQueueFactory.provideCommandQueue(context16, displayTracker, commandRegistry, m1549$$Nest$mdumpHandler, DoubleCheck.lazy(delegateFactory38));
                case 49:
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager2 = (DisplayManager) provider119.get();
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return MultiUserUtilsModule_ProvideDisplayTrackerFactory.provideDisplayTracker(displayManager2, (Handler) switchingProvider13.get());
                case 50:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager8 = (DumpManager) provider120.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock4 = (SystemClock) provider121.get();
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.filesProvider;
                    return new LogBufferEulogizer(context17, dumpManager8, systemClock4, (Files) provider122.get());
                case 51:
                    return new Files();
                case 52:
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager9 = (DumpManager) provider123.get();
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new SystemUIConfigDumpable(dumpManager9, context18, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getStartables());
                case 53:
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider;
                    ExecutionImpl executionImpl2 = (ExecutionImpl) provider124.get();
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    LayoutInflater layoutInflater = (LayoutInflater) provider125.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    FingerprintManager fingerprintManager3 = (FingerprintManager) provider126.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider127.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController5 = (StatusBarStateController) delegateFactory39.get();
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor4 = (DelayableExecutor) provider128.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory40.get();
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager10 = (DumpManager) provider129.get();
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor4 = (KeyguardUpdateMonitor) delegateFactory41.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager2 = (FalsingManager) provider130.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager3 = (PowerManager) provider131.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider132.get();
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController = (LockscreenShadeTransitionController) provider133.get();
                    ScreenLifecycle screenLifecycle = (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get();
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider134.get();
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsHapticsSimulatorProvider;
                    UdfpsHapticsSimulator udfpsHapticsSimulator = (UdfpsHapticsSimulator) provider135.get();
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsShellProvider;
                    UdfpsShell udfpsShell = (UdfpsShell) provider136.get();
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory42.get();
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager3 = (DisplayManager) provider137.get();
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler4 = (Handler) switchingProvider14.get();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController2 = (ConfigurationController) provider138.get();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock5 = (SystemClock) provider139.get();
                    UnlockedScreenOffAnimationController unlockedScreenOffAnimationController = (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get();
                    SystemUIDialogManager systemUIDialogManager = (SystemUIDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider.get();
                    LatencyTracker latencyTracker2 = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get();
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    ActivityTransitionAnimator activityTransitionAnimator = (ActivityTransitionAnimator) provider140.get();
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesPluginExecutorProvider;
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider142.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory43.get();
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.singlePointerTouchProcessorProvider;
                    SinglePointerTouchProcessor singlePointerTouchProcessor = (SinglePointerTouchProcessor) provider143.get();
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    SessionTracker sessionTracker = (SessionTracker) provider144.get();
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider145.get();
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    InputManager inputManager = (InputManager) provider146.get();
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor = (DeviceEntryFaceAuthInteractor) delegateFactory44.get();
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsKeyguardAccessibilityDelegateProvider;
                    UdfpsKeyguardAccessibilityDelegate udfpsKeyguardAccessibilityDelegate = (UdfpsKeyguardAccessibilityDelegate) provider147.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor2 = (SelectedUserInteractor) provider148.get();
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider149.get();
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsTouchOverlayViewModelProvider;
                    Lazy lazy15 = DoubleCheck.lazy(switchingProvider15);
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultUdfpsTouchOverlayViewModelProvider;
                    Lazy lazy16 = DoubleCheck.lazy(switchingProvider16);
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    UdfpsOverlayInteractor udfpsOverlayInteractor = (UdfpsOverlayInteractor) provider150.get();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory45.get();
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new UdfpsController(context19, executionImpl2, layoutInflater, fingerprintManager3, viewCaptureAwareWindowManager, statusBarStateController5, delayableExecutor4, statusBarKeyguardViewManager, dumpManager10, keyguardUpdateMonitor4, falsingManager2, powerManager3, accessibilityManager, lockscreenShadeTransitionController, screenLifecycle, vibratorHelper, udfpsHapticsSimulator, udfpsShell, keyguardStateController4, displayManager3, handler4, configurationController2, systemClock5, unlockedScreenOffAnimationController, systemUIDialogManager, latencyTracker2, activityTransitionAnimator, primaryBouncerInteractor, shadeInteractor, singlePointerTouchProcessor, sessionTracker, alternateBouncerInteractor, inputManager, deviceEntryFaceAuthInteractor, udfpsKeyguardAccessibilityDelegate, selectedUserInteractor2, keyguardTransitionInteractor2, lazy15, lazy16, udfpsOverlayInteractor, powerInteractor2, (CoroutineScope) provider151.get());
                case 54:
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    KeyguardViewMediator.AnonymousClass4 m1707$$Nest$mviewMediatorCallback = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1707$$Nest$mviewMediatorCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory46.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController3 = (ConfigurationController) provider153.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor5 = (KeyguardUpdateMonitor) delegateFactory47.get();
                    DreamOverlayStateController dreamOverlayStateController = (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get();
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController = (NavigationModeController) provider154.get();
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockManager dockManager2 = (DockManager) delegateFactory48.get();
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory49.get();
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController5 = (KeyguardStateController) delegateFactory50.get();
                    KeyguardMessageAreaController.Factory m1583$$Nest$mkeyguardMessageAreaControllerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1583$$Nest$mkeyguardMessageAreaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider;
                    Optional optional6 = (Optional) provider155.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    Lazy lazy17 = DoubleCheck.lazy(delegateFactory51);
                    LatencyTracker latencyTracker3 = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get();
                    KeyguardSecurityModel keyguardSecurityModel = (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get();
                    PrimaryBouncerCallbackInteractor primaryBouncerCallbackInteractor = (PrimaryBouncerCallbackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerCallbackInteractorProvider.get();
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor2 = (PrimaryBouncerInteractor) provider156.get();
                    BouncerViewImpl bouncerViewImpl = (BouncerViewImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerViewImplProvider.get();
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor2 = (AlternateBouncerInteractor) provider157.get();
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    UdfpsOverlayInteractor udfpsOverlayInteractor2 = (UdfpsOverlayInteractor) provider158.get();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory52.get();
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) provider159.get();
                    KeyguardDismissTransitionInteractor keyguardDismissTransitionInteractor = (KeyguardDismissTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissTransitionInteractorProvider.get();
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    Lazy lazy18 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissActionInteractorProvider);
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor3 = (SelectedUserInteractor) provider161.get();
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter3 = (JavaAdapter) provider162.get();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    Lazy lazy19 = DoubleCheck.lazy(delegateFactory53);
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerInteractorProvider;
                    StatusBarKeyguardViewManagerInteractor statusBarKeyguardViewManagerInteractor = (StatusBarKeyguardViewManagerInteractor) provider163.get();
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor5 = (DelayableExecutor) provider164.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    Lazy lazy20 = DoubleCheck.lazy(delegateFactory54);
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider;
                    return new StatusBarKeyguardViewManager(m1707$$Nest$mviewMediatorCallback, sysuiStatusBarStateController, configurationController3, keyguardUpdateMonitor5, dreamOverlayStateController, navigationModeController, dockManager2, notificationShadeWindowController, keyguardStateController5, m1583$$Nest$mkeyguardMessageAreaControllerFactory, optional6, lazy17, latencyTracker3, keyguardSecurityModel, primaryBouncerCallbackInteractor, primaryBouncerInteractor2, bouncerViewImpl, alternateBouncerInteractor2, udfpsOverlayInteractor2, activityStarter, keyguardTransitionInteractor3, keyguardDismissTransitionInteractor, lazy18, selectedUserInteractor3, javaAdapter3, lazy19, statusBarKeyguardViewManagerInteractor, delayableExecutor5, lazy20, (DismissCallbackRegistry) provider165.get());
                case 55:
                    context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger3 = (UiEventLogger) provider166.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    SessionTracker sessionTracker2 = (SessionTracker) provider167.get();
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker5 = (UserTracker) delegateFactory55.get();
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector2 = (FalsingCollector) provider168.get();
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils4 = (LockPatternUtils) provider169.get();
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider170.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    Lazy lazy21 = DoubleCheck.lazy(delegateFactory56);
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider;
                    DismissCallbackRegistry dismissCallbackRegistry = (DismissCallbackRegistry) provider171.get();
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor6 = (KeyguardUpdateMonitor) delegateFactory57.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager11 = (DumpManager) provider172.get();
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager4 = (PowerManager) provider173.get();
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider;
                    TrustManager trustManager2 = (TrustManager) provider174.get();
                    UserSwitcherController userSwitcherController = (UserSwitcherController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherControllerProvider.get();
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor9 = (Executor) provider175.get();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy2 = (DeviceConfigProxy) provider176.get();
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController2 = (NavigationModeController) provider177.get();
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDisplayManagerProvider;
                    KeyguardDisplayManager keyguardDisplayManager = (KeyguardDisplayManager) provider178.get();
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters = (DozeParameters) delegateFactory58.get();
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController2 = (SysuiStatusBarStateController) delegateFactory59.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController6 = (KeyguardStateController) delegateFactory60.get();
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    Lazy lazy22 = DoubleCheck.lazy(provider179);
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController2 = (ScreenOffAnimationController) delegateFactory61.get();
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider;
                    Lazy lazy23 = DoubleCheck.lazy(provider180);
                    keyguardTransitions = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setKeyguardTransitions;
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor3 = (InteractionJankMonitor) provider181.get();
                    DreamOverlayStateController dreamOverlayStateController2 = (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get();
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter4 = (JavaAdapter) provider182.get();
                    WallpaperRepositoryImpl wallpaperRepositoryImpl = (WallpaperRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperRepositoryImplProvider.get();
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    Lazy lazy24 = DoubleCheck.lazy(delegateFactory62);
                    delegateFactory63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    Lazy lazy25 = DoubleCheck.lazy(delegateFactory63);
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    Lazy lazy26 = DoubleCheck.lazy(provider183);
                    Lazy lazy27 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider);
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider;
                    IActivityTaskManager iActivityTaskManager2 = (IActivityTaskManager) provider184.get();
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService = (IStatusBarService) provider185.get();
                    delegateFactory64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider17.get();
                    SystemSettingsImpl m1700$$Nest$msystemSettingsImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1700$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock6 = (SystemClock) provider186.get();
                    ProcessWrapper processWrapper = new ProcessWrapper();
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamViewModelProvider;
                    Lazy lazy28 = DoubleCheck.lazy(provider188);
                    Lazy lazy29 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTransitionViewModelProvider);
                    SystemPropertiesHelper systemPropertiesHelper2 = (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get();
                    Lazy lazy30 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityManagerProvider);
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor4 = (SelectedUserInteractor) provider189.get();
                    delegateFactory65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return KeyguardModule_NewKeyguardViewMediatorFactory.newKeyguardViewMediator(iActivityTaskManager2, trustManager2, context20, powerManager4, interactionJankMonitor3, uiEventLogger3, iStatusBarService, lockPatternUtils4, keyguardDisplayManager, keyguardUpdateMonitor6, broadcastDispatcher4, falsingCollector2, dreamOverlayStateController2, dumpManager11, systemPropertiesHelper2, dismissCallbackRegistry, (WindowManagerOcclusionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerOcclusionManagerProvider.get(), (KeyguardInteractor) delegateFactory65.get(), sessionTracker2, navigationModeController2, processWrapper, userTracker5, sysuiStatusBarStateController2, dozeParameters, screenOffAnimationController2, keyguardStateController6, userSwitcherController, selectedUserInteractor4, deviceConfigProxy2, javaAdapter4, secureSettings2, m1700$$Nest$msystemSettingsImpl, systemClock6, wallpaperRepositoryImpl, keyguardTransitions, lazy21, lazy22, lazy23, lazy24, lazy25, lazy26, lazy27, lazy28, lazy29, lazy30, executor9);
                case 56:
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService2 = (IStatusBarService) provider190.get();
                    delegateFactory66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController3 = (AuthController) delegateFactory66.get();
                    delegateFactory67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor7 = (KeyguardUpdateMonitor) delegateFactory67.get();
                    delegateFactory68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController7 = (KeyguardStateController) delegateFactory68.get();
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new SessionTracker(iStatusBarService2, authController3, keyguardUpdateMonitor7, keyguardStateController7, (UiEventLogger) provider191.get(), new ProcessWrapper());
                case 57:
                    Object obj = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get();
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorNoOpProvider;
                    return FalsingModule_ProvidesFalsingCollectorLegacyFactory.providesFalsingCollectorLegacy(obj);
                case 58:
                    return new FalsingCollectorNoOp();
                case 59:
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    return new DismissCallbackRegistry((Executor) provider193.get());
                case 60:
                    switchingProvider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context32 = (Context) switchingProvider18.get();
                    Lazy lazy31 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider);
                    Lazy lazy32 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestUserInteractorProvider);
                    delegateFactory69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    Lazy lazy33 = DoubleCheck.lazy(delegateFactory69);
                    delegateFactory70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    return new UserSwitcherController(context32, lazy31, lazy32, lazy33, (ActivityStarter) delegateFactory70.get());
                case 61:
                    switchingProvider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context33 = (Context) switchingProvider19.get();
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider194.get();
                    delegateFactory71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory71.get();
                    delegateFactory72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory72.get();
                    delegateFactory73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags2 = (FeatureFlags) delegateFactory73.get();
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager4 = (UserManager) provider195.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headlessSystemUserModeImplProvider;
                    HeadlessSystemUserModeImpl headlessSystemUserModeImpl = (HeadlessSystemUserModeImpl) provider196.get();
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider197.get();
                    TelephonyInteractor telephonyInteractor = (TelephonyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyInteractorProvider.get();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) provider198.get();
                    delegateFactory74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor8 = (KeyguardUpdateMonitor) delegateFactory74.get();
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider199.get();
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider200.get();
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider;
                    ActivityManager activityManager = (ActivityManager) provider201.get();
                    RefreshUsersScheduler refreshUsersScheduler = (RefreshUsersScheduler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.refreshUsersSchedulerProvider.get();
                    GuestUserInteractor guestUserInteractor = (GuestUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestUserInteractorProvider.get();
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new UserSwitcherInteractor(context33, userRepositoryImpl, activityStarter2, keyguardInteractor, featureFlags2, userManager4, headlessSystemUserModeImpl, coroutineScope5, telephonyInteractor, broadcastDispatcher5, keyguardUpdateMonitor8, coroutineDispatcher4, coroutineDispatcher5, activityManager, refreshUsersScheduler, guestUserInteractor, (UiEventLogger) provider202.get(), new UserRestrictionChecker(), new ProcessWrapper());
                case 62:
                    switchingProvider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context34 = (Context) switchingProvider20.get();
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager5 = (UserManager) provider203.get();
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider204.get();
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider205.get();
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider206.get();
                    globalSettingsImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    delegateFactory75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new UserRepositoryImpl(context34, userManager5, coroutineScope6, coroutineDispatcher6, coroutineDispatcher7, globalSettingsImpl3, (UserTracker) delegateFactory75.get());
                case 63:
                    delegateFactory76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController3 = (SysuiStatusBarStateController) delegateFactory76.get();
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor6 = (DelayableExecutor) provider207.get();
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterInternalImplProvider;
                    DoubleCheck.lazy(provider208);
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.legacyActivityStarterInternalImplProvider;
                    return new ActivityStarterImpl(sysuiStatusBarStateController3, delayableExecutor6, DoubleCheck.lazy(provider209));
                case 64:
                    delegateFactory77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    Lazy lazy34 = DoubleCheck.lazy(delegateFactory77);
                    delegateFactory78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory78.get();
                    Lazy lazy35 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider);
                    context21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor5 = (SelectedUserInteractor) provider210.get();
                    delegateFactory79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    DeviceEntryInteractor deviceEntryInteractor = (DeviceEntryInteractor) delegateFactory79.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    ActivityTransitionAnimator activityTransitionAnimator2 = (ActivityTransitionAnimator) provider211.get();
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    DeviceProvisioningInteractor deviceProvisioningInteractor = (DeviceProvisioningInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisioningInteractorProvider.get();
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider;
                    ActivityIntentHelper activityIntentHelper = (ActivityIntentHelper) provider212.get();
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor4 = (KeyguardTransitionInteractor) provider213.get();
                    delegateFactory80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy36 = DoubleCheck.lazy(delegateFactory80);
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor7 = (DelayableExecutor) provider214.get();
                    delegateFactory81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    Lazy lazy37 = DoubleCheck.lazy(delegateFactory81);
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider215.get();
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl = (StatusBarWindowControllerImpl) provider216.get();
                    delegateFactory82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    DoubleCheck.lazy(delegateFactory82);
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider;
                    ShadeAnimationInteractor shadeAnimationInteractor = (ShadeAnimationInteractor) provider217.get();
                    delegateFactory83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    Lazy lazy38 = DoubleCheck.lazy(delegateFactory83);
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider218.get();
                    delegateFactory84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    return new ActivityStarterInternalImpl(lazy34, keyguardInteractor2, lazy35, context21, m977$$Nest$mmainResources2, selectedUserInteractor5, deviceEntryInteractor, activityTransitionAnimator2, displayId, deviceProvisioningInteractor, activityIntentHelper, keyguardTransitionInteractor4, lazy36, delayableExecutor7, lazy37, communalSceneInteractor, statusBarWindowControllerImpl, shadeAnimationInteractor, lazy38, commandQueue2, (NotificationLockscreenUserManager) delegateFactory84.get());
                case 65:
                    return Optional.of((CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get());
                case 66:
                    WallpaperNotifier m1714$$Nest$mwallpaperNotifier = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1714$$Nest$mwallpaperNotifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideReverseChargingViewControllerOptionalProvider;
                    Optional optional7 = (Optional) provider219.get();
                    delegateFactory85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockObserver dockObserver = (DockObserver) delegateFactory85.get();
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideHealthManagerProvider;
                    Optional optional8 = (Optional) provider220.get();
                    context22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    NotificationsController notificationsController = (NotificationsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsControllerProvider.get();
                    FragmentService fragmentService = (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get();
                    LightBarController lightBarController = (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get();
                    AutoHideController autoHideController = (AutoHideController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.autoHideControllerProvider.get();
                    provider221 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarInitializerImplProvider;
                    StatusBarInitializerImpl statusBarInitializerImpl = (StatusBarInitializerImpl) provider221.get();
                    provider222 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl2 = (StatusBarWindowControllerImpl) provider222.get();
                    StatusBarWindowStateController statusBarWindowStateController = (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get();
                    StatusBarModeRepositoryImpl statusBarModeRepositoryImpl = (StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get();
                    delegateFactory86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor9 = (KeyguardUpdateMonitor) delegateFactory86.get();
                    provider223 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarSignalPolicyProvider;
                    StatusBarSignalPolicy statusBarSignalPolicy = (StatusBarSignalPolicy) provider223.get();
                    PulseExpansionHandler pulseExpansionHandler = (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get();
                    NotificationWakeUpCoordinator notificationWakeUpCoordinator = (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get();
                    delegateFactory87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory87.get();
                    delegateFactory88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController8 = (KeyguardStateController) delegateFactory88.get();
                    provider224 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider224.get();
                    provider225 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager3 = (FalsingManager) provider225.get();
                    provider226 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector3 = (FalsingCollector) provider226.get();
                    provider227 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher6 = (BroadcastDispatcher) provider227.get();
                    provider228 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    BroadcastSender broadcastSender = (BroadcastSender) provider228.get();
                    NotificationGutsManager notificationGutsManager = (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get();
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    delegateFactory89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator = (KeyguardViewMediator) delegateFactory89.get();
                    DisplayMetrics m976$$Nest$mdisplayMetrics2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider229 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider229.get();
                    ShadeLogger m1673$$Nest$mshadeLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider230 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter5 = (JavaAdapter) provider230.get();
                    provider231 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor10 = (Executor) provider231.get();
                    ShadeSurface shadeSurface = (ShadeSurface) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSurfaceProvider.get();
                    NotificationMediaManager notificationMediaManager = (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get();
                    delegateFactory90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) delegateFactory90.get();
                    provider232 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    NotificationRemoteInputManager notificationRemoteInputManager = (NotificationRemoteInputManager) provider232.get();
                    QuickSettingsController quickSettingsController = (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickSettingsControllerProvider.get();
                    provider233 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController3 = (BatteryController) provider233.get();
                    SysuiColorExtractor sysuiColorExtractor = (SysuiColorExtractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysuiColorExtractorProvider.get();
                    ScreenLifecycle screenLifecycle2 = (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get();
                    provider234 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle2 = (WakefulnessLifecycle) provider234.get();
                    delegateFactory91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor3 = (PowerInteractor) delegateFactory91.get();
                    provider235 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider235.get();
                    delegateFactory92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController4 = (SysuiStatusBarStateController) delegateFactory92.get();
                    optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    Lazy lazy39 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskControllerProvider);
                    provider236 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider236.get();
                    delegateFactory93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    NavigationBarControllerImpl navigationBarControllerImpl = (NavigationBarControllerImpl) delegateFactory93.get();
                    provider237 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityFloatingMenuControllerProvider;
                    AccessibilityFloatingMenuController accessibilityFloatingMenuController = (AccessibilityFloatingMenuController) provider237.get();
                    delegateFactory94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy40 = DoubleCheck.lazy(delegateFactory94);
                    provider238 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController4 = (ConfigurationController) provider238.get();
                    delegateFactory95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController2 = (NotificationShadeWindowController) delegateFactory95.get();
                    Lazy lazy41 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowViewControllerProvider);
                    delegateFactory96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory96.get();
                    Lazy lazy42 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarNotificationPresenterProvider);
                    provider239 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarNotificationActivityStarterProvider;
                    Lazy lazy43 = DoubleCheck.lazy(provider239);
                    NotificationLaunchAnimatorControllerProvider notificationLaunchAnimatorControllerProvider = (NotificationLaunchAnimatorControllerProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationTransitionAnimatorControllerProvider.get();
                    delegateFactory97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters2 = (DozeParameters) delegateFactory97.get();
                    ScrimController scrimController = (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get();
                    delegateFactory98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider;
                    Lazy lazy44 = DoubleCheck.lazy(delegateFactory98);
                    AuthRippleController authRippleController = (AuthRippleController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authRippleControllerProvider.get();
                    provider240 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider;
                    Lazy lazy45 = DoubleCheck.lazy(provider240);
                    DozeServiceHost dozeServiceHost = (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get();
                    BackActionInteractor backActionInteractor = (BackActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backActionInteractorProvider.get();
                    provider241 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager5 = (PowerManager) provider241.get();
                    DozeScrimController dozeScrimController = (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get();
                    VolumeComponent volumeComponent = (VolumeComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogComponentProvider.get();
                    provider242 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue3 = (CommandQueue) provider242.get();
                    provider243 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesCommandQueueCallbacksProvider;
                    Lazy lazy46 = DoubleCheck.lazy(provider243);
                    provider244 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    PluginManager pluginManager = (PluginManager) provider244.get();
                    delegateFactory99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory99.get();
                    provider245 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider;
                    WindowRootViewVisibilityInteractor windowRootViewVisibilityInteractor = (WindowRootViewVisibilityInteractor) provider245.get();
                    delegateFactory100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager2 = (StatusBarKeyguardViewManager) delegateFactory100.get();
                    KeyguardViewMediator.AnonymousClass4 m1707$$Nest$mviewMediatorCallback2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1707$$Nest$mviewMediatorCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    InitController initController = (InitController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.initControllerProvider.get();
                    provider246 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideTimeTickHandlerProvider;
                    Handler handler5 = (Handler) provider246.get();
                    PluginDependencyProvider pluginDependencyProvider = (PluginDependencyProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.pluginDependencyProvider.get();
                    ExtensionControllerImpl extensionControllerImpl = (ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get();
                    UserInfoControllerImpl userInfoControllerImpl = (UserInfoControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userInfoControllerImplProvider.get();
                    PhoneStatusBarPolicy m1641$$Nest$mphoneStatusBarPolicy = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1641$$Nest$mphoneStatusBarPolicy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider247 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider;
                    KeyguardIndicationControllerGoogle keyguardIndicationControllerGoogle = (KeyguardIndicationControllerGoogle) provider247.get();
                    provider248 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController2 = (DemoModeController) provider248.get();
                    StatusBarTouchableRegionManager statusBarTouchableRegionManager = (StatusBarTouchableRegionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarTouchableRegionManagerProvider.get();
                    BrightnessSliderController.Factory m1510$$Nest$mbrightnessSliderControllerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1510$$Nest$mbrightnessSliderControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController3 = (ScreenOffAnimationController) delegateFactory101.get();
                    WallpaperController wallpaperController = (WallpaperController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperControllerProvider.get();
                    StatusBarHideIconsForBouncerManager statusBarHideIconsForBouncerManager = (StatusBarHideIconsForBouncerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarHideIconsForBouncerManagerProvider.get();
                    provider249 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController2 = (LockscreenShadeTransitionController) provider249.get();
                    delegateFactory102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) delegateFactory102.get();
                    provider250 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    KeyguardUnlockAnimationController keyguardUnlockAnimationController = (KeyguardUnlockAnimationController) provider250.get();
                    provider251 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor8 = (DelayableExecutor) provider251.get();
                    MessageRouterImpl m1595$$Nest$mmainMessageRouter = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1595$$Nest$mmainMessageRouter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    WallpaperManager m979$$Nest$mwallpaperManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m979$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    optional2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setStartingSurface;
                    provider252 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    ActivityTransitionAnimator activityTransitionAnimator3 = (ActivityTransitionAnimator) provider252.get();
                    provider253 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager2 = (AlarmManager) provider253.get();
                    DeviceStateManager deviceStateManager = (DeviceStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDeviceStateManagerProvider.get();
                    provider254 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wiredChargingRippleControllerProvider;
                    WiredChargingRippleController wiredChargingRippleController = (WiredChargingRippleController) provider254.get();
                    provider255 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider;
                    IDreamManager iDreamManager2 = (IDreamManager) provider255.get();
                    Lazy lazy47 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraLauncherProvider);
                    switchingProvider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightRevealScrimViewModelProvider;
                    Lazy lazy48 = DoubleCheck.lazy(switchingProvider21);
                    LightRevealScrim lightRevealScrim = (LightRevealScrim) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLightRevealScrimProvider.get();
                    provider256 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor3 = (AlternateBouncerInteractor) provider256.get();
                    delegateFactory103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker6 = (UserTracker) delegateFactory103.get();
                    provider257 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    delegateFactory104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory104.get();
                    provider258 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor6 = (SelectedUserInteractor) provider258.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider18.get();
                    provider259 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightnessMirrorShowingInteractorProvider;
                    BrightnessMirrorShowingInteractor brightnessMirrorShowingInteractor = (BrightnessMirrorShowingInteractor) provider259.get();
                    GlanceableHubContainerController glanceableHubContainerController = (GlanceableHubContainerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubContainerControllerProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    PackageManager packageManager2 = (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.providePackageManagerProvider.get();
                    Resources resources = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    EmergencyGestureModule$emergencyGestureIntentFactory$1 emergencyGestureModule$emergencyGestureIntentFactory$1 = new EmergencyGestureModule$emergencyGestureIntentFactory$1(packageManager2, resources);
                    provider260 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    return new CentralSurfacesGoogle(m1714$$Nest$mwallpaperNotifier, optional7, dockObserver, optional8, context22, notificationsController, fragmentService, lightBarController, autoHideController, statusBarInitializerImpl, statusBarWindowControllerImpl2, statusBarWindowStateController, statusBarModeRepositoryImpl, keyguardUpdateMonitor9, statusBarSignalPolicy, pulseExpansionHandler, notificationWakeUpCoordinator, keyguardBypassController, keyguardStateController8, headsUpManager, falsingManager3, falsingCollector3, broadcastDispatcher6, broadcastSender, notificationGutsManager, shadeExpansionStateManager, keyguardViewMediator, m976$$Nest$mdisplayMetrics2, metricsLogger, m1673$$Nest$mshadeLogger, javaAdapter5, executor10, shadeSurface, notificationMediaManager, notificationLockscreenUserManager, notificationRemoteInputManager, quickSettingsController, batteryController3, sysuiColorExtractor, screenLifecycle2, wakefulnessLifecycle2, powerInteractor3, communalInteractor, sysuiStatusBarStateController4, optional, lazy39, deviceProvisionedController, navigationBarControllerImpl, accessibilityFloatingMenuController, lazy40, configurationController4, notificationShadeWindowController2, lazy41, notificationStackScrollLayoutController, lazy42, lazy43, notificationLaunchAnimatorControllerProvider, dozeParameters2, scrimController, lazy44, authRippleController, lazy45, dozeServiceHost, backActionInteractor, powerManager5, dozeScrimController, volumeComponent, commandQueue3, lazy46, pluginManager, shadeController, windowRootViewVisibilityInteractor, statusBarKeyguardViewManager2, m1707$$Nest$mviewMediatorCallback2, initController, handler5, pluginDependencyProvider, extensionControllerImpl, userInfoControllerImpl, m1641$$Nest$mphoneStatusBarPolicy, keyguardIndicationControllerGoogle, demoModeController2, statusBarTouchableRegionManager, m1510$$Nest$mbrightnessSliderControllerFactory, screenOffAnimationController3, wallpaperController, statusBarHideIconsForBouncerManager, lockscreenShadeTransitionController2, featureFlagsClassic, keyguardUnlockAnimationController, delayableExecutor8, m1595$$Nest$mmainMessageRouter, m979$$Nest$mwallpaperManager, optional2, activityTransitionAnimator3, alarmManager2, deviceStateManager, wiredChargingRippleController, iDreamManager2, lazy47, lazy48, lightRevealScrim, alternateBouncerInteractor3, userTracker6, provider257, activityStarter3, selectedUserInteractor6, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17, brightnessMirrorShowingInteractor, glanceableHubContainerController, emergencyGestureModule$emergencyGestureIntentFactory$1, (ViewCaptureAwareWindowManager) provider260.get());
                case 67:
                    return new NotifPipeline((NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (ShadeListBuilder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeListBuilderProvider.get(), (RenderStageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.renderStageManagerProvider.get());
                case 68:
                    provider261 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService3 = (IStatusBarService) provider261.get();
                    provider262 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock7 = (SystemClock) provider262.get();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    NotifCollectionLogger m1628$$Nest$mnotifCollectionLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1628$$Nest$mnotifCollectionLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler6 = (Handler) switchingProvider22.get();
                    provider263 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor11 = (Executor) provider263.get();
                    LogBufferEulogizer logBufferEulogizer = (LogBufferEulogizer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferEulogizerProvider.get();
                    provider264 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new NotifCollection(iStatusBarService3, systemClock7, m1628$$Nest$mnotifCollectionLogger, handler6, executor11, logBufferEulogizer, (DumpManager) provider264.get(), (NotificationDismissibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationDismissibilityProviderImplProvider.get());
                case 69:
                    provider265 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    LogBufferFactory logBufferFactory = (LogBufferFactory) provider265.get();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    return LogModule_ProvideNotificationsLogBufferFactory.provideNotificationsLogBuffer(logBufferFactory);
                case 70:
                    provider266 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new NotificationDismissibilityProviderImpl((DumpManager) provider266.get());
                case 71:
                    provider267 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager12 = (DumpManager) provider267.get();
                    provider268 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineChoreographerImplProvider;
                    NotifPipelineChoreographerImpl notifPipelineChoreographerImpl = (NotifPipelineChoreographerImpl) provider268.get();
                    notifPipelineFlags = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    provider269 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInteractionTrackerProvider;
                    NotificationInteractionTracker notificationInteractionTracker = (NotificationInteractionTracker) provider269.get();
                    ShadeListBuilderLogger m1672$$Nest$mshadeListBuilderLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1672$$Nest$mshadeListBuilderLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider270 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new ShadeListBuilder(dumpManager12, notifPipelineChoreographerImpl, notifPipelineFlags, notificationInteractionTracker, m1672$$Nest$mshadeListBuilderLogger, (SystemClock) provider270.get());
                case 72:
                    Choreographer choreographer = (Choreographer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesChoreographerProvider.get();
                    provider271 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    return new NotifPipelineChoreographerImpl(choreographer, (DelayableExecutor) provider271.get());
                case 73:
                    return new NotificationInteractionTracker((NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get());
                case 74:
                    provider272 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService4 = (IStatusBarService) provider272.get();
                    provider273 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor12 = (Executor) provider273.get();
                    provider274 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    return new NotificationClickNotifier(iStatusBarService4, executor12, (Executor) provider274.get());
                case 75:
                    return new RenderStageManager();
                case 76:
                    context23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    WakeLock.Builder m1713$$Nest$mwakeLockBuilder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1713$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider275 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new BroadcastSender(context23, m1713$$Nest$mwakeLockBuilder, (Executor) provider275.get());
                case 77:
                    provider276 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideWakeLockLogFactory.provideWakeLockLog((LogBufferFactory) provider276.get());
                case 78:
                    provider277 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController4 = (BatteryController) provider277.get();
                    provider278 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reverseChargingViewControllerProvider;
                    return CentralSurfacesGoogleModule_ProvideReverseChargingViewControllerOptionalFactory.provideReverseChargingViewControllerOptional(batteryController4, DoubleCheck.lazy(provider278));
                case 79:
                    context24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider279 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController5 = (BatteryController) provider279.get();
                    delegateFactory105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController3 = (NotificationShadeWindowController) delegateFactory105.get();
                    provider280 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController = (StatusBarIconController) provider280.get();
                    provider281 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher7 = (BroadcastDispatcher) provider281.get();
                    provider282 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor13 = (Executor) provider282.get();
                    provider283 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider;
                    return new ReverseChargingViewController(context24, batteryController5, notificationShadeWindowController3, statusBarIconController, broadcastDispatcher7, executor13, (KeyguardIndicationControllerGoogle) provider283.get(), (AmbientIndicationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientIndicationInteractorProvider.get());
                case 80:
                    context25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory daggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider284 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager2 = (ViewCaptureAwareWindowManager) provider284.get();
                    provider285 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    IActivityManager iActivityManager2 = (IActivityManager) provider285.get();
                    delegateFactory106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters3 = (DozeParameters) delegateFactory106.get();
                    delegateFactory107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController6 = (StatusBarStateController) delegateFactory107.get();
                    provider286 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController5 = (ConfigurationController) provider286.get();
                    delegateFactory108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator2 = (KeyguardViewMediator) delegateFactory108.get();
                    delegateFactory109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController2 = (KeyguardBypassController) delegateFactory109.get();
                    provider287 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor14 = (Executor) provider287.get();
                    provider288 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor15 = (Executor) provider288.get();
                    SysuiColorExtractor sysuiColorExtractor2 = (SysuiColorExtractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysuiColorExtractorProvider.get();
                    provider289 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager13 = (DumpManager) provider289.get();
                    delegateFactory110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController9 = (KeyguardStateController) delegateFactory110.get();
                    delegateFactory111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController4 = (AuthController) delegateFactory111.get();
                    delegateFactory112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Lazy lazy49 = DoubleCheck.lazy(delegateFactory112);
                    ShadeWindowLogger m1674$$Nest$mshadeWindowLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1674$$Nest$mshadeWindowLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider290 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    Lazy lazy50 = DoubleCheck.lazy(provider290);
                    delegateFactory113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker7 = (UserTracker) delegateFactory113.get();
                    NotificationShadeWindowModel notificationShadeWindowModel = (NotificationShadeWindowModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowModelProvider.get();
                    provider291 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    return new NotificationShadeWindowControllerImpl(context25, daggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory, viewCaptureAwareWindowManager2, iActivityManager2, dozeParameters3, statusBarStateController6, configurationController5, keyguardViewMediator2, keyguardBypassController2, executor14, executor15, sysuiColorExtractor2, dumpManager13, keyguardStateController9, authController4, lazy49, m1674$$Nest$mshadeWindowLogger, lazy50, userTracker7, notificationShadeWindowModel, DoubleCheck.lazy(provider291));
                case 81:
                    context26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler7 = (Handler) switchingProvider23.get();
                    Resources m977$$Nest$mmainResources3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    AmbientDisplayConfiguration m973$$Nest$mambientDisplayConfiguration = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m973$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider292 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alwaysOnDisplayPolicyProvider;
                    AlwaysOnDisplayPolicy alwaysOnDisplayPolicy = (AlwaysOnDisplayPolicy) provider292.get();
                    provider293 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager6 = (PowerManager) provider293.get();
                    provider294 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController6 = (BatteryController) provider294.get();
                    delegateFactory114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService = (TunerService) delegateFactory114.get();
                    provider295 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager14 = (DumpManager) provider295.get();
                    delegateFactory115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController4 = (ScreenOffAnimationController) delegateFactory115.get();
                    provider296 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider;
                    Optional optional9 = (Optional) provider296.get();
                    UnlockedScreenOffAnimationController unlockedScreenOffAnimationController2 = (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get();
                    delegateFactory116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor10 = (KeyguardUpdateMonitor) delegateFactory116.get();
                    provider297 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController6 = (ConfigurationController) provider297.get();
                    delegateFactory117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController7 = (StatusBarStateController) delegateFactory117.get();
                    delegateFactory118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker8 = (UserTracker) delegateFactory118.get();
                    DozeInteractor dozeInteractor = (DozeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeInteractorProvider.get();
                    switchingProvider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return DozeParameters_Factory.newInstance(context26, handler7, m977$$Nest$mmainResources3, m973$$Nest$mambientDisplayConfiguration, alwaysOnDisplayPolicy, powerManager6, batteryController6, tunerService, dumpManager14, screenOffAnimationController4, optional9, unlockedScreenOffAnimationController2, keyguardUpdateMonitor10, configurationController6, statusBarStateController7, userTracker8, dozeInteractor, (SecureSettings) switchingProvider24.get());
                case 82:
                    context27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new AlwaysOnDisplayPolicy(context27);
                case 83:
                    context28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler8 = (Handler) switchingProvider25.get();
                    LeakDetector leakDetector = (LeakDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLeakDetectorProvider.get();
                    provider298 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController3 = (DemoModeController) provider298.get();
                    delegateFactory119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker9 = (UserTracker) delegateFactory119.get();
                    delegateFactory120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    return new TunerServiceImpl(context28, handler8, leakDetector, demoModeController3, userTracker9, DoubleCheck.lazy(delegateFactory120));
                case 84:
                    leakModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.leakModule;
                    provider299 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager15 = (DumpManager) provider299.get();
                    TrackedCollections_Factory.newInstance();
                    return LeakModule_ProvidesLeakDetectorFactory.providesLeakDetector(leakModule, dumpManager15);
                case 85:
                    switchingProvider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context35 = (Context) switchingProvider26.get();
                    SystemUIDialogManager systemUIDialogManager2 = (SystemUIDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider.get();
                    delegateFactory121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState = (SysUiState) delegateFactory121.get();
                    provider300 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher8 = (BroadcastDispatcher) provider300.get();
                    provider301 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    return new SystemUIDialog.Factory(context35, systemUIDialogManager2, sysUiState, broadcastDispatcher8, (DialogTransitionAnimator) provider301.get());
                case 86:
                    provider302 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager16 = (DumpManager) provider302.get();
                    delegateFactory122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    return new SystemUIDialogManager(dumpManager16, (StatusBarKeyguardViewManager) delegateFactory122.get());
                case 87:
                    provider303 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker2 = (DisplayTracker) provider303.get();
                    provider304 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager17 = (DumpManager) provider304.get();
                    provider305 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerPluginProvider;
                    return SystemUIModule_ProvideSysUiStateFactory.provideSysUiState(displayTracker2, dumpManager17, (SceneContainerPlugin) provider305.get());
                case 88:
                    delegateFactory123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new SceneContainerPlugin(DoubleCheck.lazy(delegateFactory123), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider));
                case 89:
                    provider306 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider306.get();
                    provider307 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerRepositoryProvider;
                    SceneContainerRepository sceneContainerRepository = (SceneContainerRepository) provider307.get();
                    SceneLogger m1656$$Nest$msceneLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1656$$Nest$msceneLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideResolverMapProvider;
                    return new SceneInteractor(coroutineScope7, sceneContainerRepository, m1656$$Nest$msceneLogger, DoubleCheck.lazy(switchingProvider27), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardEnabledInteractorProvider));
                case 90:
                    provider308 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new SceneContainerRepository((CoroutineScope) provider308.get(), (SceneContainerConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.containerConfigProvider.get(), (SceneDataSource) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSceneDataSourceDelegatorProvider.get());
                case 91:
                    return SceneContainerFrameworkModule_Companion_ContainerConfigFactory.containerConfig();
                case 92:
                    provider309 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return SystemUIModule_ProvidesSceneDataSourceDelegatorFactory.providesSceneDataSourceDelegator((CoroutineScope) provider309.get(), (SceneContainerConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.containerConfigProvider.get());
                case 93:
                    provider310 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideSceneFrameworkLogBufferFactory.provideSceneFrameworkLogBuffer((LogBufferFactory) provider310.get());
                case 94:
                    singleton = Collections.singleton((SceneResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.homeSceneFamilyResolverProvider.get());
                    return SceneResolverModule_Companion_ProvideResolverMapFactory.provideResolverMap(singleton);
                case 95:
                    provider311 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider311.get();
                    delegateFactory124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new HomeSceneFamilyResolver(coroutineScope8, (DeviceEntryInteractor) delegateFactory124.get(), (KeyguardEnabledInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardEnabledInteractorProvider.get());
                case 96:
                    provider312 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider312.get();
                    DeviceEntryRepositoryImpl deviceEntryRepositoryImpl = (DeviceEntryRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryRepositoryImplProvider.get();
                    provider313 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider;
                    AuthenticationInteractor authenticationInteractor = (AuthenticationInteractor) provider313.get();
                    delegateFactory125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory125.get();
                    DeviceUnlockedInteractor deviceUnlockedInteractor = (DeviceUnlockedInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider.get();
                    provider314 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor4 = (AlternateBouncerInteractor) provider314.get();
                    provider315 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider;
                    return new DeviceEntryInteractor(coroutineScope9, deviceEntryRepositoryImpl, authenticationInteractor, sceneInteractor, deviceUnlockedInteractor, alternateBouncerInteractor4, (DismissCallbackRegistry) provider315.get(), (SceneBackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneBackInteractorProvider.get());
                case 97:
                    provider316 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider316.get();
                    provider317 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider317.get();
                    provider318 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl2 = (UserRepositoryImpl) provider318.get();
                    provider319 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils5 = (LockPatternUtils) provider319.get();
                    delegateFactory126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    return new DeviceEntryRepositoryImpl(coroutineScope10, coroutineDispatcher8, userRepositoryImpl2, lockPatternUtils5, (KeyguardBypassController) delegateFactory126.get());
                case 98:
                    Resources m977$$Nest$mmainResources4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider320 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager3 = (PackageManager) provider320.get();
                    provider321 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope11 = (CoroutineScope) provider321.get();
                    delegateFactory127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService2 = (TunerService) delegateFactory127.get();
                    delegateFactory128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController8 = (StatusBarStateController) delegateFactory128.get();
                    delegateFactory129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager2 = (NotificationLockscreenUserManager) delegateFactory129.get();
                    delegateFactory130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController10 = (KeyguardStateController) delegateFactory130.get();
                    delegateFactory131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Lazy lazy51 = DoubleCheck.lazy(delegateFactory131);
                    com.android.systemui.statusbar.policy.DevicePostureController devicePostureController2 = (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get();
                    provider322 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor5 = (KeyguardTransitionInteractor) provider322.get();
                    provider323 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new KeyguardBypassController(m977$$Nest$mmainResources4, packageManager3, coroutineScope11, tunerService2, statusBarStateController8, notificationLockscreenUserManager2, keyguardStateController10, lazy51, devicePostureController2, keyguardTransitionInteractor5, (DumpManager) provider323.get());
                case 99:
                    context29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider324 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher9 = (BroadcastDispatcher) provider324.get();
                    provider325 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager2 = (DevicePolicyManager) provider325.get();
                    provider326 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager6 = (UserManager) provider326.get();
                    delegateFactory132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker10 = (UserTracker) delegateFactory132.get();
                    provider327 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider;
                    Lazy lazy52 = DoubleCheck.lazy(provider327);
                    provider328 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    Lazy lazy53 = DoubleCheck.lazy(provider328);
                    NotificationClickNotifier notificationClickNotifier = (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get();
                    delegateFactory133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    Lazy lazy54 = DoubleCheck.lazy(delegateFactory133);
                    provider329 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider;
                    KeyguardManager keyguardManager = (KeyguardManager) provider329.get();
                    delegateFactory134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController9 = (StatusBarStateController) delegateFactory134.get();
                    provider330 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor16 = (Executor) provider330.get();
                    provider331 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor17 = (Executor) provider331.get();
                    provider332 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController2 = (DeviceProvisionedController) provider332.get();
                    delegateFactory135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController11 = (KeyguardStateController) delegateFactory135.get();
                    switchingProvider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings3 = (SecureSettings) switchingProvider28.get();
                    provider333 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager18 = (DumpManager) provider333.get();
                    provider334 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils6 = (LockPatternUtils) provider334.get();
                    delegateFactory136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new NotificationLockscreenUserManagerImpl(context29, broadcastDispatcher9, devicePolicyManager2, userManager6, userTracker10, lazy52, lazy53, notificationClickNotifier, lazy54, keyguardManager, statusBarStateController9, executor16, executor17, deviceProvisionedController2, keyguardStateController11, secureSettings3, dumpManager18, lockPatternUtils6);
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get0$2() {
            Context context;
            Provider provider;
            Context context2;
            Context context3;
            Provider provider2;
            Provider provider3;
            Context context4;
            Context context5;
            Provider provider4;
            Context context6;
            Context context7;
            Context context8;
            Context context9;
            Context context10;
            Context context11;
            Context context12;
            Context context13;
            Context context14;
            Context context15;
            Context context16;
            Context context17;
            Context context18;
            Context context19;
            Context context20;
            Provider provider5;
            Context context21;
            Provider provider6;
            Context context22;
            Context context23;
            Provider provider7;
            Provider provider8;
            Context context24;
            Context context25;
            Provider provider9;
            Provider provider10;
            Context context26;
            Provider provider11;
            Provider provider12;
            Context context27;
            Provider provider13;
            Context context28;
            Provider provider14;
            Provider provider15;
            Context context29;
            Provider provider16;
            Context context30;
            Context context31;
            Context context32;
            Context context33;
            Context context34;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            Context unused;
            int i = 0;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl) this.wMComponentImpl;
            int i2 = this.id;
            switch (i2) {
                case 0:
                    daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIndependentShellComponentsToCreateProvider2.get();
                    return WMShellBaseModule_ProvideShellSysuiCallbacksFactory.provideShellSysuiCallbacks((ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get());
                case 1:
                    Optional.of((BubbleController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleControllerProvider.get());
                    Optional.of((RecentsTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentsTransitionHandlerProvider.get());
                    Optional.of(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIndependentShellComponentsToCreateProvider.get());
                    return WMShellBaseModule_ProvideIndependentShellComponentsToCreateFactory.provideIndependentShellComponentsToCreate();
                case 2:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    return WMShellBaseModule_ProvideDisplayControllerFactory.provideDisplayController(context, (IWindowManager) provider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 3:
                    return WMShellBaseModule_ProvideShellInitFactory.provideShellInit();
                case 4:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellConcurrencyModule_ProvideShellMainExecutorFactory.provideShellMainExecutor(context2, (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSysUIMainExecutorProvider.get());
                case 5:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellConcurrencyModule_ProvideShellMainHandlerFactory.provideShellMainHandler(context3, daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.setShellMainThread, new Handler(Looper.getMainLooper()));
                case 6:
                    return WMShellConcurrencyModule_ProvideSysUIMainExecutorFactory.provideSysUIMainExecutor(new Handler(Looper.getMainLooper()));
                case 7:
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager = (IWindowManager) provider2.get();
                    ShellInit shellInit = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    DisplayController displayController = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    DisplayInsetsController displayInsetsController = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                    TransactionPool transactionPool = (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get();
                    return WMShellBaseModule_ProvideDisplayImeControllerFactory.provideDisplayImeController(iWindowManager, shellInit, displayController, displayInsetsController, transactionPool);
                case 8:
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    return WMShellBaseModule_ProvideDisplayInsetsControllerFactory.provideDisplayInsetsController((IWindowManager) provider3.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 9:
                    return WMShellBaseModule_ProvideTransactionPoolFactory.provideTransactionPool();
                case 10:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideShellTaskOrganizerFactory.provideShellTaskOrganizer(context4, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideCompatUIControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.TRANSLATIONX_FIELD_NUMBER /* 11 */:
                    return WMShellBaseModule_ProvideShellCommandHandlerFactory.provideShellCommandHandler();
                case ViewNode.TRANSLATIONY_FIELD_NUMBER /* 12 */:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit2 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellController shellController = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    DisplayController displayController2 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    DisplayInsetsController displayInsetsController2 = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                    DisplayImeController displayImeController = (DisplayImeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayImeControllerProvider.get();
                    SyncTransactionQueue syncTransactionQueue = (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get();
                    ShellExecutor shellExecutor = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider);
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.dockStateReaderProvider);
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.compatUIConfigurationProvider);
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.compatUIShellCommandHandlerProvider);
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    Lazy lazy5 = DoubleCheck.lazy(provider4);
                    Optional optional = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTaskRepositoryProvider.get();
                    return WMShellBaseModule_ProvideCompatUIControllerFactory.provideCompatUIController(context5, shellInit2, shellController, displayController2, displayInsetsController2, displayImeController, syncTransactionQueue, shellExecutor, lazy, lazy2, lazy3, lazy4, lazy5, optional, (CompatUIStatusManager) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideCompatUIStatusManagerProvider.get());
                case ViewNode.SCALEX_FIELD_NUMBER /* 13 */:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideShellControllerFactory.provideShellController(context6, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.SCALEY_FIELD_NUMBER /* 14 */:
                    return WMShellBaseModule_ProvideSyncTransactionQueueFactory.provideSyncTransactionQueue((TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 15:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideTransitionsFactory.provideTransitions(context7, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellAnimationExecutorProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get(), (HomeTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideHomeTransitionObserverProvider.get());
                case 16:
                    return WMShellConcurrencyModule_ProvideShellAnimationExecutorFactory.provideShellAnimationExecutor();
                case ViewNode.CLIPCHILDREN_FIELD_NUMBER /* 17 */:
                    ShellExecutor shellExecutor2 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideRootTaskDisplayAreaOrganizerFactory.provideRootTaskDisplayAreaOrganizer(context8, shellExecutor2, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                case ViewNode.VISIBILITY_FIELD_NUMBER /* 18 */:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideHomeTransitionObserverFactory.provideHomeTransitionObserver(context9, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.ELEVATION_FIELD_NUMBER /* 19 */:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new DockStateReader(context10);
                case 20:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new CompatUIConfiguration(context11, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 21:
                    return new CompatUIShellCommandHandler((ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (CompatUIConfiguration) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.compatUIConfigurationProvider.get());
                case 22:
                    return WMShellBaseModule_ProvideCompatUIRepositoryFactory.provideCompatUIRepository();
                case 23:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideDesktopTaskRepositoryFactory.provideDesktopTaskRepository(context12, Optional.of(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider)));
                case 24:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellModule_ProvideDesktopModeTaskRepositoryFactory.provideDesktopModeTaskRepository(context13, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (DesktopPersistentRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopPersistentRepositoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideApplicationScopeProvider.get());
                case 25:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellModule_ProvideDesktopPersistentRepositoryFactory.provideDesktopPersistentRepository(context14, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackgroundCoroutineScopeProvider.get());
                case 26:
                    return WMShellCoroutinesModule_ProvideBackgroundCoroutineScopeFactory.provideBackgroundCoroutineScope(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.wMShellCoroutinesModule, DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1763$$Nest$mshellBackgroundThreadMainCoroutineDispatcher(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl));
                case 27:
                    return WMShellConcurrencyModule_ProvideSharedBackgroundHandlerFactory.provideSharedBackgroundHandler();
                case 28:
                    return WMShellCoroutinesModule_ProvideApplicationScopeFactory.provideApplicationScope(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.wMShellCoroutinesModule, DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1764$$Nest$mshellMainThreadMainCoroutineDispatcher(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl));
                case 29:
                    return WMShellBaseModule_ProvideCompatUIStateFactory.provideCompatUIState();
                case 30:
                    return WMShellBaseModule_ProvideCompatUIComponentIdGeneratorFactory.provideCompatUIComponentIdGenerator();
                case 31:
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideCompatUIComponentFactoryFactory.provideCompatUIComponentFactory(context15, (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get());
                case 32:
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideCompatUIStatusManagerFactory.provideCompatUIStatusManager();
                case 33:
                    return WMShellBaseModule_ProvideUnfoldControllerFactory.provideUnfoldController(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.dynamicOverrideOptionalOfUnfoldAnimationControllerProvider), Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()));
                case 34:
                    return Optional.of((UnfoldAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldAnimationControllerProvider.get());
                case 35:
                    return WMShellModule_ProvideUnfoldAnimationControllerFactory.provideUnfoldAnimationController(Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (SplitTaskUnfoldAnimator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSplitTaskUnfoldAnimatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1762$$Nest$mfullscreenUnfoldTaskAnimator(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider2), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 36:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellModule_ProvideSplitTaskUnfoldAnimatorBaseFactory.provideSplitTaskUnfoldAnimatorBase(context16, (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (UnfoldBackgroundController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldBackgroundControllerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider));
                case 37:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellModule_ProvideUnfoldBackgroundControllerFactory.provideUnfoldBackgroundController(context17);
                case 38:
                    Optional of = Optional.of((SplitScreenController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSplitScreenControllerProvider.get());
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvidesSplitScreenControllerFactory.providesSplitScreenController(context18, of);
                case 39:
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit3 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellCommandHandler shellCommandHandler = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellController shellController2 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    SyncTransactionQueue syncTransactionQueue2 = (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get();
                    return WMShellModule_ProvideSplitScreenControllerFactory.provideSplitScreenController(context19, shellInit3, shellCommandHandler, shellController2, shellTaskOrganizer, syncTransactionQueue2, (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (DisplayImeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayImeControllerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (IconProvider) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIconProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), (LaunchAdjacentController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideLaunchAdjacentControllerProvider.get(), Optional.of((WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get()), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get(), (MultiInstanceHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideMultiInstanceHelperProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 40:
                    context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit4 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellController shellController3 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    ShellCommandHandler shellCommandHandler2 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer2 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    DisplayController displayController3 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return WMShellModule_ProvideDragAndDropControllerFactory.provideDragAndDropController(context20, shellInit4, shellController3, shellCommandHandler2, shellTaskOrganizer2, displayController3, (UiEventLogger) provider5.get(), (IconProvider) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIconProvider.get(), (GlobalDragListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideGlobalDragListenerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 41:
                    context21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideIconProviderFactory.provideIconProvider(context21);
                case 42:
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    return WMShellModule_ProvideGlobalDragListenerFactory.provideGlobalDragListener((IWindowManager) provider6.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 43:
                    context22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return WMShellBaseModule_ProvideRecentTasksControllerFactory.provideRecentTasksController(context22, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get(), (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTaskRepositoryProvider.get(), (TaskStackTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskStackTransitionObserverProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 44:
                    return WMShellBaseModule_ProviderTaskStackListenerImplFactory.providerTaskStackListenerImpl((Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 45:
                    return WMShellBaseModule_ProvideTaskStackTransitionObserverFactory.provideTaskStackTransitionObserver(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                case 46:
                    return WMShellBaseModule_ProvideLaunchAdjacentControllerFactory.provideLaunchAdjacentController((SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get());
                case 47:
                    context23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellExecutor shellExecutor3 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                    Choreographer choreographer = (Choreographer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainChoreographerProvider.get();
                    ShellExecutor shellExecutor4 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundExecutorProvider.get();
                    ShellInit shellInit5 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager2 = (IWindowManager) provider7.get();
                    ShellCommandHandler shellCommandHandler3 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer3 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    DisplayController displayController4 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    ShellController shellController4 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    DisplayInsetsController displayInsetsController3 = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                    SyncTransactionQueue syncTransactionQueue3 = (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get();
                    Transitions transitions = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    Optional optional2 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get();
                    RootTaskDisplayAreaOrganizer rootTaskDisplayAreaOrganizer = (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return WMShellModule_ProvideWindowDecorViewModelFactory.provideWindowDecorViewModel(context23, handler, choreographer, iWindowManager2, (InteractionJankMonitor) provider8.get(), rootTaskDisplayAreaOrganizer, shellTaskOrganizer3, (AppToWebGenericLinksParser) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideGenericLinksParserProvider.get(), DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1761$$Nest$massistContentRequester(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl), displayController4, displayInsetsController3, (MultiInstanceHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideMultiInstanceHelperProvider.get(), shellExecutor3, shellExecutor4, syncTransactionQueue3, (WindowDecorCaptionHandleRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideAppHandleRepositoryProvider.get(), shellCommandHandler3, shellController4, shellInit5, transitions, (WindowDecorViewHostSupplier) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewHostSupplierProvider.get(), optional2, (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTasksLimiterProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideActivityOrientationHandlerProvider.get());
                case 48:
                    try {
                        final Choreographer[] choreographerArr = new Choreographer[1];
                        ((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get()).executeBlocking(new Runnable() { // from class: com.android.wm.shell.dagger.WMShellConcurrencyModule$$ExternalSyntheticLambda0
                            @Override // java.lang.Runnable
                            public final void run() {
                                choreographerArr[0] = Choreographer.getInstance();
                            }
                        });
                        Choreographer choreographer2 = choreographerArr[0];
                        Preconditions.checkNotNullFromProvides(choreographer2);
                        return choreographer2;
                    } catch (InterruptedException e) {
                        throw new RuntimeException("Failed to obtain main Choreographer.", e);
                    }
                case 49:
                    return new HandlerExecutor((Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundHandlerProvider.get());
                case 50:
                    context24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Optional flatMap = Optional.of(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTasksControllerProvider)).flatMap(new WMShellBaseModule$$ExternalSyntheticLambda0(i, context24));
                    Preconditions.checkNotNullFromProvides(flatMap);
                    return flatMap;
                case 51:
                    context25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit6 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellCommandHandler shellCommandHandler4 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellController shellController5 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    DisplayController displayController5 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer4 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    SyncTransactionQueue syncTransactionQueue4 = (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get();
                    RootTaskDisplayAreaOrganizer rootTaskDisplayAreaOrganizer2 = (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get();
                    DragAndDropController dragAndDropController = (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get();
                    Transitions transitions2 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider;
                    KeyguardManager keyguardManager = (KeyguardManager) provider9.get();
                    ReturnToDragStartAnimator returnToDragStartAnimator = (ReturnToDragStartAnimator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideReturnToDragStartAnimatorProvider.get();
                    EnterDesktopTaskTransitionHandler enterDesktopTaskTransitionHandler = (EnterDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideEnterDesktopModeTaskTransitionHandlerProvider.get();
                    ExitDesktopTaskTransitionHandler exitDesktopTaskTransitionHandler = (ExitDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideExitDesktopTaskTransitionHandlerProvider.get();
                    DesktopModeDragAndDropTransitionHandler desktopModeDragAndDropTransitionHandler = (DesktopModeDragAndDropTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeDragAndDropTransitionHandlerProvider.get();
                    ToggleResizeDesktopTaskTransitionHandler toggleResizeDesktopTaskTransitionHandler = (ToggleResizeDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideToggleResizeDesktopTaskTransitionHandlerProvider.get();
                    DragToDesktopTransitionHandler dragToDesktopTransitionHandler = (DragToDesktopTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragToDesktopTransitionHandlerProvider.get();
                    DesktopModeTaskRepository desktopModeTaskRepository = (DesktopModeTaskRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider.get();
                    RecentsTransitionHandler recentsTransitionHandler = (RecentsTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentsTransitionHandlerProvider.get();
                    MultiInstanceHelper multiInstanceHelper = (MultiInstanceHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideMultiInstanceHelperProvider.get();
                    ShellExecutor shellExecutor5 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    Handler handler2 = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                    Optional optional3 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTasksLimiterProvider.get();
                    Optional optional4 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return new DesktopTasksController(context25, shellInit6, shellCommandHandler4, shellController5, displayController5, shellTaskOrganizer4, syncTransactionQueue4, rootTaskDisplayAreaOrganizer2, dragAndDropController, transitions2, keyguardManager, returnToDragStartAnimator, enterDesktopTaskTransitionHandler, exitDesktopTaskTransitionHandler, desktopModeDragAndDropTransitionHandler, toggleResizeDesktopTaskTransitionHandler, dragToDesktopTransitionHandler, desktopModeTaskRepository, recentsTransitionHandler, multiInstanceHelper, shellExecutor5, optional3, (RecentTasksController) optional4.orElse(null), (InteractionJankMonitor) provider10.get(), handler2);
                case 52:
                    context26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return new ReturnToDragStartAnimator(context26, (InteractionJankMonitor) provider11.get());
                case 53:
                    Transitions transitions3 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return new EnterDesktopTaskTransitionHandler(transitions3, (InteractionJankMonitor) provider12.get());
                case 54:
                    context27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Transitions transitions4 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    DesktopModeTaskRepository desktopModeTaskRepository2 = (DesktopModeTaskRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer5 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) provider13.get();
                    Handler handler3 = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                    boolean z = DesktopModeStatus.IS_VEILED_RESIZE_ENABLED;
                    int i3 = SystemProperties.getInt("persist.wm.debug.desktop_max_task_limit", context27.getResources().getInteger(android.R.integer.config_lowPowerStandbyNonInteractiveTimeout));
                    Optional of2 = (DesktopModeStatus.canEnterDesktopMode(context27) && DesktopModeFlags.ENABLE_DESKTOP_WINDOWING_TASK_LIMIT.isTrue() && i3 > 0) ? Optional.of(new DesktopTasksLimiter(transitions4, desktopModeTaskRepository2, shellTaskOrganizer5, i3, interactionJankMonitor, context27, handler3)) : Optional.empty();
                    Preconditions.checkNotNullFromProvides(of2);
                    return of2;
                case 55:
                    Transitions transitions5 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    context28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return new ExitDesktopTaskTransitionHandler(transitions5, context28, (InteractionJankMonitor) provider14.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 56:
                    return new DesktopModeDragAndDropTransitionHandler((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 57:
                    Transitions transitions6 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return new ToggleResizeDesktopTaskTransitionHandler(transitions6, (InteractionJankMonitor) provider15.get());
                case 58:
                    context29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Transitions transitions7 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    RootTaskDisplayAreaOrganizer rootTaskDisplayAreaOrganizer3 = (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    return new DefaultDragToDesktopTransitionHandler(context29, transitions7, rootTaskDisplayAreaOrganizer3, (InteractionJankMonitor) provider16.get(), DefaultDragToDesktopTransitionHandler.AnonymousClass1.INSTANCE);
                case 59:
                    context30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new DesktopModeLoggerTransitionObserver(context30, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (DesktopModeEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeEventLoggerProvider.get());
                case 60:
                    return new DesktopModeEventLogger();
                case 61:
                    return new RecentsTransitionHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (RecentTasksController) ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get()).orElse(null), (HomeTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideHomeTransitionObserverProvider.get());
                case 62:
                    context31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new MultiInstanceHelper(context31, context31.getPackageManager());
                case 63:
                    context32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new AppToWebGenericLinksParser(context32, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 64:
                    return new WindowDecorCaptionHandleRepository();
                case 65:
                    context33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Optional of3 = DesktopModeStatus.canEnterDesktopMode(context33) ? Optional.of(new DesktopActivityOrientationChangeHandler(context33, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get(), (ToggleResizeDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideToggleResizeDesktopTaskTransitionHandlerProvider.get(), (DesktopModeTaskRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider.get())) : Optional.empty();
                    Preconditions.checkNotNullFromProvides(of3);
                    return of3;
                case 66:
                    return new DefaultWindowDecorViewHostSupplier((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideApplicationScopeProvider.get());
                case 67:
                    Optional of4 = Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get());
                    Optional empty = (!of4.isPresent() || of4.get() == ShellUnfoldProgressProvider.NO_PROVIDER) ? Optional.empty() : (Optional) DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.dynamicOverrideOptionalOfUnfoldTransitionHandlerProvider).get();
                    Preconditions.checkNotNullFromProvides(empty);
                    return empty;
                case 68:
                    return Optional.of((UnfoldTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider.get());
                case 69:
                    return new UnfoldTransitionHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellUnfoldProgressProvider) Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()).get(), DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1762$$Nest$mfullscreenUnfoldTaskAnimator(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl), (SplitTaskUnfoldAnimator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellSplitTaskUnfoldAnimatorProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 70:
                    context34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit7 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellCommandHandler shellCommandHandler5 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellController shellController6 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    BubbleData bubbleData = (BubbleData) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleDataProvider.get();
                    FloatingContentCoordinator floatingContentCoordinator = (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService = (IStatusBarService) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager = (WindowManager) provider18.get();
                    WindowManagerShellWrapper windowManagerShellWrapper = (WindowManagerShellWrapper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowManagerShellWrapperProvider.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider19.get();
                    LauncherApps launcherApps = (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get();
                    TaskStackListenerImpl taskStackListenerImpl = (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get();
                    BubbleLogger bubbleLogger = (BubbleLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleLoggerProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer6 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    BubblePositioner bubblePositioner = (BubblePositioner) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubblePositionerProvider.get();
                    DisplayController displayController6 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    Optional of5 = Optional.of((OneHandedController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideOneHandedControllerProvider.get());
                    DragAndDropController dragAndDropController2 = (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get();
                    ShellExecutor shellExecutor6 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    Handler handler4 = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                    ShellExecutor shellExecutor7 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundExecutorProvider.get();
                    TaskViewTransitions taskViewTransitions = (TaskViewTransitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskViewTransitionsProvider.get();
                    Transitions transitions8 = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    SyncTransactionQueue syncTransactionQueue5 = (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager3 = (IWindowManager) provider20.get();
                    BubbleDataRepository bubbleDataRepository = new BubbleDataRepository(launcherApps, shellExecutor6, shellExecutor7, new BubblePersistentRepository(context34));
                    ProdBubbleProperties prodBubbleProperties = ProdBubbleProperties.INSTANCE;
                    return new BubbleController(context34, shellInit7, shellCommandHandler5, shellController6, bubbleData, floatingContentCoordinator, bubbleDataRepository, iStatusBarService, windowManager, windowManagerShellWrapper, userManager, launcherApps, bubbleLogger, taskStackListenerImpl, shellTaskOrganizer6, bubblePositioner, displayController6, of5, dragAndDropController2, shellExecutor6, handler4, shellExecutor7, taskViewTransitions, transitions8, syncTransactionQueue5, iWindowManager3);
                case 71:
                    return new BubbleData(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BubbleLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleLoggerProvider.get(), (BubblePositioner) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubblePositionerProvider.get(), (BubbleEducationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleEducationProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundExecutorProvider.get());
                case 72:
                    return new BubbleLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 73:
                    Context context35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    WindowManager windowManager2 = (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get();
                    BubblePositioner bubblePositioner2 = new BubblePositioner();
                    bubblePositioner2.mRotation = 0;
                    bubblePositioner2.mBubbleBarLocation = BubbleBarLocation.DEFAULT;
                    bubblePositioner2.mContext = context35;
                    DeviceConfig create = DeviceConfig.create(context35, windowManager2);
                    bubblePositioner2.mDeviceConfig = create;
                    bubblePositioner2.update(create);
                    return bubblePositioner2;
                case 74:
                    return new BubbleEducationController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 75:
                    return new FloatingContentCoordinator();
                case 76:
                    return new WindowManagerShellWrapper((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 77:
                    Context context36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit8 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellCommandHandler shellCommandHandler6 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellController shellController7 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    WindowManager windowManager3 = (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get();
                    DisplayController displayController7 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    DisplayLayout displayLayout = (DisplayLayout) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayLayoutProvider.get();
                    TaskStackListenerImpl taskStackListenerImpl2 = (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get();
                    UiEventLogger uiEventLogger = (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get();
                    InteractionJankMonitor interactionJankMonitor2 = (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get();
                    ShellExecutor shellExecutor8 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    Handler handler5 = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                    OneHandedSettingsUtil oneHandedSettingsUtil = new OneHandedSettingsUtil();
                    OneHandedAccessibilityUtil oneHandedAccessibilityUtil = new OneHandedAccessibilityUtil(context36);
                    OneHandedTimeoutHandler oneHandedTimeoutHandler = new OneHandedTimeoutHandler(shellExecutor8);
                    OneHandedState oneHandedState = new OneHandedState();
                    oneHandedState.mStateChangeListeners = new ArrayList();
                    OneHandedState.sCurrentState = 0;
                    OneHandedTutorialHandler oneHandedTutorialHandler = new OneHandedTutorialHandler(context36, oneHandedSettingsUtil, windowManager3, new BackgroundWindowManager(context36));
                    return new OneHandedController(context36, shellInit8, shellCommandHandler6, shellController7, displayController7, new OneHandedDisplayAreaOrganizer(context36, displayLayout, new OneHandedAnimationController(context36), oneHandedTutorialHandler, interactionJankMonitor2, shellExecutor8, handler5), new OneHandedTouchHandler(oneHandedTimeoutHandler, shellExecutor8), oneHandedTutorialHandler, oneHandedSettingsUtil, oneHandedAccessibilityUtil, oneHandedTimeoutHandler, oneHandedState, new OneHandedUiEventLogger(uiEventLogger), taskStackListenerImpl2, shellExecutor8, handler5);
                case 78:
                    return new DisplayLayout();
                case 79:
                    return new TaskViewTransitions((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 80:
                    Optional empty2 = Optional.empty();
                    FullscreenTaskListener fullscreenTaskListener = empty2.isPresent() ? (FullscreenTaskListener) empty2.get() : new FullscreenTaskListener((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), Optional.of((WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get()));
                    Preconditions.checkNotNullFromProvides(fullscreenTaskListener);
                    return fullscreenTaskListener;
                case 81:
                    Optional of6 = Optional.of((FreeformComponents) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformComponentsProvider.get());
                    if (!FreeformComponents.isFreeformEnabled(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context)) {
                        of6 = Optional.empty();
                    }
                    Preconditions.checkNotNullFromProvides(of6);
                    return of6;
                case 82:
                    FreeformTaskListener freeformTaskListener = (FreeformTaskListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformTaskListenerProvider.get();
                    FreeformTaskTransitionHandler freeformTaskTransitionHandler = (FreeformTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformTaskTransitionHandlerProvider.get();
                    FreeformTaskTransitionObserver freeformTaskTransitionObserver = (FreeformTaskTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformTaskTransitionObserverProvider.get();
                    Optional.of(freeformTaskTransitionHandler);
                    Optional.of(freeformTaskTransitionObserver);
                    return new FreeformComponents(freeformTaskListener);
                case 83:
                    Context context37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new FreeformTaskListener(context37, FreeformComponents.isFreeformEnabled(context37) ? (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get() : null, (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTaskRepositoryProvider.get(), (LaunchAdjacentController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideLaunchAdjacentControllerProvider.get(), (WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get());
                case 84:
                    return new FreeformTaskTransitionHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellAnimationExecutorProvider.get(), (DesktopModeTaskRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 85:
                    return new FreeformTaskTransitionObserver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get());
                case 86:
                    Optional of7 = Optional.of((OneHandedController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideOneHandedControllerProvider.get());
                    if (!SystemProperties.getBoolean("ro.support_one_handed_mode", false)) {
                        of7 = Optional.empty();
                    }
                    Preconditions.checkNotNullFromProvides(of7);
                    return of7;
                case 87:
                    Context context38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Optional ofNullable = Optional.ofNullable(SystemProperties.getBoolean("ro.support_hide_display_cutout", false) ? new HideDisplayCutoutController(context38, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), new HideDisplayCutoutOrganizer(context38, (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get())) : null);
                    Preconditions.checkNotNullFromProvides(ofNullable);
                    return ofNullable;
                case 88:
                    Optional ofNullable2 = Optional.ofNullable(Transitions.ENABLE_SHELL_TRANSITIONS ? new ActivityEmbeddingController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get()) : null);
                    Preconditions.checkNotNullFromProvides(ofNullable2);
                    return ofNullable2;
                case 89:
                    Optional of8 = Optional.of((DefaultMixedHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideMixedTransitionHandlerProvider.get());
                    if (!of8.isPresent()) {
                        of8 = Optional.empty();
                    }
                    Preconditions.checkNotNullFromProvides(of8);
                    return of8;
                case 90:
                    return new DefaultMixedHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), Optional.of((RecentsTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentsTransitionHandlerProvider.get()), (KeyguardTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideKeyguardTransitionHandlerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider2.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideActivityEmbeddingControllerProvider.get());
                case 91:
                    PipTransitionController pipTransitionController = (com.android.wm.shell.pip.PipTransition) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionProvider.get();
                    PipTransitionController pipTransitionController2 = (PipTransition) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionProvider2.get();
                    if (PipUtils.isPip2ExperimentEnabled()) {
                        pipTransitionController = pipTransitionController2;
                    }
                    Preconditions.checkNotNullFromProvides(pipTransitionController);
                    return pipTransitionController;
                case 92:
                    return new com.android.wm.shell.pip.PipTransition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PipAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAnimationControllerProvider.get(), (PipSurfaceTransactionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSurfaceTransactionHelperProvider.get(), (HomeTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideHomeTransitionObserverProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get());
                case 93:
                    return new PipAnimationController((PipSurfaceTransactionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSurfaceTransactionHelperProvider.get());
                case 94:
                    return new PipSurfaceTransactionHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 95:
                    return new PipBoundsAlgorithm(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipSnapAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSnapAlgorithmProvider.get(), (PhonePipKeepClearAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePhonePipKeepClearAlgorithmProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get());
                case 96:
                    return new PipBoundsState(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get());
                case 97:
                    return new PhoneSizeSpecSource(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get());
                case 98:
                    Context context39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    PipDisplayLayoutState pipDisplayLayoutState = new PipDisplayLayoutState();
                    pipDisplayLayoutState.mScreenEdgeInsets = null;
                    pipDisplayLayoutState.mContext = context39;
                    pipDisplayLayoutState.mDisplayLayout = new DisplayLayout();
                    pipDisplayLayoutState.reloadResources();
                    return pipDisplayLayoutState;
                case 99:
                    return new PipSnapAlgorithm();
                default:
                    throw new AssertionError(i2);
            }
        }

        public Object get1$1() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Context context;
            Provider provider5;
            Provider provider6;
            DelegateFactory delegateFactory;
            Provider provider7;
            DelegateFactory delegateFactory2;
            DelegateFactory delegateFactory3;
            DelegateFactory delegateFactory4;
            DelegateFactory delegateFactory5;
            DelegateFactory delegateFactory6;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            Context context2;
            DelegateFactory delegateFactory7;
            Provider provider17;
            DelegateFactory delegateFactory8;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Optional optional;
            SwitchingProvider switchingProvider;
            Provider provider24;
            Context context3;
            Provider provider25;
            DelegateFactory delegateFactory9;
            Provider provider26;
            Provider provider27;
            Provider provider28;
            Context context4;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            DelegateFactory delegateFactory10;
            DelegateFactory delegateFactory11;
            DelegateFactory delegateFactory12;
            Provider provider32;
            Provider provider33;
            DelegateFactory delegateFactory13;
            Provider provider34;
            DelegateFactory delegateFactory14;
            Provider provider35;
            Provider provider36;
            Provider provider37;
            Provider provider38;
            SwitchingProvider switchingProvider2;
            Context context5;
            DelegateFactory delegateFactory15;
            SwitchingProvider switchingProvider3;
            Context context6;
            DelegateFactory delegateFactory16;
            SwitchingProvider switchingProvider4;
            Context context7;
            DelegateFactory delegateFactory17;
            SwitchingProvider switchingProvider5;
            Context context8;
            DelegateFactory delegateFactory18;
            DelegateFactory delegateFactory19;
            DelegateFactory delegateFactory20;
            DelegateFactory delegateFactory21;
            Provider provider39;
            Provider provider40;
            Provider provider41;
            Provider provider42;
            Provider provider43;
            DelegateFactory delegateFactory22;
            DelegateFactory delegateFactory23;
            DelegateFactory delegateFactory24;
            Provider provider44;
            Provider provider45;
            DelegateFactory delegateFactory25;
            DelegateFactory delegateFactory26;
            DelegateFactory delegateFactory27;
            SysUICoroutinesModule sysUICoroutinesModule;
            Provider provider46;
            Provider provider47;
            SysUICoroutinesModule sysUICoroutinesModule2;
            Provider provider48;
            Provider provider49;
            DelegateFactory delegateFactory28;
            DelegateFactory delegateFactory29;
            Provider provider50;
            DelegateFactory delegateFactory30;
            Provider provider51;
            Provider provider52;
            SwitchingProvider switchingProvider6;
            GlobalSettingsImpl globalSettingsImpl;
            DelegateFactory delegateFactory31;
            Provider provider53;
            SwitchingProvider switchingProvider7;
            Provider provider54;
            Provider provider55;
            int displayId;
            Provider provider56;
            Provider provider57;
            Provider provider58;
            Context context9;
            Provider provider59;
            Provider provider60;
            Provider provider61;
            DelegateFactory delegateFactory32;
            Provider provider62;
            Provider provider63;
            Provider provider64;
            DelegateFactory delegateFactory33;
            Provider provider65;
            Provider provider66;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            DelegateFactory delegateFactory34;
            Provider provider71;
            Provider provider72;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            Provider provider73;
            DelegateFactory delegateFactory35;
            Provider provider74;
            Provider provider75;
            Context context10;
            Provider provider76;
            DelegateFactory delegateFactory36;
            DelegateFactory delegateFactory37;
            Provider provider77;
            Provider provider78;
            Context context11;
            Provider provider79;
            Provider provider80;
            Provider provider81;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider9;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            Provider provider85;
            Provider provider86;
            Provider provider87;
            Provider provider88;
            Provider provider89;
            Provider provider90;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider10;
            Provider provider91;
            Provider provider92;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider11;
            Provider provider93;
            SwitchingProvider switchingProvider12;
            Provider provider94;
            Provider provider95;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider13;
            DelegateFactory delegateFactory38;
            Provider provider96;
            Provider provider97;
            Provider provider98;
            Provider provider99;
            DelegateFactory delegateFactory39;
            DelegateFactory delegateFactory40;
            Provider provider100;
            Provider provider101;
            Context context12;
            Provider provider102;
            Provider provider103;
            DelegateFactory delegateFactory41;
            Provider provider104;
            Provider provider105;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Provider provider110;
            Provider provider111;
            Provider provider112;
            Context context13;
            Provider provider113;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider14;
            Provider provider114;
            Provider provider115;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            Provider provider123;
            Provider provider124;
            Context context14;
            Provider provider125;
            Provider provider126;
            Provider provider127;
            DelegateFactory delegateFactory42;
            Provider provider128;
            Provider provider129;
            Provider provider130;
            Context context15;
            Provider provider131;
            Provider provider132;
            Provider provider133;
            DelegateFactory delegateFactory43;
            Context context16;
            Provider provider134;
            Provider provider135;
            Provider provider136;
            Provider provider137;
            Provider provider138;
            Provider provider139;
            Provider provider140;
            Provider provider141;
            SwitchingProvider switchingProvider15;
            Provider provider142;
            GlobalSettingsImpl globalSettingsImpl2;
            Provider provider143;
            Provider provider144;
            Provider provider145;
            Provider provider146;
            Provider provider147;
            Provider provider148;
            Provider provider149;
            Provider provider150;
            Provider provider151;
            Context context17;
            Provider provider152;
            Provider provider153;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider16;
            Provider provider154;
            Provider provider155;
            Provider provider156;
            Provider provider157;
            Provider provider158;
            Provider provider159;
            Provider provider160;
            Provider provider161;
            Provider provider162;
            Provider provider163;
            Provider provider164;
            Provider provider165;
            Context context18;
            DelegateFactory delegateFactory44;
            Provider provider166;
            Provider provider167;
            Provider provider168;
            Provider provider169;
            Provider provider170;
            Provider provider171;
            Provider provider172;
            DelegateFactory delegateFactory45;
            Provider provider173;
            Provider provider174;
            Provider provider175;
            Provider provider176;
            DelegateFactory delegateFactory46;
            DelegateFactory delegateFactory47;
            Provider provider177;
            Provider provider178;
            DelegateFactory delegateFactory48;
            Provider provider179;
            Provider provider180;
            Provider provider181;
            Provider provider182;
            Provider provider183;
            Provider provider184;
            Provider provider185;
            Provider provider186;
            Provider provider187;
            Provider provider188;
            Provider provider189;
            Provider provider190;
            DelegateFactory delegateFactory49;
            Provider provider191;
            Context context19;
            Provider provider192;
            Provider provider193;
            Provider provider194;
            Provider provider195;
            Provider provider196;
            DelegateFactory delegateFactory50;
            Provider provider197;
            Provider provider198;
            Provider provider199;
            DelegateFactory delegateFactory51;
            Provider provider200;
            Provider provider201;
            DelegateFactory delegateFactory52;
            Provider provider202;
            Provider provider203;
            DelegateFactory delegateFactory53;
            Provider provider204;
            Provider provider205;
            Provider provider206;
            Provider provider207;
            Provider provider208;
            Provider provider209;
            Provider provider210;
            DelegateFactory delegateFactory54;
            DelegateFactory delegateFactory55;
            DelegateFactory delegateFactory56;
            Provider provider211;
            DelegateFactory delegateFactory57;
            Provider provider212;
            Provider provider213;
            Provider provider214;
            Provider provider215;
            DelegateFactory delegateFactory58;
            DelegateFactory delegateFactory59;
            Provider provider216;
            Provider provider217;
            Provider provider218;
            DelegateFactory delegateFactory60;
            DelegateFactory delegateFactory61;
            Provider provider219;
            DelegateFactory delegateFactory62;
            Provider provider220;
            Context unused;
            Provider unused2;
            Provider unused3;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 100:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor = (ActiveNotificationsInteractor) provider.get();
                    NotifLiveDataStoreImpl notifLiveDataStoreImpl = (NotifLiveDataStoreImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifLiveDataStoreImplProvider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    return new NotificationVisibilityProviderImpl(activeNotificationsInteractor, notifLiveDataStoreImpl, (CommonNotifCollection) provider2.get());
                case 101:
                    ActiveNotificationListRepository activeNotificationListRepository = (ActiveNotificationListRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationListRepositoryProvider.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new ActiveNotificationsInteractor(activeNotificationListRepository, (CoroutineDispatcher) provider3.get());
                case 102:
                    return new ActiveNotificationListRepository();
                case 103:
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new NotifLiveDataStoreImpl((Executor) provider4.get());
                case 104:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider6.get();
                    ShellInterface shellInterface = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setShell;
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    Lazy lazy = DoubleCheck.lazy(delegateFactory);
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSurfaceProvider);
                    ScreenPinningRequest screenPinningRequest = (ScreenPinningRequest) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenPinningRequestProvider.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController = (NavigationModeController) provider7.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory2.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState = (SysUiState) delegateFactory3.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory6.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker = (DisplayTracker) provider11.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    KeyguardUnlockAnimationController keyguardUnlockAnimationController = (KeyguardUnlockAnimationController) provider12.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inWindowLauncherUnlockAnimationManagerProvider;
                    AssistUtils assistUtils = (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider14.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideProgressForwarderProvider;
                    Optional optional2 = (Optional) provider15.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider16.get();
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardTouchpadEduStatsInteractorImplProvider);
                    return new OverviewProxyService(context, executor, commandQueue, shellInterface, lazy, lazy2, screenPinningRequest, navigationModeController, notificationShadeWindowController, sysUiState, delegateFactory4, delegateFactory5, userTracker, userManager, wakefulnessLifecycle, uiEventLogger, displayTracker, keyguardUnlockAnimationController, assistUtils, dumpManager, optional2, broadcastDispatcher);
                case 105:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService = (OverviewProxyService) delegateFactory7.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController2 = (NavigationModeController) provider17.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState2 = (SysUiState) delegateFactory8.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor2 = (Executor) provider19.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider20.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navBarHelperProvider;
                    NavBarHelper navBarHelper = (NavBarHelper) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.taskbarDelegateProvider;
                    TaskbarDelegate taskbarDelegate = (TaskbarDelegate) provider22.get();
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider23.get();
                    AutoHideController autoHideController = (AutoHideController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.autoHideControllerProvider.get();
                    LightBarController lightBarController = (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get();
                    TaskStackChangeListeners taskStackChangeListeners = (TaskStackChangeListeners) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideTaskStackChangeListenersProvider.get();
                    Optional optional3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setPip;
                    optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBackAnimation;
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new NavigationBarControllerImpl(context2, overviewProxyService, navigationModeController2, sysUiState2, commandQueue2, executor2, configurationController, navBarHelper, taskbarDelegate, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, dumpManager2, autoHideController, lightBarController, taskStackChangeListeners, optional3, optional, (DisplayTracker) provider24.get());
                case 106:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController2 = (ConfigurationController) provider25.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory9.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor3 = (Executor) provider26.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor4 = (Executor) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new NavigationModeController(context3, configurationController2, userTracker2, executor3, executor4, (DumpManager) provider28.get());
                case 107:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider29.get();
                    AccessibilityButtonModeObserver accessibilityButtonModeObserver = (AccessibilityButtonModeObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityButtonModeObserverProvider.get();
                    AccessibilityButtonTargetsObserver accessibilityButtonTargetsObserver = (AccessibilityButtonTargetsObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityButtonTargetsObserverProvider.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityGestureTargetsObserverProvider;
                    AccessibilityGestureTargetsObserver accessibilityGestureTargetsObserver = (AccessibilityGestureTargetsObserver) provider30.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemActionsProvider;
                    SystemActions systemActions = (SystemActions) provider31.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService2 = (OverviewProxyService) delegateFactory10.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy3 = DoubleCheck.lazy(delegateFactory11);
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider);
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory12.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController3 = (NavigationModeController) provider32.get();
                    EdgeBackGestureHandler.Factory m1550$$Nest$medgeBackGestureHandlerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1550$$Nest$medgeBackGestureHandlerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager = (IWindowManager) provider33.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory13.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker2 = (DisplayTracker) provider34.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController2 = (NotificationShadeWindowController) delegateFactory14.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController3 = (ConfigurationController) provider35.get();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider36.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue3 = (CommandQueue) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor5 = (Executor) provider38.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return new NavBarHelper(context4, accessibilityManager, accessibilityButtonModeObserver, accessibilityButtonTargetsObserver, accessibilityGestureTargetsObserver, systemActions, overviewProxyService2, lazy3, keyguardStateController, navigationModeController3, m1550$$Nest$medgeBackGestureHandlerFactory, iWindowManager, userTracker3, displayTracker2, notificationShadeWindowController2, configurationController3, dumpManager3, commandQueue3, executor5, (Handler) switchingProvider2.get());
                case 108:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory15.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new AccessibilityButtonModeObserver(context5, userTracker4, (SecureSettings) switchingProvider3.get());
                case 109:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker5 = (UserTracker) delegateFactory16.get();
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new AccessibilityButtonTargetsObserver(context6, userTracker5, (SecureSettings) switchingProvider4.get());
                case 110:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker6 = (UserTracker) delegateFactory17.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new AccessibilityGestureTargetsObserver(context7, userTracker6, (SecureSettings) switchingProvider5.get());
                case 111:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController3 = (NotificationShadeWindowController) delegateFactory19.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory20.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory21.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    Lazy lazy4 = DoubleCheck.lazy(provider39);
                    Optional of = Optional.of((Recents) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideRecentsProvider.get());
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new SystemActions(context8, notificationShadeWindowController3, keyguardStateController2, shadeController, lazy4, of, (DisplayTracker) provider40.get());
                case 112:
                    unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeControllerSceneImplProvider;
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeControllerImplProvider;
                    return ShadeModule_Companion_ProvideShadeControllerFactory.provideShadeController(provider41);
                case 113:
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider42.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider43.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory22.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory23.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider;
                    NotificationStackScrollLayout notificationStackScrollLayout = (NotificationStackScrollLayout) delegateFactory24.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider44.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue4 = (CommandQueue) provider45.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory25.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController4 = (NotificationShadeWindowController) delegateFactory26.get();
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    return new ShadeControllerSceneImpl(coroutineDispatcher, coroutineScope, shadeInteractor, sceneInteractor, notificationStackScrollLayout, vibratorHelper, commandQueue4, statusBarKeyguardViewManager, notificationShadeWindowController4, DoubleCheck.lazy(delegateFactory27));
                case 114:
                    sysUICoroutinesModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule;
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider46.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    return SysUICoroutinesModule_BgApplicationScopeFactory.bgApplicationScope(sysUICoroutinesModule, coroutineScope2, (CoroutineContext) provider47.get());
                case 115:
                    sysUICoroutinesModule2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule;
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider48.get();
                    SysUICoroutinesModule_BgCoroutineContextFactory.bgCoroutineContext(sysUICoroutinesModule2, coroutineDispatcher2);
                    return coroutineDispatcher2;
                case 116:
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider49.get();
                    DeviceProvisioningInteractor deviceProvisioningInteractor = (DeviceProvisioningInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisioningInteractorProvider.get();
                    DisableFlagsRepositoryImpl disableFlagsRepositoryImpl = (DisableFlagsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsRepositoryImplProvider.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters = (DozeParameters) delegateFactory28.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl = (KeyguardRepositoryImpl) delegateFactory29.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider50.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory30.get();
                    UserSetupRepositoryImpl userSetupRepositoryImpl = (UserSetupRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSetupRepositoryImplProvider.get();
                    UserSwitcherInteractor userSwitcherInteractor = (UserSwitcherInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBaseShadeInteractorProvider;
                    return new ShadeInteractorImpl(coroutineScope3, deviceProvisioningInteractor, disableFlagsRepositoryImpl, dozeParameters, keyguardRepositoryImpl, keyguardTransitionInteractor, powerInteractor, userSetupRepositoryImpl, userSwitcherInteractor, (BaseShadeInteractor) provider51.get(), (ShadeModeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindShadeModeInteractorProvider.get());
                case 117:
                    return new DeviceProvisioningInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1544$$Nest$mdeviceProvisioningRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 118:
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisionedControllerImplProvider;
                    DeviceProvisionedControllerImpl deviceProvisionedControllerImpl = (DeviceProvisionedControllerImpl) provider52.get();
                    SystemUIGoogleModule_ProvideDeviceProvisionedControllerFactory.provideDeviceProvisionedController(deviceProvisionedControllerImpl);
                    return deviceProvisionedControllerImpl;
                case 119:
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider6.get();
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker7 = (UserTracker) delegateFactory31.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider53.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler = (Handler) switchingProvider7.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new DeviceProvisionedControllerImpl(secureSettings, globalSettingsImpl, userTracker7, dumpManager4, handler, (Executor) provider54.get());
                case 120:
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue5 = (CommandQueue) provider55.get();
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider56.get();
                    RemoteInputQuickSettingsDisabler remoteInputQuickSettingsDisabler = (RemoteInputQuickSettingsDisabler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputQuickSettingsDisablerProvider.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisableFlagsRepositoryLogBufferProvider;
                    LogBuffer logBuffer = (LogBuffer) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsLoggerProvider;
                    return new DisableFlagsRepositoryImpl(commandQueue5, displayId, coroutineScope4, remoteInputQuickSettingsDisabler, logBuffer, (DisableFlagsLogger) provider58.get());
                case 121:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue6 = (CommandQueue) provider59.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    SplitShadeStateControllerImpl splitShadeStateControllerImpl = (SplitShadeStateControllerImpl) provider60.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    return new RemoteInputQuickSettingsDisabler(context9, commandQueue6, splitShadeStateControllerImpl, (ConfigurationController) provider61.get());
                case 122:
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new SplitShadeStateControllerImpl((FeatureFlags) delegateFactory32.get());
                case 123:
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideDisableFlagsRepositoryLogBufferFactory.provideDisableFlagsRepositoryLogBuffer((LogBufferFactory) provider62.get());
                case 124:
                    return new DisableFlagsLogger();
                case 125:
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl = (KeyguardTransitionRepositoryImpl) provider64.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new KeyguardTransitionInteractor(coroutineScope5, keyguardTransitionRepositoryImpl, (SceneInteractor) delegateFactory33.get());
                case 126:
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new KeyguardTransitionRepositoryImpl((CoroutineDispatcher) provider65.get());
                case 127:
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider66.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new UserSetupRepositoryImpl(deviceProvisionedController, coroutineDispatcher3, (CoroutineScope) provider68.get());
                case 128:
                    unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorSceneContainerImplProvider;
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorLegacyImplProvider;
                    return ShadeModule_Companion_ProvideBaseShadeInteractorFactory.provideBaseShadeInteractor(provider69);
                case 129:
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    throw new IllegalStateException("New code path not supported when SceneContainerFlag is disabled.");
                case 130:
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider71.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    return new ShadeModeInteractorImpl(coroutineScope6, (ShadeRepository) provider72.get());
                case 131:
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new ShadeRepositoryImpl();
                case 132:
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider73.get();
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl2 = (KeyguardRepositoryImpl) delegateFactory35.get();
                    SharedNotificationContainerInteractor sharedNotificationContainerInteractor = (SharedNotificationContainerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerInteractorProvider.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    return new ShadeInteractorLegacyImpl(coroutineScope7, keyguardRepositoryImpl2, sharedNotificationContainerInteractor, (ShadeRepository) provider74.get());
                case 133:
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider;
                    ConfigurationRepository configurationRepository = (ConfigurationRepository) provider75.get();
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    Lazy lazy5 = DoubleCheck.lazy(provider76);
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Lazy lazy6 = DoubleCheck.lazy(delegateFactory36);
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory37.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    return new SharedNotificationContainerInteractor(configurationRepository, context10, lazy5, lazy6, keyguardInteractor, (DeviceEntryUdfpsInteractor) provider77.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenHeaderHelperProvider));
                case 134:
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController4 = (ConfigurationController) provider78.get();
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new ConfigurationRepositoryImpl(configurationController4, context11, (CoroutineScope) provider79.get(), new DisplayUtilsWrapper());
                case 135:
                    FingerprintPropertyInteractor fingerprintPropertyInteractor = (FingerprintPropertyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyInteractorProvider.get();
                    DeviceEntryFingerprintAuthRepository deviceEntryFingerprintAuthRepository = (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    return new DeviceEntryUdfpsInteractor(fingerprintPropertyInteractor, deviceEntryFingerprintAuthRepository, (BiometricSettingsRepositoryImpl) provider80.get());
                case 136:
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider81.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context20 = (Context) switchingProvider9.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider;
                    FingerprintPropertyRepository fingerprintPropertyRepository = (FingerprintPropertyRepository) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider83.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor = (DisplayStateInteractor) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    return new FingerprintPropertyInteractor(coroutineScope8, context20, fingerprintPropertyRepository, configurationInteractor, displayStateInteractor, (UdfpsOverlayInteractor) provider85.get());
                case 137:
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider87.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    return new FingerprintPropertyRepositoryImpl(coroutineScope9, coroutineDispatcher4, (FingerprintManager) provider88.get());
                case 138:
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider;
                    return new ConfigurationInteractor((ConfigurationRepository) provider89.get());
                case 139:
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider90.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context21 = (Context) switchingProvider10.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new DisplayStateInteractorImpl(coroutineScope10, context21, (Executor) provider91.get(), (DisplayStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayStateRepositoryImplProvider.get(), (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get());
                case 140:
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope11 = (CoroutineScope) provider92.get();
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new DisplayStateRepositoryImpl(coroutineScope11, (Context) switchingProvider11.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1546$$Nest$mdeviceStateRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get());
                case 141:
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager = (DisplayManager) provider93.get();
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider12.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope12 = (CoroutineScope) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new DisplayRepositoryImpl(displayManager, handler2, coroutineScope12, (CoroutineDispatcher) provider95.get());
                case 142:
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context22 = (Context) switchingProvider13.get();
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController = (AuthController) delegateFactory38.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    FingerprintManager fingerprintManager = (FingerprintManager) provider97.get();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new UdfpsOverlayInteractor(context22, authController, selectedUserInteractor, fingerprintManager, (CoroutineScope) provider98.get());
                case 143:
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    return new SelectedUserInteractor((UserRepositoryImpl) provider99.get());
                case 144:
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController2 = (AuthController) delegateFactory39.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory40.get();
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope13 = (CoroutineScope) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new DeviceEntryFingerprintAuthRepositoryImpl(authController2, keyguardUpdateMonitor, coroutineScope13, (CoroutineDispatcher) provider101.get());
                case 145:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider102.get();
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider103.get();
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController3 = (AuthController) delegateFactory41.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider104.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) provider105.get();
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope14 = (CoroutineScope) provider106.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider107.get();
                    BiometricManager biometricManager = (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get();
                    DevicePostureRepositoryImpl devicePostureRepositoryImpl = (DevicePostureRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureRepositoryImplProvider.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider;
                    FacePropertyRepositoryImpl facePropertyRepositoryImpl = (FacePropertyRepositoryImpl) provider108.get();
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider;
                    FingerprintPropertyRepository fingerprintPropertyRepository2 = (FingerprintPropertyRepository) provider109.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider;
                    MobileConnectionsRepository mobileConnectionsRepository = (MobileConnectionsRepository) provider110.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new BiometricSettingsRepositoryImpl(context12, lockPatternUtils, broadcastDispatcher2, authController3, userRepositoryImpl, devicePolicyManager, coroutineScope14, coroutineDispatcher5, biometricManager, devicePostureRepositoryImpl, facePropertyRepositoryImpl, fingerprintPropertyRepository2, mobileConnectionsRepository, (DumpManager) provider111.get());
                case 146:
                    com.android.systemui.statusbar.policy.DevicePostureController devicePostureController = (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get();
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new DevicePostureRepositoryImpl(devicePostureController, (CoroutineDispatcher) provider112.get());
                case 147:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DeviceStateManager deviceStateManager = (DeviceStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDeviceStateManagerProvider.get();
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new DevicePostureControllerImpl(context13, deviceStateManager, (Executor) provider113.get());
                case 148:
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context23 = (Context) switchingProvider14.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor6 = (Executor) provider114.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope15 = (CoroutineScope) provider115.get();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider116.get();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider;
                    FaceManager faceManager = (FaceManager) provider117.get();
                    CameraManager cameraManager = (CameraManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideCameraManagerProvider.get();
                    DisplayStateRepository displayStateRepository = (DisplayStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayStateRepositoryImplProvider.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider;
                    return new FacePropertyRepositoryImpl(context23, executor6, coroutineScope15, coroutineDispatcher6, faceManager, cameraManager, displayStateRepository, (ConfigurationRepository) provider118.get());
                case 149:
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope16 = (CoroutineScope) provider119.get();
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileConnectionsRepositoryImplProvider;
                    MobileConnectionsRepositoryImpl mobileConnectionsRepositoryImpl = (MobileConnectionsRepositoryImpl) provider120.get();
                    DemoMobileConnectionsRepository m1542$$Nest$mdemoMobileConnectionsRepository = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1542$$Nest$mdemoMobileConnectionsRepository(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    return new MobileRepositorySwitcher(coroutineScope16, mobileConnectionsRepositoryImpl, m1542$$Nest$mdemoMobileConnectionsRepository, (DemoModeController) provider121.get());
                case 150:
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider;
                    ConnectivityRepositoryImpl connectivityRepositoryImpl = (ConnectivityRepositoryImpl) provider122.get();
                    SubscriptionManager subscriptionManager = (SubscriptionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSubscriptionManagerProvider.get();
                    SubscriptionManagerProxyImpl subscriptionManagerProxyImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.subscriptionManagerProxyImpl();
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager = (TelephonyManager) provider123.get();
                    MobileInputLogger mobileInputLogger = (MobileInputLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileInputLoggerProvider.get();
                    TableLogBuffer tableLogBuffer = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMobileSummaryLogBufferProvider.get();
                    MobileMappingsProxyImpl mobileMappingsProxyImpl = new MobileMappingsProxyImpl();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider124.get();
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider125.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope17 = (CoroutineScope) provider126.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider127.get();
                    AirplaneModeRepository airplaneModeRepository = (AirplaneModeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeRepositoryImplProvider.get();
                    WifiRepository wifiRepository = (WifiRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiRepositorySwitcherProvider.get();
                    FullMobileConnectionRepository.Factory m1558$$Nest$mfullMobileConnectionRepositoryFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1558$$Nest$mfullMobileConnectionRepositoryFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory42.get();
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new MobileConnectionsRepositoryImpl(connectivityRepositoryImpl, subscriptionManager, subscriptionManagerProxyImpl, telephonyManager, mobileInputLogger, tableLogBuffer, mobileMappingsProxyImpl, broadcastDispatcher3, context14, coroutineDispatcher7, coroutineScope17, coroutineDispatcher8, airplaneModeRepository, wifiRepository, m1558$$Nest$mfullMobileConnectionRepositoryFactory, keyguardUpdateMonitor2, (DumpManager) provider128.get());
                case 151:
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider;
                    ConnectivityManager connectivityManager = (ConnectivityManager) provider129.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivitySlotsProvider;
                    ConnectivitySlots connectivitySlots = (ConnectivitySlots) provider130.get();
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager5 = (DumpManager) provider131.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityInputLoggerProvider;
                    ConnectivityInputLogger connectivityInputLogger = (ConnectivityInputLogger) provider132.get();
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope18 = (CoroutineScope) provider133.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    return new ConnectivityRepositoryImpl(connectivityManager, connectivitySlots, context15, dumpManager5, connectivityInputLogger, coroutineScope18, (TunerService) delegateFactory43.get());
                case 152:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new ConnectivitySlots(context16);
                case 153:
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSharedConnectivityTableLogBufferProvider;
                    return new ConnectivityInputLogger((LogBuffer) provider134.get());
                case 154:
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideSharedConnectivityTableLogBufferFactory.provideSharedConnectivityTableLogBuffer((LogBufferFactory) provider135.get());
                case 155:
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMobileInputLogBufferProvider;
                    return new MobileInputLogger((LogBuffer) provider136.get());
                case 156:
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideMobileInputLogBufferFactory.provideMobileInputLogBuffer((LogBufferFactory) provider137.get());
                case 157:
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideMobileSummaryLogBufferFactory.provideMobileSummaryLogBuffer((TableLogBufferFactory) provider138.get());
                case 158:
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager6 = (DumpManager) provider139.get();
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new TableLogBufferFactory(dumpManager6, (SystemClock) provider140.get(), (LogcatEchoTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLogcatEchoTrackerProvider.get());
                case 159:
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider;
                    ConnectivityManager connectivityManager2 = (ConnectivityManager) provider141.get();
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider15.get();
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext = (CoroutineContext) provider142.get();
                    globalSettingsImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    TableLogBuffer tableLogBuffer2 = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAirplaneTableLogBufferProvider.get();
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new AirplaneModeRepositoryImpl(connectivityManager2, handler3, coroutineContext, globalSettingsImpl2, tableLogBuffer2, (CoroutineScope) provider143.get());
                case 160:
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideAirplaneTableLogBufferFactory.provideAirplaneTableLogBuffer((TableLogBufferFactory) provider144.get());
                case 161:
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideRealWifiRepositoryProvider;
                    RealWifiRepository realWifiRepository = (RealWifiRepository) provider145.get();
                    DemoWifiRepository m1543$$Nest$mdemoWifiRepository = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1543$$Nest$mdemoWifiRepository(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController = (DemoModeController) provider146.get();
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new WifiRepositorySwitcher(realWifiRepository, m1543$$Nest$mdemoWifiRepository, demoModeController, (CoroutineScope) provider147.get());
                case 162:
                    WifiManager wifiManager = (WifiManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWifiManagerProvider.get();
                    DisabledWifiRepository disabledWifiRepository = (DisabledWifiRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disabledWifiRepositoryProvider.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider2;
                    return StatusBarPipelineModule_Companion_ProvideRealWifiRepositoryFactory.provideRealWifiRepository(wifiManager, disabledWifiRepository, (WifiRepositoryImpl.Factory) provider148.get());
                case 163:
                    return new DisabledWifiRepository();
                case 164:
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope19 = (CoroutineScope) provider149.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor7 = (Executor) provider150.get();
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new WifiRepositoryImpl.Factory(coroutineScope19, executor7, (CoroutineDispatcher) provider151.get(), (WifiPickerTrackerFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiPickerTrackerFactoryProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWifiLogBufferProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWifiTableLogBufferProvider.get());
                case 165:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    WifiManager wifiManager2 = (WifiManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWifiManagerProvider.get();
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider;
                    ConnectivityManager connectivityManager3 = (ConnectivityManager) provider152.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider153.get();
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return new WifiPickerTrackerFactory(context17, wifiManager2, connectivityManager3, systemClock, (Handler) switchingProvider16.get(), ThreadFactoryImpl_Factory.newInstance());
                case 166:
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideWifiLogBufferFactory.provideWifiLogBuffer((LogBufferFactory) provider154.get());
                case 167:
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideWifiTableLogBufferFactory.provideWifiTableLogBuffer((TableLogBufferFactory) provider155.get());
                case 168:
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController2 = (DemoModeController) provider156.get();
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DemoModeWifiDataSource(demoModeController2, (CoroutineScope) provider157.get());
                case 169:
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider158.get();
                    CarrierConfigManager carrierConfigManager = (CarrierConfigManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideCarrierConfigManagerProvider.get();
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager7 = (DumpManager) provider159.get();
                    MobileInputLogger mobileInputLogger2 = (MobileInputLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileInputLoggerProvider.get();
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new CarrierConfigRepository(broadcastDispatcher4, carrierConfigManager, dumpManager7, mobileInputLogger2, (CoroutineScope) provider160.get());
                case 170:
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager2 = (TelephonyManager) provider161.get();
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext2 = (CoroutineContext) provider162.get();
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new CarrierMergedConnectionRepository.Factory(telephonyManager2, coroutineContext2, (CoroutineScope) provider163.get(), (WifiRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiRepositorySwitcherProvider.get());
                case 171:
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController3 = (DemoModeController) provider164.get();
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DemoModeMobileConnectionDataSource(demoModeController3, (CoroutineScope) provider165.get());
                case 172:
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new LargeScreenHeaderHelper(context18);
                case 173:
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    return (NotificationStackScrollLayout) ((NotificationShadeWindowView) delegateFactory44.get()).requireViewById(R.id.notification_stack_scroller);
                case 174:
                    return (NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesWindowRootViewProvider.get();
                case 175:
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    LayoutInflater layoutInflater = (LayoutInflater) provider166.get();
                    SwitchingProvider switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOfSceneProvider;
                    SwitchingProvider switchingProvider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOfOverlayProvider;
                    return ShadeViewProviderModule_Companion_ProvidesWindowRootViewFactory.providesWindowRootView(layoutInflater);
                case 176:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$2
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 177:
                    FalsingCollector falsingCollector = (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    return new FalsingInteractor(falsingCollector, (FalsingManager) provider167.get());
                case 178:
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    PluginManager pluginManager = (PluginManager) provider168.get();
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor8 = (Executor) provider169.get();
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider170.get();
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new FalsingManagerProxy(pluginManager, executor8, deviceConfigProxy, (DumpManager) provider171.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightLineFalsingManagerProvider);
                case 179:
                    FalsingDataProvider falsingDataProvider = (FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider172.get();
                    Set m1613$$Nest$mnamedSetOfFalsingClassifier = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1613$$Nest$mnamedSetOfFalsingClassifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SingleTapClassifier singleTapClassifier = new SingleTapClassifier((FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get(), ((ViewConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideViewConfigurationProvider.get()).getScaledTouchSlop());
                    LongTapClassifier longTapClassifier = new LongTapClassifier((FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get(), ((ViewConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideViewConfigurationProvider.get()).getScaledTouchSlop() * 1.25f);
                    DoubleTapClassifier doubleTapClassifier = new DoubleTapClassifier((FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get(), new SingleTapClassifier((FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get(), ((ViewConfiguration) r10.provideViewConfigurationProvider.get()).getScaledTouchSlop()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getDimension(R.dimen.double_tap_slop));
                    HistoryTracker historyTracker = (HistoryTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.historyTrackerProvider.get();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory45.get();
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    return new BrightLineFalsingManager(falsingDataProvider, metricsLogger, m1613$$Nest$mnamedSetOfFalsingClassifier, singleTapClassifier, longTapClassifier, doubleTapClassifier, historyTracker, keyguardStateController3, (AccessibilityManager) provider173.get(), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIsTestHarnessProvider.get()).booleanValue());
                case 180:
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new HistoryTracker((SystemClock) provider174.get());
                case 181:
                    SetBuilder setBuilder = new SetBuilder(7);
                    EmptySet emptySet = EmptySet.INSTANCE;
                    Preconditions.checkNotNullFromProvides(emptySet);
                    setBuilder.addAll(emptySet);
                    setBuilder.add((Scene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerSceneProvider.get());
                    setBuilder.add((Scene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneProvider.get());
                    setBuilder.add((Scene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneSceneProvider.get());
                    setBuilder.add((Scene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSceneProvider.get());
                    setBuilder.add((Scene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsSceneProvider.get());
                    setBuilder.add((Scene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeSceneProvider.get());
                    return setBuilder.build();
                case 182:
                    return new BouncerScene((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$3) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider5.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider13.get(), (BouncerViewModule$Companion$bouncerDialogFactory$1) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerDialogFactoryProvider.get());
                case 183:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$3(this);
                case 184:
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope20 = (CoroutineScope) provider175.get();
                    BouncerRepository bouncerRepository = (BouncerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerRepositoryProvider.get();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider;
                    AuthenticationInteractor authenticationInteractor = (AuthenticationInteractor) provider176.get();
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor = (DeviceEntryFaceAuthInteractor) delegateFactory46.get();
                    FalsingInteractor falsingInteractor = (FalsingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingInteractorProvider.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory47.get();
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider177.get();
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    return new BouncerInteractor(coroutineScope20, bouncerRepository, authenticationInteractor, deviceEntryFaceAuthInteractor, falsingInteractor, powerInteractor2, uiEventLogger2, (SessionTracker) provider178.get(), (SceneBackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneBackInteractorProvider.get());
                case 185:
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new BouncerRepository((FeatureFlagsClassic) delegateFactory48.get());
                case 186:
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope21 = (CoroutineScope) provider179.get();
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher9 = (CoroutineDispatcher) provider180.get();
                    AuthenticationRepositoryImpl authenticationRepositoryImpl = (AuthenticationRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationRepositoryImplProvider.get();
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new AuthenticationInteractor(coroutineScope21, coroutineDispatcher9, authenticationRepositoryImpl, (SelectedUserInteractor) provider181.get());
                case 187:
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope22 = (CoroutineScope) provider182.get();
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher10 = (CoroutineDispatcher) provider183.get();
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock2 = (SystemClock) provider184.get();
                    AuthenticationModule$getSecurityMode$1 authenticationModule$getSecurityMode$1 = new AuthenticationModule$getSecurityMode$1((KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get());
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl2 = (UserRepositoryImpl) provider185.get();
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils2 = (LockPatternUtils) provider186.get();
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager2 = (DevicePolicyManager) provider187.get();
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) provider188.get();
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider;
                    return new AuthenticationRepositoryImpl(coroutineScope22, coroutineDispatcher10, systemClock2, authenticationModule$getSecurityMode$1, userRepositoryImpl2, lockPatternUtils2, devicePolicyManager2, broadcastDispatcher5, (MobileConnectionsRepository) provider189.get());
                case 188:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils3 = (LockPatternUtils) provider190.get();
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new KeyguardSecurityModel(m977$$Nest$mmainResources, lockPatternUtils3, (KeyguardUpdateMonitor) delegateFactory49.get());
                case 189:
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider;
                    FaceManager faceManager2 = (FaceManager) provider191.get();
                    Lazy lazy7 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider);
                    Lazy lazy8 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noopDeviceEntryFaceAuthInteractorProvider);
                    if (faceManager2 != null) {
                        Object obj = lazy7.get();
                        Intrinsics.checkNotNull(obj);
                        return (DeviceEntryFaceAuthInteractor) obj;
                    }
                    Object obj2 = lazy8.get();
                    Intrinsics.checkNotNull(obj2);
                    return (DeviceEntryFaceAuthInteractor) obj2;
                case 190:
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope23 = (CoroutineScope) provider192.get();
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher11 = (CoroutineDispatcher) provider193.get();
                    DeviceEntryFaceAuthRepositoryImpl deviceEntryFaceAuthRepositoryImpl = (DeviceEntryFaceAuthRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthRepositoryImplProvider.get();
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    Lazy lazy9 = DoubleCheck.lazy(provider194);
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider195.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider196.get();
                    FaceAuthenticationLogger faceAuthenticationLogger = (FaceAuthenticationLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceAuthenticationLoggerProvider.get();
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor3 = (KeyguardUpdateMonitor) delegateFactory50.get();
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider;
                    DeviceEntryFingerprintAuthInteractor deviceEntryFingerprintAuthInteractor = (DeviceEntryFingerprintAuthInteractor) provider197.get();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl3 = (UserRepositoryImpl) provider198.get();
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider;
                    FacePropertyRepositoryImpl facePropertyRepositoryImpl2 = (FacePropertyRepositoryImpl) provider199.get();
                    FaceWakeUpTriggersConfig faceWakeUpTriggersConfig = (FaceWakeUpTriggersConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceWakeUpTriggersConfigImplProvider.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor3 = (PowerInteractor) delegateFactory51.get();
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    BiometricSettingsRepositoryImpl biometricSettingsRepositoryImpl = (BiometricSettingsRepositoryImpl) provider200.get();
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider;
                    TrustManager trustManager = (TrustManager) provider201.get();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new SystemUIDeviceEntryFaceAuthInteractor(context19, coroutineScope23, coroutineDispatcher11, deviceEntryFaceAuthRepositoryImpl, lazy9, alternateBouncerInteractor, keyguardTransitionInteractor2, faceAuthenticationLogger, keyguardUpdateMonitor3, deviceEntryFingerprintAuthInteractor, userRepositoryImpl3, facePropertyRepositoryImpl2, faceWakeUpTriggersConfig, powerInteractor3, biometricSettingsRepositoryImpl, trustManager, DoubleCheck.lazy(delegateFactory52), (DeviceEntryFaceAuthStatusInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthStatusInteractorProvider.get());
                case 191:
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider;
                    FaceManager faceManager3 = (FaceManager) provider202.get();
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl4 = (UserRepositoryImpl) provider203.get();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory53.get();
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope24 = (CoroutineScope) provider204.get();
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher12 = (CoroutineDispatcher) provider205.get();
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher13 = (CoroutineDispatcher) provider206.get();
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor9 = (Executor) provider207.get();
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    SessionTracker sessionTracker = (SessionTracker) provider208.get();
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger3 = (UiEventLogger) provider209.get();
                    FaceAuthenticationLogger faceAuthenticationLogger2 = (FaceAuthenticationLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceAuthenticationLoggerProvider.get();
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    BiometricSettingsRepositoryImpl biometricSettingsRepositoryImpl2 = (BiometricSettingsRepositoryImpl) provider210.get();
                    DeviceEntryFingerprintAuthRepository deviceEntryFingerprintAuthRepository2 = (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl3 = (KeyguardRepositoryImpl) delegateFactory54.get();
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor4 = (PowerInteractor) delegateFactory55.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory56.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor2 = (AlternateBouncerInteractor) provider211.get();
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    Lazy lazy10 = DoubleCheck.lazy(delegateFactory57);
                    TableLogBuffer tableLogBuffer3 = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFaceDetectTableLogProvider.get();
                    TableLogBuffer tableLogBuffer4 = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFaceAuthTableLogProvider.get();
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) provider212.get();
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor2 = (DisplayStateInteractor) provider213.get();
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new DeviceEntryFaceAuthRepositoryImpl(faceManager3, userRepositoryImpl4, keyguardBypassController, coroutineScope24, coroutineDispatcher12, coroutineDispatcher13, executor9, sessionTracker, uiEventLogger3, faceAuthenticationLogger2, biometricSettingsRepositoryImpl2, deviceEntryFingerprintAuthRepository2, keyguardRepositoryImpl3, powerInteractor4, keyguardInteractor2, alternateBouncerInteractor2, lazy10, tableLogBuffer3, tableLogBuffer4, keyguardTransitionInteractor3, displayStateInteractor2, (DumpManager) provider214.get());
                case 192:
                    return new FaceAuthenticationLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFaceAuthLogProvider.get());
                case 193:
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider215.get()).create(300, "DeviceEntryFaceAuthRepositoryLog");
                case 194:
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory58.get();
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory59.get();
                    KeyguardBouncerRepositoryImpl keyguardBouncerRepositoryImpl = (KeyguardBouncerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBouncerRepositoryImplProvider.get();
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider;
                    FingerprintPropertyRepository fingerprintPropertyRepository3 = (FingerprintPropertyRepository) provider216.get();
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    BiometricSettingsRepositoryImpl biometricSettingsRepositoryImpl3 = (BiometricSettingsRepositoryImpl) provider217.get();
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock3 = (SystemClock) provider218.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor4 = (KeyguardUpdateMonitor) delegateFactory60.get();
                    Lazy lazy11 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricsAllowedInteractorProvider);
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    Lazy lazy12 = DoubleCheck.lazy(delegateFactory61);
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    Lazy lazy13 = DoubleCheck.lazy(provider219);
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    Lazy lazy14 = DoubleCheck.lazy(delegateFactory62);
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new AlternateBouncerInteractor(statusBarStateController, keyguardStateController4, keyguardBouncerRepositoryImpl, fingerprintPropertyRepository3, biometricSettingsRepositoryImpl3, systemClock3, keyguardUpdateMonitor4, lazy11, lazy12, lazy13, lazy14, (CoroutineScope) provider220.get());
                case 195:
                    return new KeyguardBouncerRepositoryImpl((SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBouncerLogBufferProvider.get());
                case 196:
                    return ((TableLogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider.get()).create(250, "BouncerTableLog");
                case 197:
                    return new DeviceEntryBiometricsAllowedInteractor((DeviceEntryFingerprintAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider.get(), (DeviceEntryBiometricSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricSettingsInteractorProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get());
                case 198:
                    DeviceEntryFingerprintAuthRepository deviceEntryFingerprintAuthRepository3 = (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get();
                    return new DeviceEntryFingerprintAuthInteractor(deviceEntryFingerprintAuthRepository3, (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get());
                case 199:
                    return new DeviceEntryBiometricSettingsInteractor((BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get10() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            Provider provider6;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            Provider provider7;
            Provider provider8;
            DelegateFactory delegateFactory;
            DelegateFactory delegateFactory2;
            QSLogger qSLogger;
            DelegateFactory delegateFactory3;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            DelegateFactory delegateFactory4;
            Context context;
            DelegateFactory delegateFactory5;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            SwitchingProvider switchingProvider3;
            Provider provider12;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider16;
            Provider provider17;
            DelegateFactory delegateFactory6;
            DelegateFactory delegateFactory7;
            QSLogger qSLogger2;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            Provider provider21;
            Provider provider22;
            DelegateFactory delegateFactory8;
            DelegateFactory delegateFactory9;
            QSLogger qSLogger3;
            Provider provider23;
            Provider provider24;
            GlobalSettingsImpl globalSettingsImpl;
            DelegateFactory delegateFactory10;
            Provider provider25;
            Provider provider26;
            Provider provider27;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            Provider provider28;
            Provider provider29;
            DelegateFactory delegateFactory11;
            DelegateFactory delegateFactory12;
            QSLogger qSLogger4;
            Provider provider30;
            DelegateFactory delegateFactory13;
            Provider provider31;
            Provider provider32;
            Provider provider33;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider7;
            Provider provider34;
            Provider provider35;
            DelegateFactory delegateFactory14;
            DelegateFactory delegateFactory15;
            QSLogger qSLogger5;
            Provider provider36;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            Provider provider40;
            Provider provider41;
            DelegateFactory delegateFactory16;
            DelegateFactory delegateFactory17;
            QSLogger qSLogger6;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider9;
            Provider provider45;
            Provider provider46;
            DelegateFactory delegateFactory18;
            DelegateFactory delegateFactory19;
            QSLogger qSLogger7;
            Provider provider47;
            Provider provider48;
            Provider provider49;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider10;
            Provider provider50;
            Provider provider51;
            DelegateFactory delegateFactory20;
            DelegateFactory delegateFactory21;
            QSLogger qSLogger8;
            Provider provider52;
            Provider provider53;
            Provider provider54;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider11;
            Provider provider55;
            Provider provider56;
            DelegateFactory delegateFactory22;
            DelegateFactory delegateFactory23;
            QSLogger qSLogger9;
            DelegateFactory delegateFactory24;
            Provider provider57;
            Provider provider58;
            Provider provider59;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider12;
            Provider provider60;
            Provider provider61;
            DelegateFactory delegateFactory25;
            DelegateFactory delegateFactory26;
            QSLogger qSLogger10;
            DelegateFactory delegateFactory27;
            Provider provider62;
            Provider provider63;
            Provider provider64;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider13;
            Provider provider65;
            Provider provider66;
            DelegateFactory delegateFactory28;
            DelegateFactory delegateFactory29;
            QSLogger qSLogger11;
            DelegateFactory delegateFactory30;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider14;
            Provider provider70;
            Provider provider71;
            DelegateFactory delegateFactory31;
            DelegateFactory delegateFactory32;
            QSLogger qSLogger12;
            DelegateFactory delegateFactory33;
            Provider provider72;
            Provider provider73;
            Provider provider74;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider15;
            Provider provider75;
            Provider provider76;
            DelegateFactory delegateFactory34;
            DelegateFactory delegateFactory35;
            QSLogger qSLogger13;
            Provider provider77;
            Provider provider78;
            Provider provider79;
            Provider provider80;
            Provider provider81;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider16;
            Provider provider82;
            Provider provider83;
            DelegateFactory delegateFactory36;
            DelegateFactory delegateFactory37;
            QSLogger qSLogger14;
            Provider provider84;
            Provider provider85;
            Provider provider86;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider17;
            Provider provider87;
            Provider provider88;
            DelegateFactory delegateFactory38;
            DelegateFactory delegateFactory39;
            QSLogger qSLogger15;
            DelegateFactory delegateFactory40;
            Provider provider89;
            DelegateFactory delegateFactory41;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider18;
            Provider provider96;
            Provider provider97;
            DelegateFactory delegateFactory42;
            DelegateFactory delegateFactory43;
            DelegateFactory delegateFactory44;
            QSLogger qSLogger16;
            Provider provider98;
            DelegateFactory delegateFactory45;
            Provider provider99;
            DelegateFactory delegateFactory46;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider19;
            Provider provider103;
            Provider provider104;
            DelegateFactory delegateFactory47;
            DelegateFactory delegateFactory48;
            QSLogger qSLogger17;
            DelegateFactory delegateFactory49;
            Provider provider105;
            SwitchingProvider switchingProvider20;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider21;
            Provider provider109;
            Provider provider110;
            DelegateFactory delegateFactory50;
            DelegateFactory delegateFactory51;
            QSLogger qSLogger18;
            DelegateFactory delegateFactory52;
            SwitchingProvider switchingProvider22;
            Provider provider111;
            Provider provider112;
            Provider provider113;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider23;
            Provider provider114;
            Provider provider115;
            DelegateFactory delegateFactory53;
            DelegateFactory delegateFactory54;
            QSLogger qSLogger19;
            NightDisplayListenerModule$Builder nightDisplayListenerModuleBuilder;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            Provider provider120;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider24;
            Provider provider121;
            Provider provider122;
            DelegateFactory delegateFactory55;
            DelegateFactory delegateFactory56;
            QSLogger qSLogger20;
            Provider provider123;
            Provider provider124;
            Provider provider125;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider25;
            Provider provider126;
            Provider provider127;
            DelegateFactory delegateFactory57;
            DelegateFactory delegateFactory58;
            QSLogger qSLogger21;
            DelegateFactory delegateFactory59;
            SwitchingProvider switchingProvider26;
            Provider provider128;
            Provider provider129;
            Provider provider130;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider27;
            Provider provider131;
            Provider provider132;
            DelegateFactory delegateFactory60;
            DelegateFactory delegateFactory61;
            QSLogger qSLogger22;
            DelegateFactory delegateFactory62;
            SwitchingProvider switchingProvider28;
            Provider provider133;
            Provider provider134;
            Provider provider135;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider29;
            Provider provider136;
            Provider provider137;
            DelegateFactory delegateFactory63;
            DelegateFactory delegateFactory64;
            QSLogger qSLogger23;
            Provider provider138;
            SwitchingProvider switchingProvider30;
            Provider provider139;
            DelegateFactory delegateFactory65;
            boolean z;
            boolean z2;
            Provider provider140;
            Provider provider141;
            Provider provider142;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider31;
            Provider provider143;
            Provider provider144;
            DelegateFactory delegateFactory66;
            DelegateFactory delegateFactory67;
            QSLogger qSLogger24;
            DelegateFactory delegateFactory68;
            Provider provider145;
            SwitchingProvider switchingProvider32;
            Provider provider146;
            Provider provider147;
            Provider provider148;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider33;
            Provider provider149;
            Provider provider150;
            DelegateFactory delegateFactory69;
            DelegateFactory delegateFactory70;
            QSLogger qSLogger25;
            Provider provider151;
            Provider provider152;
            Provider provider153;
            Provider provider154;
            Provider provider155;
            Provider provider156;
            Context context2;
            Provider provider157;
            Provider provider158;
            Provider provider159;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider34;
            Provider provider160;
            Provider provider161;
            DelegateFactory delegateFactory71;
            DelegateFactory delegateFactory72;
            QSLogger qSLogger26;
            Provider provider162;
            SwitchingProvider switchingProvider35;
            DelegateFactory delegateFactory73;
            Provider provider163;
            Provider provider164;
            Provider provider165;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider36;
            Provider provider166;
            Provider provider167;
            DelegateFactory delegateFactory74;
            DelegateFactory delegateFactory75;
            QSLogger qSLogger27;
            Provider provider168;
            Provider provider169;
            Provider provider170;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider37;
            Provider provider171;
            Provider provider172;
            DelegateFactory delegateFactory76;
            DelegateFactory delegateFactory77;
            QSLogger qSLogger28;
            Provider provider173;
            Provider provider174;
            Provider provider175;
            Provider provider176;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider38;
            Provider provider177;
            Provider provider178;
            DelegateFactory delegateFactory78;
            DelegateFactory delegateFactory79;
            QSLogger qSLogger29;
            Provider provider179;
            Provider provider180;
            SwitchingProvider switchingProvider39;
            Provider provider181;
            Provider provider182;
            Provider provider183;
            Provider provider184;
            Provider provider185;
            Provider provider186;
            Provider provider187;
            Provider provider188;
            Provider provider189;
            Provider provider190;
            Provider provider191;
            Provider provider192;
            Provider provider193;
            Provider provider194;
            Provider provider195;
            Provider provider196;
            Provider provider197;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider40;
            PaginatedGridLayout paginatedGridLayout;
            Provider provider198;
            Provider provider199;
            Provider provider200;
            Provider provider201;
            DelegateFactory delegateFactory80;
            Provider provider202;
            Provider provider203;
            Provider provider204;
            Provider provider205;
            Provider provider206;
            Provider provider207;
            Provider provider208;
            Provider provider209;
            Provider provider210;
            Provider provider211;
            Provider provider212;
            DelegateFactory delegateFactory81;
            AlternateBouncerViewModel alternateBouncerViewModel;
            Provider provider213;
            SwitchingProvider switchingProvider41;
            DelegateFactory delegateFactory82;
            Provider provider214;
            Context context3;
            Provider provider215;
            Context context4;
            Provider provider216;
            Provider provider217;
            Provider provider218;
            Provider provider219;
            Provider provider220;
            DelegateFactory delegateFactory83;
            DelegateFactory delegateFactory84;
            DelegateFactory delegateFactory85;
            Provider provider221;
            Provider provider222;
            DelegateFactory delegateFactory86;
            int displayId;
            DelegateFactory delegateFactory87;
            Provider provider223;
            Provider provider224;
            DelegateFactory delegateFactory88;
            DelegateFactory delegateFactory89;
            Provider provider225;
            DelegateFactory delegateFactory90;
            Provider provider226;
            DelegateFactory delegateFactory91;
            DelegateFactory delegateFactory92;
            DelegateFactory delegateFactory93;
            Provider provider227;
            Provider provider228;
            Provider provider229;
            Provider provider230;
            Provider provider231;
            DelegateFactory delegateFactory94;
            Provider provider232;
            Provider provider233;
            Provider provider234;
            Provider provider235;
            Provider provider236;
            int displayId2;
            Provider provider237;
            Provider provider238;
            Provider provider239;
            DelegateFactory delegateFactory95;
            Provider provider240;
            Provider provider241;
            Provider provider242;
            DelegateFactory delegateFactory96;
            DelegateFactory delegateFactory97;
            DelegateFactory delegateFactory98;
            DelegateFactory delegateFactory99;
            DelegateFactory delegateFactory100;
            Provider provider243;
            DelegateFactory delegateFactory101;
            DelegateFactory delegateFactory102;
            Provider provider244;
            DelegateFactory delegateFactory103;
            Provider provider245;
            DelegateFactory delegateFactory104;
            Provider provider246;
            DelegateFactory delegateFactory105;
            Provider provider247;
            DelegateFactory delegateFactory106;
            Provider provider248;
            Provider provider249;
            Provider provider250;
            Provider provider251;
            DelegateFactory delegateFactory107;
            DelegateFactory delegateFactory108;
            DelegateFactory delegateFactory109;
            DelegateFactory delegateFactory110;
            Provider provider252;
            Context context5;
            DelegateFactory delegateFactory111;
            DelegateFactory delegateFactory112;
            DelegateFactory delegateFactory113;
            Provider provider253;
            DelegateFactory delegateFactory114;
            Provider provider254;
            Provider provider255;
            Provider provider256;
            Provider provider257;
            Provider provider258;
            Context context6;
            Provider provider259;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider42;
            Provider provider260;
            Provider provider261;
            Context context7;
            DelegateFactory delegateFactory115;
            DelegateFactory delegateFactory116;
            Context context8;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider43;
            Provider provider262;
            Context context9;
            Provider provider263;
            DelegateFactory delegateFactory117;
            Provider provider264;
            DelegateFactory delegateFactory118;
            Provider provider265;
            Provider provider266;
            Provider provider267;
            Provider provider268;
            Provider provider269;
            Provider provider270;
            Provider provider271;
            Provider provider272;
            Provider provider273;
            Provider provider274;
            Provider provider275;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider44;
            SwitchingProvider switchingProvider45;
            Provider provider276;
            Provider provider277;
            Provider provider278;
            Provider provider279;
            Provider provider280;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1000:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceItemInteractorProvider;
                    DeviceItemInteractor deviceItemInteractor = (DeviceItemInteractor) provider.get();
                    BluetoothAdapter bluetoothAdapter = (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get();
                    BluetoothTileDialogLogger m1508$$Nest$mbluetoothTileDialogLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1508$$Nest$mbluetoothTileDialogLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor = (Executor) provider2.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new BluetoothDeviceMetadataInteractor(deviceItemInteractor, bluetoothAdapter, m1508$$Nest$mbluetoothTileDialogLogger, executor, (CoroutineDispatcher) provider3.get());
                case 1001:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$53(this);
                case 1002:
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost = (QSHost) provider4.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl = (QsEventLoggerImpl) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper = (Looper) provider6.get();
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider7.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider8.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory2.get();
                    qSLogger = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    CastControllerImpl castControllerImpl = (CastControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory3.get();
                    NetworkController networkController = (NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get();
                    HotspotController hotspotController = (HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider;
                    ConnectivityRepositoryImpl connectivityRepositoryImpl = (ConnectivityRepositoryImpl) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileJavaAdapterProvider;
                    TileJavaAdapter tileJavaAdapter = (TileJavaAdapter) provider11.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new CastTile(qSHost, qsEventLoggerImpl, looper, handler, falsingManager, metricsLogger, statusBarStateController, activityStarter, qSLogger, castControllerImpl, keyguardStateController, networkController, hotspotController, dialogTransitionAnimator, connectivityRepositoryImpl, tileJavaAdapter, (FeatureFlags) delegateFactory4.get());
                case 1003:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory5.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider2.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider3.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new HotspotControllerImpl(context, userTracker, handler2, handler3, (DumpManager) provider12.get());
                case 1004:
                    return new TileJavaAdapter();
                case 1005:
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost2 = (QSHost) provider13.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl2 = (QsEventLoggerImpl) provider14.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper2 = (Looper) provider15.get();
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler4 = (Handler) switchingProvider4.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager2 = (FalsingManager) provider16.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger2 = (MetricsLogger) provider17.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) delegateFactory6.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory7.get();
                    qSLogger2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new HotspotTile(qSHost2, qsEventLoggerImpl2, looper2, handler4, falsingManager2, metricsLogger2, statusBarStateController2, activityStarter2, qSLogger2, (HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get(), (DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get());
                case 1006:
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost3 = (QSHost) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl3 = (QsEventLoggerImpl) provider19.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper3 = (Looper) provider20.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler5 = (Handler) switchingProvider5.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager3 = (FalsingManager) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger3 = (MetricsLogger) provider22.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController3 = (StatusBarStateController) delegateFactory8.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory9.get();
                    qSLogger3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider23.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider;
                    Lazy lazy = DoubleCheck.lazy(provider24);
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new AirplaneModeTile(qSHost3, qsEventLoggerImpl3, looper3, handler5, falsingManager3, metricsLogger3, statusBarStateController3, activityStarter3, qSLogger3, broadcastDispatcher, lazy, globalSettingsImpl);
                case 1007:
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost4 = (QSHost) provider25.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl4 = (QsEventLoggerImpl) provider26.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper4 = (Looper) provider27.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler6 = (Handler) switchingProvider6.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager4 = (FalsingManager) provider28.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger4 = (MetricsLogger) provider29.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController4 = (StatusBarStateController) delegateFactory11.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter4 = (ActivityStarter) delegateFactory12.get();
                    qSLogger4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    DataSaverControllerImpl dataSaverControllerImpl = (DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator2 = (DialogTransitionAnimator) provider30.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    return new DataSaverTile(qSHost4, qsEventLoggerImpl4, looper4, handler6, falsingManager4, metricsLogger4, statusBarStateController4, activityStarter4, qSLogger4, dataSaverControllerImpl, dialogTransitionAnimator2, (SystemUIDialog.Factory) delegateFactory13.get());
                case 1008:
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost5 = (QSHost) provider31.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl5 = (QsEventLoggerImpl) provider32.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper5 = (Looper) provider33.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler7 = (Handler) switchingProvider7.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager5 = (FalsingManager) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger5 = (MetricsLogger) provider35.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController5 = (StatusBarStateController) delegateFactory14.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter5 = (ActivityStarter) delegateFactory15.get();
                    qSLogger5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new NfcTile(qSHost5, qsEventLoggerImpl5, looper5, handler7, falsingManager5, metricsLogger5, statusBarStateController5, activityStarter5, qSLogger5, (BroadcastDispatcher) provider36.get());
                case 1009:
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost6 = (QSHost) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl6 = (QsEventLoggerImpl) provider38.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper6 = (Looper) provider39.get();
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler8 = (Handler) switchingProvider8.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager6 = (FalsingManager) provider40.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger6 = (MetricsLogger) provider41.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController6 = (StatusBarStateController) delegateFactory16.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter6 = (ActivityStarter) delegateFactory17.get();
                    qSLogger6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new DeviceControlsTile(qSHost6, qsEventLoggerImpl6, looper6, handler8, falsingManager6, metricsLogger6, statusBarStateController6, activityStarter6, qSLogger6, (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get());
                case 1010:
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost7 = (QSHost) provider42.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl7 = (QsEventLoggerImpl) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper7 = (Looper) provider44.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler9 = (Handler) switchingProvider9.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager7 = (FalsingManager) provider45.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger7 = (MetricsLogger) provider46.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController7 = (StatusBarStateController) delegateFactory18.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter7 = (ActivityStarter) delegateFactory19.get();
                    qSLogger7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new WorkModeTile(qSHost7, qsEventLoggerImpl7, looper7, handler9, falsingManager7, metricsLogger7, statusBarStateController7, activityStarter7, qSLogger7, (ManagedProfileController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.managedProfileControllerImplProvider.get());
                case 1011:
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost8 = (QSHost) provider47.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl8 = (QsEventLoggerImpl) provider48.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper8 = (Looper) provider49.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler10 = (Handler) switchingProvider10.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager8 = (FalsingManager) provider50.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger8 = (MetricsLogger) provider51.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController8 = (StatusBarStateController) delegateFactory20.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter8 = (ActivityStarter) delegateFactory21.get();
                    qSLogger8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new FlashlightTile(qSHost8, qsEventLoggerImpl8, looper8, handler10, falsingManager8, metricsLogger8, statusBarStateController8, activityStarter8, qSLogger8, (FlashlightControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flashlightControllerImplProvider.get());
                case 1012:
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost9 = (QSHost) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl9 = (QsEventLoggerImpl) provider53.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper9 = (Looper) provider54.get();
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler11 = (Handler) switchingProvider11.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager9 = (FalsingManager) provider55.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger9 = (MetricsLogger) provider56.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController9 = (StatusBarStateController) delegateFactory22.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter9 = (ActivityStarter) delegateFactory23.get();
                    qSLogger9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    LocationController locationController = (LocationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationControllerImplProvider.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    return new LocationTile(qSHost9, qsEventLoggerImpl9, looper9, handler11, falsingManager9, metricsLogger9, statusBarStateController9, activityStarter9, qSLogger9, locationController, (KeyguardStateController) delegateFactory24.get(), (PanelInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelInteractorImplProvider.get());
                case 1013:
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost10 = (QSHost) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl10 = (QsEventLoggerImpl) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper10 = (Looper) provider59.get();
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler12 = (Handler) switchingProvider12.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger10 = (MetricsLogger) provider60.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager10 = (FalsingManager) provider61.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController10 = (StatusBarStateController) delegateFactory25.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter10 = (ActivityStarter) delegateFactory26.get();
                    qSLogger10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    IndividualSensorPrivacyController individualSensorPrivacyController = (IndividualSensorPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get();
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    return CameraToggleTile_Factory.newInstance(handler12, looper10, (SafetyCenterManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSafetyCenterManagerProvider.get(), metricsLogger10, activityStarter10, falsingManager10, statusBarStateController10, qSHost10, qsEventLoggerImpl10, qSLogger10, individualSensorPrivacyController, (KeyguardStateController) delegateFactory27.get());
                case 1014:
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost11 = (QSHost) provider62.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl11 = (QsEventLoggerImpl) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper11 = (Looper) provider64.get();
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler13 = (Handler) switchingProvider13.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger11 = (MetricsLogger) provider65.get();
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager11 = (FalsingManager) provider66.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController11 = (StatusBarStateController) delegateFactory28.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter11 = (ActivityStarter) delegateFactory29.get();
                    qSLogger11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    IndividualSensorPrivacyController individualSensorPrivacyController2 = (IndividualSensorPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    return MicrophoneToggleTile_Factory.newInstance(handler13, looper11, (SafetyCenterManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSafetyCenterManagerProvider.get(), metricsLogger11, activityStarter11, falsingManager11, statusBarStateController11, qSHost11, qsEventLoggerImpl11, qSLogger11, individualSensorPrivacyController2, (KeyguardStateController) delegateFactory30.get());
                case 1015:
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost12 = (QSHost) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl12 = (QsEventLoggerImpl) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper12 = (Looper) provider69.get();
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler14 = (Handler) switchingProvider14.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager12 = (FalsingManager) provider70.get();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger12 = (MetricsLogger) provider71.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController12 = (StatusBarStateController) delegateFactory31.get();
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter12 = (ActivityStarter) delegateFactory32.get();
                    qSLogger12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new AlarmTile(qSHost12, qsEventLoggerImpl12, looper12, handler14, falsingManager12, metricsLogger12, statusBarStateController12, activityStarter12, qSLogger12, (UserTracker) delegateFactory33.get(), (NextAlarmController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nextAlarmControllerImplProvider.get());
                case 1016:
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost13 = (QSHost) provider72.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl13 = (QsEventLoggerImpl) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper13 = (Looper) provider74.get();
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler15 = (Handler) switchingProvider15.get();
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager13 = (FalsingManager) provider75.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger13 = (MetricsLogger) provider76.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController13 = (StatusBarStateController) delegateFactory34.get();
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter13 = (ActivityStarter) delegateFactory35.get();
                    qSLogger13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider77.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    return new UiModeNightTile(qSHost13, qsEventLoggerImpl13, looper13, handler15, falsingManager13, metricsLogger13, statusBarStateController13, activityStarter13, qSLogger13, configurationController, (BatteryController) provider78.get(), (LocationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationControllerImplProvider.get());
                case 1017:
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost14 = (QSHost) provider79.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl14 = (QsEventLoggerImpl) provider80.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper14 = (Looper) provider81.get();
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler16 = (Handler) switchingProvider16.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager14 = (FalsingManager) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger14 = (MetricsLogger) provider83.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController14 = (StatusBarStateController) delegateFactory36.get();
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter14 = (ActivityStarter) delegateFactory37.get();
                    qSLogger14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new QRCodeScannerTile(qSHost14, qsEventLoggerImpl14, looper14, handler16, falsingManager14, metricsLogger14, statusBarStateController14, activityStarter14, qSLogger14, (QRCodeScannerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qRCodeScannerControllerProvider.get());
                case 1018:
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost15 = (QSHost) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl15 = (QsEventLoggerImpl) provider85.get();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper15 = (Looper) provider86.get();
                    switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler17 = (Handler) switchingProvider17.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager15 = (FalsingManager) provider87.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger15 = (MetricsLogger) provider88.get();
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController15 = (StatusBarStateController) delegateFactory38.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter15 = (ActivityStarter) delegateFactory39.get();
                    qSLogger15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    KeyguardDismissUtil keyguardDismissUtil = (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory40.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator3 = (DialogTransitionAnimator) provider89.get();
                    PanelInteractor panelInteractor = (PanelInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelInteractorImplProvider.get();
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserContextProvider userContextProvider = (UserContextProvider) delegateFactory41.get();
                    TraceurMessageSender traceurMessageSender = (TraceurMessageSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.traceurMessageSenderProvider.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor2 = (Executor) provider90.get();
                    IssueRecordingState issueRecordingState = (IssueRecordingState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.issueRecordingStateProvider.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider51;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$50 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$50 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$50) provider91.get();
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider;
                    return new RecordIssueTile(qSHost15, qsEventLoggerImpl15, looper15, handler17, falsingManager15, metricsLogger15, statusBarStateController15, activityStarter15, qSLogger15, keyguardDismissUtil, keyguardStateController2, dialogTransitionAnimator3, panelInteractor, userContextProvider, traceurMessageSender, executor2, issueRecordingState, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$50, (RecordingController) provider92.get());
                case 1019:
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost16 = (QSHost) provider93.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl16 = (QsEventLoggerImpl) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper16 = (Looper) provider95.get();
                    switchingProvider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler18 = (Handler) switchingProvider18.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager16 = (FalsingManager) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger16 = (MetricsLogger) provider97.get();
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory42.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController16 = (StatusBarStateController) delegateFactory43.get();
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter16 = (ActivityStarter) delegateFactory44.get();
                    qSLogger16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider;
                    RecordingController recordingController = (RecordingController) provider98.get();
                    KeyguardDismissUtil keyguardDismissUtil2 = (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory45.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator4 = (DialogTransitionAnimator) provider99.get();
                    PanelInteractor panelInteractor2 = (PanelInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelInteractorImplProvider.get();
                    MediaProjectionMetricsLogger mediaProjectionMetricsLogger = (MediaProjectionMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionMetricsLoggerProvider.get();
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ScreenRecordTile(qSHost16, qsEventLoggerImpl16, looper16, handler18, falsingManager16, metricsLogger16, featureFlags, statusBarStateController16, activityStarter16, qSLogger16, recordingController, keyguardDismissUtil2, keyguardStateController3, dialogTransitionAnimator4, panelInteractor2, mediaProjectionMetricsLogger, (UserContextProvider) delegateFactory46.get());
                case 1020:
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost17 = (QSHost) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl17 = (QsEventLoggerImpl) provider101.get();
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper17 = (Looper) provider102.get();
                    switchingProvider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler19 = (Handler) switchingProvider19.get();
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager17 = (FalsingManager) provider103.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger17 = (MetricsLogger) provider104.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController17 = (StatusBarStateController) delegateFactory47.get();
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter17 = (ActivityStarter) delegateFactory48.get();
                    qSLogger17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory49.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider105.get();
                    switchingProvider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new QuickAccessWalletTile(qSHost17, qsEventLoggerImpl17, looper17, handler19, falsingManager17, metricsLogger17, statusBarStateController17, activityStarter17, qSLogger17, keyguardStateController4, packageManager, (SecureSettings) switchingProvider20.get(), (QuickAccessWalletController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickAccessWalletControllerProvider.get());
                case 1021:
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost18 = (QSHost) provider106.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl18 = (QsEventLoggerImpl) provider107.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper18 = (Looper) provider108.get();
                    switchingProvider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler20 = (Handler) switchingProvider21.get();
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager18 = (FalsingManager) provider109.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger18 = (MetricsLogger) provider110.get();
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController18 = (StatusBarStateController) delegateFactory50.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter18 = (ActivityStarter) delegateFactory51.get();
                    qSLogger18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory52.get();
                    switchingProvider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new ColorInversionTile(qSHost18, qsEventLoggerImpl18, looper18, handler20, falsingManager18, metricsLogger18, statusBarStateController18, activityStarter18, qSLogger18, userTracker2, (SecureSettings) switchingProvider22.get());
                case 1022:
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost19 = (QSHost) provider111.get();
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl19 = (QsEventLoggerImpl) provider112.get();
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper19 = (Looper) provider113.get();
                    switchingProvider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler21 = (Handler) switchingProvider23.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager19 = (FalsingManager) provider114.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger19 = (MetricsLogger) provider115.get();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController19 = (StatusBarStateController) delegateFactory53.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter19 = (ActivityStarter) delegateFactory54.get();
                    qSLogger19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    LocationController locationController2 = (LocationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationControllerImplProvider.get();
                    ColorDisplayManager colorDisplayManager = (ColorDisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideColorDisplayManagerProvider.get();
                    nightDisplayListenerModuleBuilder = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nightDisplayListenerModuleBuilder();
                    return new NightDisplayTile(qSHost19, qsEventLoggerImpl19, looper19, handler21, falsingManager19, metricsLogger19, statusBarStateController19, activityStarter19, qSLogger19, locationController2, colorDisplayManager, nightDisplayListenerModuleBuilder);
                case 1023:
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isReduceBrightColorsAvailableProvider;
                    boolean booleanValue = ((Boolean) provider116.get()).booleanValue();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsControllerImplProvider;
                    ReduceBrightColorsController reduceBrightColorsController = (ReduceBrightColorsController) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost20 = (QSHost) provider118.get();
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl20 = (QsEventLoggerImpl) provider119.get();
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper20 = (Looper) provider120.get();
                    switchingProvider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler22 = (Handler) switchingProvider24.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager20 = (FalsingManager) provider121.get();
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger20 = (MetricsLogger) provider122.get();
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController20 = (StatusBarStateController) delegateFactory55.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter20 = (ActivityStarter) delegateFactory56.get();
                    qSLogger20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new ReduceBrightColorsTile(booleanValue, reduceBrightColorsController, qSHost20, qsEventLoggerImpl20, looper20, handler22, falsingManager20, metricsLogger20, statusBarStateController20, activityStarter20, qSLogger20, (ExtraDimDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extraDimDialogManagerProvider.get());
                case 1024:
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost21 = (QSHost) provider123.get();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl21 = (QsEventLoggerImpl) provider124.get();
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper21 = (Looper) provider125.get();
                    switchingProvider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler23 = (Handler) switchingProvider25.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager21 = (FalsingManager) provider126.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger21 = (MetricsLogger) provider127.get();
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController21 = (StatusBarStateController) delegateFactory57.get();
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter21 = (ActivityStarter) delegateFactory58.get();
                    qSLogger21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory59.get();
                    switchingProvider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new OneHandedModeTile(qSHost21, qsEventLoggerImpl21, looper21, handler23, falsingManager21, metricsLogger21, statusBarStateController21, activityStarter21, qSLogger21, userTracker3, (SecureSettings) switchingProvider26.get());
                case 1025:
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost22 = (QSHost) provider128.get();
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl22 = (QsEventLoggerImpl) provider129.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper22 = (Looper) provider130.get();
                    switchingProvider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler24 = (Handler) switchingProvider27.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager22 = (FalsingManager) provider131.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger22 = (MetricsLogger) provider132.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController22 = (StatusBarStateController) delegateFactory60.get();
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter22 = (ActivityStarter) delegateFactory61.get();
                    qSLogger22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory62.get();
                    switchingProvider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new ColorCorrectionTile(qSHost22, qsEventLoggerImpl22, looper22, handler24, falsingManager22, metricsLogger22, statusBarStateController22, activityStarter22, qSLogger22, userTracker4, (SecureSettings) switchingProvider28.get());
                case 1026:
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost23 = (QSHost) provider133.get();
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl23 = (QsEventLoggerImpl) provider134.get();
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper23 = (Looper) provider135.get();
                    switchingProvider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler25 = (Handler) switchingProvider29.get();
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager23 = (FalsingManager) provider136.get();
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger23 = (MetricsLogger) provider137.get();
                    delegateFactory63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController23 = (StatusBarStateController) delegateFactory63.get();
                    delegateFactory64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter23 = (ActivityStarter) delegateFactory64.get();
                    qSLogger23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider;
                    IDreamManager iDreamManager = (IDreamManager) provider138.get();
                    switchingProvider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider30.get();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider139.get();
                    delegateFactory65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker5 = (UserTracker) delegateFactory65.get();
                    z = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getBoolean(android.R.bool.config_duplicate_port_omadm_wappush);
                    z2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getBoolean(android.R.bool.config_dreamsSupported);
                    return new DreamTile(qSHost23, qsEventLoggerImpl23, looper23, handler25, falsingManager23, metricsLogger23, statusBarStateController23, activityStarter23, qSLogger23, iDreamManager, secureSettings, broadcastDispatcher2, userTracker5, z, z2);
                case 1027:
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost24 = (QSHost) provider140.get();
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl24 = (QsEventLoggerImpl) provider141.get();
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper24 = (Looper) provider142.get();
                    switchingProvider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler26 = (Handler) switchingProvider31.get();
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager24 = (FalsingManager) provider143.get();
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger24 = (MetricsLogger) provider144.get();
                    delegateFactory66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController24 = (StatusBarStateController) delegateFactory66.get();
                    delegateFactory67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter24 = (ActivityStarter) delegateFactory67.get();
                    qSLogger24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    delegateFactory68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController5 = (KeyguardStateController) delegateFactory68.get();
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator5 = (DialogTransitionAnimator) provider145.get();
                    switchingProvider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fontScalingDialogDelegateProvider;
                    return new FontScalingTile(qSHost24, qsEventLoggerImpl24, looper24, handler26, falsingManager24, metricsLogger24, statusBarStateController24, activityStarter24, qSLogger24, keyguardStateController5, dialogTransitionAnimator5, switchingProvider32);
                case 1028:
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost25 = (QSHost) provider146.get();
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl25 = (QsEventLoggerImpl) provider147.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper25 = (Looper) provider148.get();
                    switchingProvider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler27 = (Handler) switchingProvider33.get();
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager25 = (FalsingManager) provider149.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger25 = (MetricsLogger) provider150.get();
                    delegateFactory69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController25 = (StatusBarStateController) delegateFactory69.get();
                    delegateFactory70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter25 = (ActivityStarter) delegateFactory70.get();
                    qSLogger25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    HearingDevicesDialogManager hearingDevicesDialogManager = (HearingDevicesDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hearingDevicesDialogManagerProvider.get();
                    HearingDevicesChecker hearingDevicesChecker = (HearingDevicesChecker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hearingDevicesCheckerProvider.get();
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothControllerImplProvider;
                    return new HearingDevicesTile(qSHost25, qsEventLoggerImpl25, looper25, handler27, falsingManager25, metricsLogger25, statusBarStateController25, activityStarter25, qSLogger25, hearingDevicesDialogManager, hearingDevicesChecker, (BluetoothControllerImpl) provider151.get());
                case 1029:
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator6 = (DialogTransitionAnimator) provider152.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider55;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$54 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$54 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$54) provider153.get();
                    HearingDevicesChecker hearingDevicesChecker2 = (HearingDevicesChecker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hearingDevicesCheckerProvider.get();
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor3 = (Executor) provider154.get();
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new HearingDevicesDialogManager(dialogTransitionAnimator6, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$54, hearingDevicesChecker2, executor3, (Executor) provider155.get());
                case 1030:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$54(this);
                case 1031:
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new HearingDevicesUiEventLogger((UiEventLogger) provider156.get());
                case 1032:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new HearingDevicesChecker(context2, (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get());
                case 1033:
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost26 = (QSHost) provider157.get();
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl26 = (QsEventLoggerImpl) provider158.get();
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper26 = (Looper) provider159.get();
                    switchingProvider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler28 = (Handler) switchingProvider34.get();
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager26 = (FalsingManager) provider160.get();
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger26 = (MetricsLogger) provider161.get();
                    delegateFactory71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController26 = (StatusBarStateController) delegateFactory71.get();
                    delegateFactory72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter26 = (ActivityStarter) delegateFactory72.get();
                    qSLogger26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController = (BatteryController) provider162.get();
                    switchingProvider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider35.get();
                    delegateFactory73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new BatterySaverTileGoogle(qSHost26, qsEventLoggerImpl26, looper26, handler28, falsingManager26, metricsLogger26, statusBarStateController26, activityStarter26, qSLogger26, batteryController, secureSettings2, (UserTracker) delegateFactory73.get());
                case 1034:
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost27 = (QSHost) provider163.get();
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl27 = (QsEventLoggerImpl) provider164.get();
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper27 = (Looper) provider165.get();
                    switchingProvider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler29 = (Handler) switchingProvider36.get();
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager27 = (FalsingManager) provider166.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger27 = (MetricsLogger) provider167.get();
                    delegateFactory74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController27 = (StatusBarStateController) delegateFactory74.get();
                    delegateFactory75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter27 = (ActivityStarter) delegateFactory75.get();
                    qSLogger27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    return new OverlayToggleTile(qSHost27, qsEventLoggerImpl27, looper27, handler29, falsingManager27, metricsLogger27, statusBarStateController27, activityStarter27, qSLogger27, (OverlayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideOverlayManagerProvider.get());
                case 1035:
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost28 = (QSHost) provider168.get();
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl28 = (QsEventLoggerImpl) provider169.get();
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper28 = (Looper) provider170.get();
                    switchingProvider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler30 = (Handler) switchingProvider37.get();
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager28 = (FalsingManager) provider171.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger28 = (MetricsLogger) provider172.get();
                    delegateFactory76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController28 = (StatusBarStateController) delegateFactory76.get();
                    delegateFactory77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter28 = (ActivityStarter) delegateFactory77.get();
                    qSLogger28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    return new ReverseChargingTile(qSHost28, qsEventLoggerImpl28, looper28, handler30, falsingManager28, metricsLogger28, statusBarStateController28, activityStarter28, qSLogger28, (BatteryController) provider173.get(), (IThermalService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIThermalServiceProvider.get());
                case 1036:
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost29 = (QSHost) provider174.get();
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    QsEventLoggerImpl qsEventLoggerImpl29 = (QsEventLoggerImpl) provider175.get();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper29 = (Looper) provider176.get();
                    switchingProvider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler31 = (Handler) switchingProvider38.get();
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager29 = (FalsingManager) provider177.get();
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger29 = (MetricsLogger) provider178.get();
                    delegateFactory78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController29 = (StatusBarStateController) delegateFactory78.get();
                    delegateFactory79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter29 = (ActivityStarter) delegateFactory79.get();
                    qSLogger29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rotationLockControllerImplProvider;
                    RotationLockController rotationLockController = (RotationLockController) provider179.get();
                    SensorPrivacyManager sensorPrivacyManager = (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get();
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController2 = (BatteryController) provider180.get();
                    switchingProvider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings3 = (SecureSettings) switchingProvider39.get();
                    String[] stringArray = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getStringArray(android.R.array.config_primaryCredentialProviderService);
                    Preconditions.checkNotNullFromProvides(stringArray);
                    return new RotationLockTileGoogle(qSHost29, qsEventLoggerImpl29, looper29, handler31, falsingManager29, metricsLogger29, statusBarStateController29, activityStarter29, qSLogger29, rotationLockController, sensorPrivacyManager, batteryController2, secureSettings3, stringArray, (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get());
                case 1037:
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPreferencesRepositoryProvider;
                    return new QSPreferencesInteractor((QSPreferencesRepository) provider181.get());
                case 1038:
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager = (UserFileManager) provider182.get();
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider183.get();
                    DefaultLargeTilesRepositoryImpl defaultLargeTilesRepositoryImpl = (DefaultLargeTilesRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultLargeTilesRepositoryImplProvider.get();
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new QSPreferencesRepository(userFileManager, userRepositoryImpl, defaultLargeTilesRepositoryImpl, (CoroutineDispatcher) provider184.get());
                case 1039:
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return PanelsModule_Companion_ProvidesPanelsLogFactory.providesPanelsLog((LogBufferFactory) provider185.get());
                case 1040:
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fixedColumnsSizeInteractorProvider;
                    return new FixedColumnsSizeViewModelImpl((FixedColumnsSizeInteractor) provider186.get());
                case 1041:
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fixedColumnsRepositoryProvider;
                    return new FixedColumnsSizeInteractor((FixedColumnsRepository) provider187.get());
                case 1042:
                    return new FixedColumnsRepository();
                case 1043:
                    IconTilesViewModel iconTilesViewModel = (IconTilesViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconTilesViewModelImplProvider.get();
                    FixedColumnsSizeViewModel fixedColumnsSizeViewModel = (FixedColumnsSizeViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fixedColumnsSizeViewModelImplProvider.get();
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconLabelVisibilityViewModelImplProvider;
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.paginatedGridInteractorProvider;
                    PaginatedGridInteractor paginatedGridInteractor = (PaginatedGridInteractor) provider189.get();
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new PaginatedGridViewModel(iconTilesViewModel, fixedColumnsSizeViewModel, paginatedGridInteractor, (CoroutineScope) provider190.get());
                case 1044:
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconLabelVisibilityInteractorProvider;
                    return new IconLabelVisibilityViewModelImpl((IconLabelVisibilityInteractor) provider191.get());
                case 1045:
                    QSPreferencesInteractor qSPreferencesInteractor = (QSPreferencesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPreferencesInteractorProvider.get();
                    LogBuffer logBuffer = (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesPanelsLogProvider.get();
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new IconLabelVisibilityInteractor(qSPreferencesInteractor, logBuffer, (CoroutineScope) provider192.get());
                case 1046:
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.paginatedGridRepositoryProvider;
                    return new PaginatedGridInteractor((PaginatedGridRepository) provider193.get());
                case 1047:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider;
                    return new PaginatedGridRepository(m977$$Nest$mmainResources, (ConfigurationRepository) provider194.get());
                case 1048:
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.editTilesListInteractorProvider;
                    EditTilesListInteractor editTilesListInteractor = (EditTilesListInteractor) provider195.get();
                    CurrentTilesInteractor currentTilesInteractor = (CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tilesAvailabilityInteractorProvider;
                    TilesAvailabilityInteractor tilesAvailabilityInteractor = (TilesAvailabilityInteractor) provider196.get();
                    MinimumTilesInteractor m1605$$Nest$mminimumTilesInteractor = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1605$$Nest$mminimumTilesInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider197.get();
                    switchingProvider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context10 = (Context) switchingProvider40.get();
                    paginatedGridLayout = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.paginatedGridLayout();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider198.get();
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gridLayoutTypeInteractorProvider;
                    return new EditModeViewModel(editTilesListInteractor, currentTilesInteractor, tilesAvailabilityInteractor, m1605$$Nest$mminimumTilesInteractor, configurationInteractor, context10, paginatedGridLayout, coroutineScope, (GridLayoutTypeInteractor) provider199.get(), MapsKt.toMap(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOfPairOfGridLayoutTypeAndGridLayout()));
                case 1049:
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stockTilesRepositoryProvider;
                    StockTilesRepository stockTilesRepository = (StockTilesRepository) provider200.get();
                    QSTileConfigProviderImpl qSTileConfigProviderImpl = (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get();
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconAndNameCustomRepositoryProvider;
                    return new EditTilesListInteractor(stockTilesRepository, qSTileConfigProviderImpl, (IconAndNameCustomRepository) provider201.get());
                case 1050:
                    return new StockTilesRepository(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 1051:
                    InstalledTilesComponentRepository installedTilesComponentRepository = (InstalledTilesComponentRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.installedTilesComponentRepositoryImplProvider.get();
                    delegateFactory80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker6 = (UserTracker) delegateFactory80.get();
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    return new IconAndNameCustomRepository(installedTilesComponentRepository, userTracker6, (CoroutineContext) provider202.get());
                case 1052:
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newTilesAvailabilityInteractorProvider;
                    return new TilesAvailabilityInteractor((NewTilesAvailabilityInteractor) provider203.get(), (QSFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFactoryImplProvider.get(), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get());
                case 1053:
                    Map m1601$$Nest$mmapOfStringAndQSTileAvailabilityInteractor = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1601$$Nest$mmapOfStringAndQSTileAvailabilityInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    return new NewTilesAvailabilityInteractor(m1601$$Nest$mmapOfStringAndQSTileAvailabilityInteractor, (UserRepositoryImpl) provider204.get());
                case 1054:
                    CurrentTilesInteractor currentTilesInteractor2 = (CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get();
                    FixedColumnsSizeViewModel fixedColumnsSizeViewModel2 = (FixedColumnsSizeViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fixedColumnsSizeViewModelImplProvider.get();
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickQuickSettingsRowInteractorProvider;
                    QuickQuickSettingsRowInteractor quickQuickSettingsRowInteractor = (QuickQuickSettingsRowInteractor) provider205.get();
                    IconTilesViewModel iconTilesViewModel2 = (IconTilesViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconTilesViewModelImplProvider.get();
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new QuickQuickSettingsViewModel(currentTilesInteractor2, fixedColumnsSizeViewModel2, quickQuickSettingsRowInteractor, iconTilesViewModel2, (CoroutineScope) provider206.get());
                case 1055:
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickQuickSettingsRowRepositoryProvider;
                    return new QuickQuickSettingsRowInteractor((QuickQuickSettingsRowRepository) provider207.get());
                case 1056:
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider;
                    return new QuickQuickSettingsRowRepository(m977$$Nest$mmainResources2, (ConfigurationRepository) provider208.get());
                case 1057:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$55
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 1058:
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider58;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$56 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$56 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$56) provider209.get();
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider59;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$57 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$57 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$57) provider210.get();
                    TintedIconManager.Factory factory = (TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider27.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider43;
                    BatteryMeterViewController.Factory factory2 = (BatteryMeterViewController.Factory) provider211.get();
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController = (StatusBarIconController) provider212.get();
                    NotificationsShadeSessionModule$provideShadeSession$1 notificationsShadeSessionModule$provideShadeSession$1 = new NotificationsShadeSessionModule$provideShadeSession$1((SessionStorage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSessionStorageProvider.get());
                    delegateFactory81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider;
                    return new NotificationsShadeOverlay(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$56, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$57, factory, factory2, statusBarIconController, notificationsShadeSessionModule$provideShadeSession$1, DoubleCheck.lazy(delegateFactory81));
                case 1059:
                    return new Object() { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$56
                    };
                case 1060:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$57
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 1061:
                    return new NotificationInsetsImpl();
                case 1062:
                    alternateBouncerViewModel = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerViewModel();
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpAnywhereGestureHandlerProvider;
                    SwipeUpAnywhereGestureHandler swipeUpAnywhereGestureHandler = (SwipeUpAnywhereGestureHandler) provider213.get();
                    TapGestureDetector tapGestureDetector = (TapGestureDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tapGestureDetectorProvider.get();
                    AlternateBouncerUdfpsIconViewModel m1499$$Nest$malternateBouncerUdfpsIconViewModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1499$$Nest$malternateBouncerUdfpsIconViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerUdfpsAccessibilityOverlayViewModelProvider;
                    Lazy lazy2 = DoubleCheck.lazy(switchingProvider41);
                    AlternateBouncerMessageAreaViewModel m1498$$Nest$malternateBouncerMessageAreaViewModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1498$$Nest$malternateBouncerMessageAreaViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory82.get();
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLongPressTouchLogProvider;
                    return new AlternateBouncerDependencies(alternateBouncerViewModel, swipeUpAnywhereGestureHandler, tapGestureDetector, m1499$$Nest$malternateBouncerUdfpsIconViewModel, lazy2, m1498$$Nest$malternateBouncerMessageAreaViewModel, powerInteractor, (LogBuffer) provider214.get());
                case 1063:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new SwipeUpAnywhereGestureHandler(context3, (DisplayTracker) provider215.get(), (SwipeUpGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpGestureLoggerProvider.get());
                case 1064:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new TapGestureDetector(context4);
                case 1065:
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    return new AlternateBouncerUdfpsAccessibilityOverlayViewModel((UdfpsOverlayInteractor) provider217.get(), (AccessibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityInteractorProvider.get());
                case 1066:
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider218.get();
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor4 = (Executor) provider219.get();
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider;
                    WindowRootViewVisibilityInteractor windowRootViewVisibilityInteractor = (WindowRootViewVisibilityInteractor) provider220.get();
                    delegateFactory83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController6 = (KeyguardStateController) delegateFactory83.get();
                    delegateFactory84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController30 = (StatusBarStateController) delegateFactory84.get();
                    delegateFactory85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory85.get();
                    provider221 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl = (StatusBarWindowControllerImpl) provider221.get();
                    provider222 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider222.get();
                    delegateFactory86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory86.get();
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowViewControllerProvider);
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider);
                    delegateFactory87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    return new ShadeControllerImpl(commandQueue, executor4, windowRootViewVisibilityInteractor, keyguardStateController6, statusBarStateController30, statusBarKeyguardViewManager, statusBarWindowControllerImpl, deviceProvisionedController, notificationShadeWindowController, displayId, lazy3, lazy4, DoubleCheck.lazy(delegateFactory87), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider));
                case 1067:
                    provider223 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController = (LockscreenShadeTransitionController) provider223.get();
                    provider224 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector = (FalsingCollector) provider224.get();
                    delegateFactory88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory88.get();
                    delegateFactory89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockManager dockManager = (DockManager) delegateFactory89.get();
                    provider225 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider;
                    NotificationShadeDepthController notificationShadeDepthController = (NotificationShadeDepthController) provider225.get();
                    delegateFactory90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    NotificationShadeWindowView notificationShadeWindowView = (NotificationShadeWindowView) delegateFactory90.get();
                    ShadeViewController shadeViewController = (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSurfaceProvider.get();
                    provider226 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    PanelExpansionInteractor panelExpansionInteractor = (PanelExpansionInteractor) provider226.get();
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    delegateFactory91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory91.get();
                    delegateFactory92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager2 = (StatusBarKeyguardViewManager) delegateFactory92.get();
                    StatusBarWindowStateController statusBarWindowStateController = (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get();
                    LockIconViewController lockIconViewController = (LockIconViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLockIconViewControllerProvider.get();
                    CentralSurfaces centralSurfaces = (CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get();
                    DozeServiceHost dozeServiceHost = (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get();
                    DozeScrimController dozeScrimController = (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get();
                    delegateFactory93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController2 = (NotificationShadeWindowController) delegateFactory93.get();
                    provider227 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider;
                    Optional optional = (Optional) provider227.get();
                    provider228 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    KeyguardUnlockAnimationController keyguardUnlockAnimationController = (KeyguardUnlockAnimationController) provider228.get();
                    NotificationInsetsImpl notificationInsetsImpl = (NotificationInsetsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInsetsImplProvider.get();
                    AmbientState ambientState = (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get();
                    ShadeLogger m1673$$Nest$mshadeLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider229 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider229.get();
                    PulsingGestureListener pulsingGestureListener = (PulsingGestureListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulsingGestureListenerProvider.get();
                    provider230 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenHostedDreamGestureListenerProvider;
                    LockscreenHostedDreamGestureListener lockscreenHostedDreamGestureListener = (LockscreenHostedDreamGestureListener) provider230.get();
                    provider231 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider231.get();
                    GlanceableHubContainerController glanceableHubContainerController = (GlanceableHubContainerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubContainerControllerProvider.get();
                    NotificationLaunchAnimationInteractor notificationLaunchAnimationInteractor = (NotificationLaunchAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationInteractorProvider.get();
                    delegateFactory94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) delegateFactory94.get();
                    provider232 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider232.get();
                    provider233 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIKeyEventHandlerProvider;
                    SysUIKeyEventHandler sysUIKeyEventHandler = (SysUIKeyEventHandler) provider233.get();
                    QuickSettingsController quickSettingsController = (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickSettingsControllerProvider.get();
                    provider234 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider234.get();
                    provider235 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider235.get();
                    provider236 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerViewBinderProvider;
                    return new NotificationShadeWindowViewController(lockscreenShadeTransitionController, falsingCollector, sysuiStatusBarStateController, dockManager, notificationShadeDepthController, notificationShadeWindowView, shadeViewController, panelExpansionInteractor, shadeExpansionStateManager, notificationStackScrollLayoutController, statusBarKeyguardViewManager2, statusBarWindowStateController, lockIconViewController, centralSurfaces, dozeServiceHost, dozeScrimController, notificationShadeWindowController2, optional, keyguardUnlockAnimationController, notificationInsetsImpl, ambientState, m1673$$Nest$mshadeLogger, dumpManager, pulsingGestureListener, lockscreenHostedDreamGestureListener, keyguardTransitionInteractor, glanceableHubContainerController, notificationLaunchAnimationInteractor, featureFlagsClassic, systemClock, sysUIKeyEventHandler, quickSettingsController, primaryBouncerInteractor, alternateBouncerInteractor, (BouncerViewBinder) provider236.get());
                case 1068:
                    displayId2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    provider237 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    return new StatusBarWindowStateController(displayId2, (CommandQueue) provider237.get());
                case 1069:
                    DozeLog dozeLog = (DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get();
                    provider238 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider238.get();
                    provider239 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider239.get();
                    delegateFactory95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController2 = (SysuiStatusBarStateController) delegateFactory95.get();
                    provider240 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController2 = (DeviceProvisionedController) provider240.get();
                    provider241 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider241.get();
                    provider242 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController3 = (BatteryController) provider242.get();
                    ScrimController scrimController = (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get();
                    delegateFactory96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider;
                    Lazy lazy5 = DoubleCheck.lazy(delegateFactory96);
                    delegateFactory97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy6 = DoubleCheck.lazy(delegateFactory97);
                    DozeScrimController dozeScrimController2 = (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get();
                    delegateFactory98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory98.get();
                    PulseExpansionHandler pulseExpansionHandler = (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get();
                    delegateFactory99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController3 = (NotificationShadeWindowController) delegateFactory99.get();
                    NotificationWakeUpCoordinator notificationWakeUpCoordinator = (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get();
                    delegateFactory100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    return new DozeServiceHost(dozeLog, powerManager, wakefulnessLifecycle, sysuiStatusBarStateController2, deviceProvisionedController2, headsUpManager, batteryController3, scrimController, lazy5, lazy6, dozeScrimController2, keyguardUpdateMonitor, pulseExpansionHandler, notificationShadeWindowController3, notificationWakeUpCoordinator, (AuthController) delegateFactory100.get(), (ShadeLockscreenInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeLockscreenInteractorProvider.get(), (DozeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeInteractorProvider.get());
                case 1070:
                    provider243 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager30 = (FalsingManager) provider243.get();
                    delegateFactory101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory101.get();
                    delegateFactory102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController31 = (StatusBarStateController) delegateFactory102.get();
                    provider244 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor2 = (PrimaryBouncerInteractor) provider244.get();
                    delegateFactory103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    return new LockscreenHostedDreamGestureListener(falsingManager30, powerInteractor2, statusBarStateController31, primaryBouncerInteractor2, (KeyguardRepositoryImpl) delegateFactory103.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1071:
                    provider245 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider245.get();
                    CommunalViewModel communalViewModel = (CommunalViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalViewModelProvider.get();
                    delegateFactory104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory104.get();
                    provider246 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider246.get();
                    delegateFactory105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory105.get();
                    provider247 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager2 = (PowerManager) provider247.get();
                    CommunalColors communalColors = (CommunalColors) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalColorsImplProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    CommunalContent m1527$$Nest$mcommunalContent = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1527$$Nest$mcommunalContent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SceneDataSourceDelegator sceneDataSourceDelegator = (SceneDataSourceDelegator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalSceneDataSourceDelegatorProvider.get();
                    delegateFactory106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController2 = (NotificationStackScrollLayoutController) delegateFactory106.get();
                    KeyguardMediaController keyguardMediaController = (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get();
                    LockscreenSmartspaceController lockscreenSmartspaceController = (LockscreenSmartspaceController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSmartspaceControllerProvider.get();
                    provider248 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTouchLogBufferProvider;
                    return new GlanceableHubContainerController(communalInteractor, communalViewModel, keyguardInteractor, keyguardTransitionInteractor2, shadeInteractor, powerManager2, communalColors, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, m1527$$Nest$mcommunalContent, sceneDataSourceDelegator, notificationStackScrollLayoutController2, keyguardMediaController, lockscreenSmartspaceController, (LogBuffer) provider248.get());
                case 1072:
                    provider249 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideCommunalTouchLogBufferFactory.provideCommunalTouchLogBuffer((LogBufferFactory) provider249.get());
                case 1073:
                    BackActionInteractor backActionInteractor = (BackActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backActionInteractorProvider.get();
                    provider250 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardKeyEventInteractorProvider;
                    return new SysUIKeyEventHandler(backActionInteractor, (KeyguardKeyEventInteractor) provider250.get());
                case 1074:
                    provider251 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider251.get();
                    delegateFactory107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController32 = (StatusBarStateController) delegateFactory107.get();
                    delegateFactory108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager3 = (StatusBarKeyguardViewManager) delegateFactory108.get();
                    delegateFactory109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory109.get();
                    delegateFactory110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController4 = (NotificationShadeWindowController) delegateFactory110.get();
                    provider252 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider;
                    return new BackActionInteractor(coroutineScope2, statusBarStateController32, statusBarKeyguardViewManager3, shadeController, notificationShadeWindowController4, (WindowRootViewVisibilityInteractor) provider252.get());
                case 1075:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController33 = (StatusBarStateController) delegateFactory111.get();
                    delegateFactory112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager4 = (StatusBarKeyguardViewManager) delegateFactory112.get();
                    delegateFactory113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController2 = (ShadeController) delegateFactory113.get();
                    provider253 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaSessionLegacyHelperWrapperProvider;
                    MediaSessionLegacyHelperWrapper mediaSessionLegacyHelperWrapper = (MediaSessionLegacyHelperWrapper) provider253.get();
                    BackActionInteractor backActionInteractor2 = (BackActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backActionInteractorProvider.get();
                    delegateFactory114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new KeyguardKeyEventInteractor(context5, statusBarStateController33, statusBarKeyguardViewManager4, shadeController2, mediaSessionLegacyHelperWrapper, backActionInteractor2, (PowerInteractor) delegateFactory114.get());
                case 1076:
                    return new MediaSessionLegacyHelperWrapper();
                case 1077:
                    provider254 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.legacyBouncerDependenciesProvider;
                    Lazy lazy7 = DoubleCheck.lazy(provider254);
                    provider255 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.composeBouncerDependenciesProvider;
                    return new BouncerViewBinder(lazy7, DoubleCheck.lazy(provider255));
                case 1078:
                    KeyguardBouncerViewModel m1578$$Nest$mkeyguardBouncerViewModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1578$$Nest$mkeyguardBouncerViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    PrimaryBouncerToGoneTransitionViewModel primaryBouncerToGoneTransitionViewModel = (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    KeyguardMessageAreaController.Factory m1583$$Nest$mkeyguardMessageAreaControllerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1583$$Nest$mkeyguardMessageAreaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    BouncerMessageInteractor bouncerMessageInteractor = (BouncerMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageInteractorProvider.get();
                    BouncerLogger bouncerLogger = (BouncerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerLoggerProvider.get();
                    provider256 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new LegacyBouncerDependencies(m1578$$Nest$mkeyguardBouncerViewModel, primaryBouncerToGoneTransitionViewModel, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2, m1583$$Nest$mkeyguardMessageAreaControllerFactory, bouncerMessageInteractor, bouncerLogger, (SelectedUserInteractor) provider256.get());
                case 1079:
                    return new BouncerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBouncerLogProvider.get());
                case 1080:
                    provider257 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideBouncerLogFactory.provideBouncerLog((LogBufferFactory) provider257.get());
                case 1081:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider13.get();
                    BouncerViewModule$Companion$bouncerDialogFactory$1 bouncerViewModule$Companion$bouncerDialogFactory$1 = (BouncerViewModule$Companion$bouncerDialogFactory$1) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerDialogFactoryProvider.get();
                    provider258 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider60;
                    return new ComposeBouncerDependencies(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4, bouncerViewModule$Companion$bouncerDialogFactory$1, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$58) provider258.get());
                case 1082:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$58
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 1083:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    OverviewProxyRecentsImpl m1652$$Nest$mrecentsImplementation = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1652$$Nest$mrecentsImplementation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider259 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    return SystemUIGoogleModule_ProvideRecentsFactory.provideRecents(context6, m1652$$Nest$mrecentsImplementation, (CommandQueue) provider259.get());
                case 1084:
                    Looper provideMainLooper = GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper();
                    switchingProvider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler32 = (Handler) switchingProvider42.get();
                    provider260 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return SysUIConcurrencyModule_ProvideBackPanelUiThreadContextFactory.provideBackPanelUiThreadContext(provideMainLooper, handler32, (Executor) provider260.get());
                case 1085:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mapplicationAssetManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    return GestureModule_ProvidsBackGestureTfClassifierProviderFactory.providsBackGestureTfClassifierProvider(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1617$$Nest$mnamedString(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1086:
                    provider261 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new GestureRepositoryImpl((CoroutineDispatcher) provider261.get());
                case 1087:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider17.get();
                    delegateFactory115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager5 = (StatusBarKeyguardViewManager) delegateFactory115.get();
                    delegateFactory116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new TaskbarDelegate(context7, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15, statusBarKeyguardViewManager5, (StatusBarStateController) delegateFactory116.get());
                case 1088:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler33 = (Handler) switchingProvider43.get();
                    provider262 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    return new AutoHideController(context8, handler33, (IWindowManager) provider262.get());
                case 1089:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider263 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController = (NavigationModeController) provider263.get();
                    delegateFactory117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    Lazy lazy8 = DoubleCheck.lazy(delegateFactory117);
                    provider264 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider264.get();
                    delegateFactory118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ScreenPinningRequest(context9, navigationModeController, lazy8, broadcastDispatcher3, (UserTracker) delegateFactory118.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureProvider));
                case 1090:
                    InWindowLauncherUnlockAnimationInteractor inWindowLauncherUnlockAnimationInteractor = (InWindowLauncherUnlockAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inWindowLauncherUnlockAnimationInteractorProvider.get();
                    provider265 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inWindowLauncherAnimationViewModelProvider;
                    InWindowLauncherAnimationViewModel inWindowLauncherAnimationViewModel = (InWindowLauncherAnimationViewModel) provider265.get();
                    provider266 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new InWindowLauncherUnlockAnimationManager(inWindowLauncherUnlockAnimationInteractor, inWindowLauncherAnimationViewModel, (CoroutineScope) provider266.get());
                case 1091:
                    provider267 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inWindowLauncherUnlockAnimationRepositoryProvider;
                    InWindowLauncherUnlockAnimationRepository inWindowLauncherUnlockAnimationRepository = (InWindowLauncherUnlockAnimationRepository) provider267.get();
                    provider268 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider268.get();
                    provider269 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) provider269.get();
                    Lazy lazy9 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindRepositoryImplProvider);
                    provider270 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityManagerWrapperProvider;
                    return new InWindowLauncherUnlockAnimationInteractor(inWindowLauncherUnlockAnimationRepository, coroutineScope3, keyguardTransitionInteractor3, lazy9, (ActivityManagerWrapper) provider270.get());
                case 1092:
                    return new InWindowLauncherUnlockAnimationRepository();
                case 1093:
                    return new KeyguardSurfaceBehindRepositoryImpl();
                case 1094:
                    return new InWindowLauncherAnimationViewModel((InWindowLauncherUnlockAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inWindowLauncherUnlockAnimationInteractorProvider.get());
                case 1095:
                    provider271 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new KeyboardTouchpadEduStatsInteractorImpl((CoroutineScope) provider271.get(), (ContextualEducationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contextualEducationInteractorProvider.get(), (UserInputDeviceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userInputDeviceRepositoryProvider.get(), (TutorialSchedulerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tutorialSchedulerRepositoryProvider.get(), Clock.systemUTC());
                case 1096:
                    provider272 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider272.get();
                    provider273 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider273.get();
                    Clock systemUTC = Clock.systemUTC();
                    provider274 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider274.get();
                    provider275 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userContextualEducationRepositoryProvider;
                    return new ContextualEducationInteractor(coroutineScope4, coroutineDispatcher, systemUTC, selectedUserInteractor, (ContextualEducationRepository) provider275.get());
                case 1097:
                    switchingProvider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context11 = (Context) switchingProvider44.get();
                    switchingProvider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideEduDataStoreScopeProvider;
                    provider276 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    InputManager inputManager = (InputManager) provider276.get();
                    provider277 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new UserContextualEducationRepository(context11, switchingProvider45, inputManager, (CoroutineDispatcher) provider277.get());
                case 1098:
                    provider278 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return ContextualEducationModule_Companion_ProvideEduDataStoreScopeFactory.provideEduDataStoreScope((CoroutineDispatcher) provider278.get());
                case 1099:
                    provider279 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider279.get();
                    KeyboardRepositoryImpl keyboardRepositoryImpl = (KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get();
                    TouchpadRepositoryImpl touchpadRepositoryImpl = (TouchpadRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchpadRepositoryImplProvider.get();
                    provider280 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    return new UserInputDeviceRepository(coroutineDispatcher2, keyboardRepositoryImpl, touchpadRepositoryImpl, (UserRepositoryImpl) provider280.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get11() {
            Provider provider;
            Provider provider2;
            SwitchingProvider switchingProvider;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            Provider provider6;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            Provider provider7;
            Provider provider8;
            DelegateFactory delegateFactory;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            DelegateFactory delegateFactory2;
            Provider provider20;
            DelegateFactory delegateFactory3;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Provider provider24;
            Provider provider25;
            DelegateFactory delegateFactory4;
            Provider provider26;
            Provider provider27;
            Provider provider28;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            DelegateFactory delegateFactory5;
            Provider provider32;
            Provider provider33;
            DelegateFactory delegateFactory6;
            Provider provider34;
            Provider provider35;
            Provider provider36;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            Provider provider40;
            DelegateFactory delegateFactory7;
            DelegateFactory delegateFactory8;
            Provider provider41;
            Provider provider42;
            Context context;
            DelegateFactory delegateFactory9;
            Provider provider43;
            Provider provider44;
            Provider provider45;
            DelegateFactory delegateFactory10;
            SwitchingProvider switchingProvider3;
            Provider provider46;
            Provider provider47;
            Provider provider48;
            Provider provider49;
            Provider provider50;
            Provider provider51;
            Provider provider52;
            Provider provider53;
            DelegateFactory delegateFactory11;
            Provider provider54;
            DelegateFactory delegateFactory12;
            Provider provider55;
            Provider provider56;
            Provider provider57;
            Provider provider58;
            Provider provider59;
            Provider provider60;
            Provider provider61;
            Provider provider62;
            DelegateFactory delegateFactory13;
            DelegateFactory delegateFactory14;
            Provider provider63;
            Provider provider64;
            Provider provider65;
            DelegateFactory delegateFactory15;
            Provider provider66;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            Provider provider71;
            DelegateFactory delegateFactory16;
            DelegateFactory delegateFactory17;
            Provider provider72;
            Provider provider73;
            Provider provider74;
            Provider provider75;
            Context context2;
            Provider provider76;
            Provider provider77;
            Provider provider78;
            Provider provider79;
            Provider provider80;
            Set singleton;
            Provider provider81;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            Provider provider85;
            Provider provider86;
            DelegateFactory delegateFactory18;
            Provider provider87;
            DelegateFactory delegateFactory19;
            Provider provider88;
            SwitchingProvider switchingProvider4;
            Provider provider89;
            Provider provider90;
            DelegateFactory delegateFactory20;
            Provider provider91;
            Provider provider92;
            Context context3;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            DelegateFactory delegateFactory21;
            Provider provider96;
            Provider provider97;
            Provider provider98;
            Provider provider99;
            Provider provider100;
            Context context4;
            Provider provider101;
            Provider provider102;
            Provider provider103;
            Provider provider104;
            Provider provider105;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Provider provider110;
            Context context5;
            Provider provider111;
            Provider provider112;
            DelegateFactory delegateFactory22;
            Provider provider113;
            Provider provider114;
            Provider provider115;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            DelegateFactory delegateFactory23;
            DelegateFactory delegateFactory24;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            Provider provider123;
            Provider provider124;
            Provider provider125;
            Provider provider126;
            Provider provider127;
            Provider provider128;
            Context context6;
            Provider provider129;
            Provider provider130;
            Provider provider131;
            Provider provider132;
            Provider provider133;
            Provider provider134;
            Provider provider135;
            Provider provider136;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            Provider provider137;
            Provider provider138;
            Provider provider139;
            Provider provider140;
            Provider provider141;
            Provider provider142;
            Provider provider143;
            Provider provider144;
            Provider provider145;
            Context context7;
            Provider provider146;
            Provider provider147;
            Provider provider148;
            Provider provider149;
            Provider provider150;
            Provider provider151;
            DelegateFactory delegateFactory25;
            Provider provider152;
            Provider provider153;
            Provider provider154;
            Context context8;
            Provider provider155;
            Provider provider156;
            Provider provider157;
            Provider provider158;
            Provider provider159;
            Provider provider160;
            Provider provider161;
            Provider provider162;
            Provider provider163;
            Provider provider164;
            Provider provider165;
            Provider provider166;
            Provider provider167;
            DelegateFactory delegateFactory26;
            Provider provider168;
            Provider provider169;
            Provider provider170;
            Provider provider171;
            Provider provider172;
            Provider provider173;
            Provider provider174;
            Provider provider175;
            Provider provider176;
            DelegateFactory delegateFactory27;
            Provider provider177;
            Provider provider178;
            Context context9;
            Provider provider179;
            DelegateFactory delegateFactory28;
            Provider provider180;
            Context context10;
            Provider provider181;
            Provider provider182;
            Provider provider183;
            Provider provider184;
            DelegateFactory delegateFactory29;
            SwitchingProvider switchingProvider6;
            Provider provider185;
            Provider provider186;
            Context context11;
            DelegateFactory delegateFactory30;
            DelegateFactory delegateFactory31;
            Provider provider187;
            Provider provider188;
            DelegateFactory delegateFactory32;
            Context context12;
            Provider provider189;
            Provider provider190;
            Provider provider191;
            Provider provider192;
            Provider provider193;
            Provider provider194;
            Provider provider195;
            Provider provider196;
            Provider provider197;
            Provider provider198;
            DelegateFactory delegateFactory33;
            Provider provider199;
            Provider provider200;
            Provider provider201;
            Provider provider202;
            Provider provider203;
            Provider provider204;
            Provider provider205;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider7;
            Provider provider206;
            Provider provider207;
            Provider provider208;
            Provider provider209;
            Provider provider210;
            Provider provider211;
            Provider provider212;
            Provider provider213;
            Provider provider214;
            Provider provider215;
            Provider provider216;
            Provider provider217;
            Provider provider218;
            Provider provider219;
            Provider provider220;
            DelegateFactory delegateFactory34;
            Provider provider221;
            Provider provider222;
            Context context13;
            DelegateFactory delegateFactory35;
            Provider provider223;
            Provider provider224;
            Context context14;
            DelegateFactory delegateFactory36;
            Provider provider225;
            Provider provider226;
            DelegateFactory delegateFactory37;
            Provider provider227;
            DelegateFactory delegateFactory38;
            DelegateFactory delegateFactory39;
            Provider provider228;
            Provider provider229;
            Provider provider230;
            DelegateFactory delegateFactory40;
            DelegateFactory delegateFactory41;
            DelegateFactory delegateFactory42;
            Provider provider231;
            Provider provider232;
            int displayId;
            DelegateFactory delegateFactory43;
            Provider provider233;
            DelegateFactory delegateFactory44;
            DelegateFactory delegateFactory45;
            DelegateFactory delegateFactory46;
            Provider provider234;
            Provider provider235;
            Provider provider236;
            DelegateFactory delegateFactory47;
            Context context15;
            Provider provider237;
            Provider provider238;
            Provider provider239;
            Provider provider240;
            Provider provider241;
            Provider provider242;
            Provider provider243;
            Provider provider244;
            DelegateFactory delegateFactory48;
            DelegateFactory delegateFactory49;
            Context context16;
            DelegateFactory delegateFactory50;
            DelegateFactory delegateFactory51;
            DelegateFactory delegateFactory52;
            DelegateFactory delegateFactory53;
            DelegateFactory delegateFactory54;
            DelegateFactory delegateFactory55;
            Provider provider245;
            Provider provider246;
            DelegateFactory delegateFactory56;
            DelegateFactory delegateFactory57;
            Provider provider247;
            Context context17;
            int displayId2;
            DelegateFactory delegateFactory58;
            Provider provider248;
            Provider provider249;
            DelegateFactory delegateFactory59;
            Provider provider250;
            DelegateFactory delegateFactory60;
            Provider provider251;
            Provider provider252;
            Provider provider253;
            Provider provider254;
            Context context18;
            DelegateFactory delegateFactory61;
            Provider provider255;
            Provider provider256;
            Provider provider257;
            DelegateFactory delegateFactory62;
            Provider provider258;
            Provider provider259;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            Provider provider260;
            Provider provider261;
            Provider provider262;
            Provider provider263;
            Provider provider264;
            DelegateFactory delegateFactory63;
            DelegateFactory delegateFactory64;
            Provider provider265;
            Provider provider266;
            Provider provider267;
            Provider provider268;
            Provider provider269;
            Provider provider270;
            Provider provider271;
            DelegateFactory delegateFactory65;
            Provider provider272;
            Provider provider273;
            Provider provider274;
            DelegateFactory delegateFactory66;
            Provider provider275;
            DelegateFactory delegateFactory67;
            Provider provider276;
            Provider provider277;
            DelegateFactory delegateFactory68;
            Provider provider278;
            DelegateFactory delegateFactory69;
            Context context19;
            Provider provider279;
            Provider provider280;
            Provider provider281;
            DelegateFactory delegateFactory70;
            DelegateFactory delegateFactory71;
            Context context20;
            Provider provider282;
            Provider provider283;
            Provider provider284;
            Provider provider285;
            Provider provider286;
            Provider provider287;
            DelegateFactory delegateFactory72;
            DelegateFactory delegateFactory73;
            Provider provider288;
            Provider provider289;
            DelegateFactory delegateFactory74;
            DelegateFactory delegateFactory75;
            Provider provider290;
            Provider provider291;
            DelegateFactory delegateFactory76;
            Provider provider292;
            Provider provider293;
            DelegateFactory delegateFactory77;
            Provider provider294;
            Provider provider295;
            Provider provider296;
            Provider provider297;
            DelegateFactory delegateFactory78;
            Provider provider298;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1100:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    return new KeyboardRepositoryImpl(coroutineDispatcher, (InputManager) provider2.get(), (InputDeviceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputDeviceRepositoryProvider.get());
                case 1101:
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler = (Handler) switchingProvider.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    return new InputDeviceRepository(handler, coroutineScope, (InputManager) provider4.get());
                case 1102:
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    return new TouchpadRepositoryImpl(coroutineDispatcher2, (InputManager) provider6.get(), (InputDeviceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputDeviceRepositoryProvider.get());
                case 1103:
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context21 = (Context) switchingProvider2.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new TutorialSchedulerRepository(context21, (CoroutineScope) provider7.get());
                case 1104:
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider8.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl = (KeyguardRepositoryImpl) delegateFactory.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    BiometricSettingsRepositoryImpl biometricSettingsRepositoryImpl = (BiometricSettingsRepositoryImpl) provider9.get();
                    KeyguardDismissTransitionInteractor keyguardDismissTransitionInteractor = (KeyguardDismissTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissTransitionInteractorProvider.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    return new KeyguardEnabledInteractor(coroutineScope2, keyguardRepositoryImpl, biometricSettingsRepositoryImpl, keyguardDismissTransitionInteractor, (InternalKeyguardTransitionInteractor) provider10.get());
                case 1105:
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl = (KeyguardTransitionRepositoryImpl) provider11.get();
                    FromLockscreenTransitionInteractor fromLockscreenTransitionInteractor = (FromLockscreenTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromLockscreenTransitionInteractorProvider.get();
                    FromPrimaryBouncerTransitionInteractor fromPrimaryBouncerTransitionInteractor = (FromPrimaryBouncerTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromPrimaryBouncerTransitionInteractorProvider.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromAodTransitionInteractorProvider;
                    FromAodTransitionInteractor fromAodTransitionInteractor = (FromAodTransitionInteractor) provider12.get();
                    FromAlternateBouncerTransitionInteractor fromAlternateBouncerTransitionInteractor = (FromAlternateBouncerTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromAlternateBouncerTransitionInteractorProvider.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromDozingTransitionInteractorProvider;
                    return new KeyguardDismissTransitionInteractor(keyguardTransitionRepositoryImpl, fromLockscreenTransitionInteractor, fromPrimaryBouncerTransitionInteractor, fromAodTransitionInteractor, fromAlternateBouncerTransitionInteractor, (FromDozingTransitionInteractor) provider13.get(), (FromOccludedTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromOccludedTransitionInteractorProvider.get());
                case 1106:
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl2 = (KeyguardTransitionRepositoryImpl) provider14.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor = (InternalKeyguardTransitionInteractor) provider15.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider16.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider19.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory2.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    ShadeRepository shadeRepository = (ShadeRepository) provider20.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory3.get();
                    GlanceableHubTransitions m1559$$Nest$mglanceableHubTransitions = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1559$$Nest$mglanceableHubTransitions(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    CommunalSettingsInteractor communalSettingsInteractor = (CommunalSettingsInteractor) provider21.get();
                    SwipeToDismissInteractor swipeToDismissInteractor = (SwipeToDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeToDismissInteractorProvider.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    return new FromLockscreenTransitionInteractor(keyguardTransitionRepositoryImpl2, internalKeyguardTransitionInteractor, keyguardTransitionInteractor, coroutineScope3, coroutineDispatcher3, coroutineDispatcher4, keyguardInteractor, shadeRepository, powerInteractor, m1559$$Nest$mglanceableHubTransitions, communalSettingsInteractor, swipeToDismissInteractor, (KeyguardOcclusionInteractor) provider22.get());
                case 1107:
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider23.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    ShadeRepository shadeRepository2 = (ShadeRepository) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider25.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new SwipeToDismissInteractor(coroutineScope4, shadeRepository2, keyguardTransitionInteractor2, (KeyguardInteractor) delegateFactory4.get());
                case 1108:
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl3 = (KeyguardTransitionRepositoryImpl) provider26.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor2 = (InternalKeyguardTransitionInteractor) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) provider28.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider29.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider30.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider31.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory5.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider32.get();
                    KeyguardSecurityModel keyguardSecurityModel = (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider33.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory6.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    return new FromPrimaryBouncerTransitionInteractor(keyguardTransitionRepositoryImpl3, internalKeyguardTransitionInteractor2, keyguardTransitionInteractor3, coroutineScope5, coroutineDispatcher5, coroutineDispatcher6, keyguardInteractor2, communalSceneInteractor, keyguardSecurityModel, selectedUserInteractor, powerInteractor2, (KeyguardOcclusionInteractor) provider34.get());
                case 1109:
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl4 = (KeyguardTransitionRepositoryImpl) provider35.get();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor3 = (InternalKeyguardTransitionInteractor) provider36.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor4 = (KeyguardTransitionInteractor) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider38.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider39.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider40.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor3 = (KeyguardInteractor) delegateFactory7.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor3 = (PowerInteractor) delegateFactory8.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    KeyguardOcclusionInteractor keyguardOcclusionInteractor = (KeyguardOcclusionInteractor) provider41.get();
                    return new FromAodTransitionInteractor(keyguardTransitionRepositoryImpl4, internalKeyguardTransitionInteractor3, keyguardTransitionInteractor4, coroutineScope6, coroutineDispatcher7, coroutineDispatcher8, keyguardInteractor3, powerInteractor3, keyguardOcclusionInteractor, (KeyguardWakeDirectlyToGoneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardWakeDirectlyToGoneInteractorProvider.get());
                case 1110:
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider42.get();
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl2 = (KeyguardRepositoryImpl) delegateFactory9.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager = (AlarmManager) provider44.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor5 = (KeyguardTransitionInteractor) provider45.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor4 = (PowerInteractor) delegateFactory10.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider3.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider46.get();
                    SystemSettingsImpl m1700$$Nest$msystemSettingsImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1700$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new KeyguardWakeDirectlyToGoneInteractor(coroutineScope7, context, keyguardRepositoryImpl2, systemClock, alarmManager, keyguardTransitionInteractor5, powerInteractor4, secureSettings, lockPatternUtils, m1700$$Nest$msystemSettingsImpl, (SelectedUserInteractor) provider47.get());
                case 1111:
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl5 = (KeyguardTransitionRepositoryImpl) provider48.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor4 = (InternalKeyguardTransitionInteractor) provider49.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor6 = (KeyguardTransitionInteractor) provider50.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider51.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher9 = (CoroutineDispatcher) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher10 = (CoroutineDispatcher) provider53.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor4 = (KeyguardInteractor) delegateFactory11.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider54.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor5 = (PowerInteractor) delegateFactory12.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    KeyguardOcclusionInteractor keyguardOcclusionInteractor2 = (KeyguardOcclusionInteractor) provider55.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    return new FromAlternateBouncerTransitionInteractor(keyguardTransitionRepositoryImpl5, internalKeyguardTransitionInteractor4, keyguardTransitionInteractor6, coroutineScope8, coroutineDispatcher9, coroutineDispatcher10, keyguardInteractor4, communalInteractor, powerInteractor5, keyguardOcclusionInteractor2, (PrimaryBouncerInteractor) provider56.get());
                case 1112:
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl6 = (KeyguardTransitionRepositoryImpl) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor5 = (InternalKeyguardTransitionInteractor) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor7 = (KeyguardTransitionInteractor) provider59.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider60.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher11 = (CoroutineDispatcher) provider61.get();
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher12 = (CoroutineDispatcher) provider62.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor5 = (KeyguardInteractor) delegateFactory13.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor6 = (PowerInteractor) delegateFactory14.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor2 = (CommunalInteractor) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor2 = (CommunalSceneInteractor) provider64.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    KeyguardOcclusionInteractor keyguardOcclusionInteractor3 = (KeyguardOcclusionInteractor) provider65.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new FromDozingTransitionInteractor(keyguardTransitionRepositoryImpl6, internalKeyguardTransitionInteractor5, keyguardTransitionInteractor7, coroutineScope9, coroutineDispatcher11, coroutineDispatcher12, keyguardInteractor5, powerInteractor6, communalInteractor2, communalSceneInteractor2, keyguardOcclusionInteractor3, (DeviceEntryInteractor) delegateFactory15.get(), (KeyguardWakeDirectlyToGoneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardWakeDirectlyToGoneInteractorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamManager());
                case 1113:
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl7 = (KeyguardTransitionRepositoryImpl) provider66.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor6 = (InternalKeyguardTransitionInteractor) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor8 = (KeyguardTransitionInteractor) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider69.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher13 = (CoroutineDispatcher) provider70.get();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher14 = (CoroutineDispatcher) provider71.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor6 = (KeyguardInteractor) delegateFactory16.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor7 = (PowerInteractor) delegateFactory17.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor3 = (CommunalInteractor) provider72.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor3 = (CommunalSceneInteractor) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    return new FromOccludedTransitionInteractor(keyguardTransitionRepositoryImpl7, internalKeyguardTransitionInteractor6, keyguardTransitionInteractor8, coroutineScope10, coroutineDispatcher13, coroutineDispatcher14, keyguardInteractor6, powerInteractor7, communalInteractor3, communalSceneInteractor3, (KeyguardOcclusionInteractor) provider74.get());
                case 1114:
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideShadeWindowLogBufferFactory.provideShadeWindowLogBuffer((LogBufferFactory) provider75.get());
                case 1115:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager2 = (AlarmManager) provider76.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider77.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher15 = (CoroutineDispatcher) provider78.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return CentralSurfacesGoogleModule_ProvideHealthManagerFactory.provideHealthManager(context2, alarmManager2, broadcastDispatcher, coroutineDispatcher15, (CoroutineScope) provider79.get());
                case 1116:
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl = (StatusBarWindowControllerImpl) provider80.get();
                    SwitchingProvider switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarFragmentProvider;
                    singleton = Collections.singleton((StatusBarInitializer$OnStatusBarViewInitializedListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get());
                    return new StatusBarInitializerImpl(statusBarWindowControllerImpl, switchingProvider9, singleton);
                case 1117:
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingCallControllerProvider;
                    OngoingCallController ongoingCallController = (OngoingCallController) provider81.get();
                    SystemStatusAnimationSchedulerImpl systemStatusAnimationSchedulerImpl = (SystemStatusAnimationSchedulerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemStatusAnimationSchedulerProvider.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarLocationPublisherProvider;
                    StatusBarLocationPublisher statusBarLocationPublisher = (StatusBarLocationPublisher) provider82.get();
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController = (StatusBarIconController) provider83.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider61;
                    DarkIconManager.Factory factory = (DarkIconManager.Factory) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarViewModelImplProvider;
                    CollapsedStatusBarViewModel collapsedStatusBarViewModel = (CollapsedStatusBarViewModel) provider85.get();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarViewBinderImplProvider;
                    CollapsedStatusBarViewBinderImpl collapsedStatusBarViewBinderImpl = (CollapsedStatusBarViewBinderImpl) provider86.get();
                    StatusBarHideIconsForBouncerManager statusBarHideIconsForBouncerManager = (StatusBarHideIconsForBouncerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarHideIconsForBouncerManagerProvider.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory18.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    PanelExpansionInteractor panelExpansionInteractor = (PanelExpansionInteractor) provider87.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory19.get();
                    NotificationIconContainerStatusBarViewBinder m1630$$Nest$mnotificationIconContainerStatusBarViewBinder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1630$$Nest$mnotificationIconContainerStatusBarViewBinder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider88.get();
                    CarrierConfigTracker carrierConfigTracker = (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get();
                    CollapsedStatusBarFragmentLogger m1520$$Nest$mcollapsedStatusBarFragmentLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1520$$Nest$mcollapsedStatusBarFragmentLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    OperatorNameViewController.Factory m1634$$Nest$moperatorNameViewControllerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1634$$Nest$moperatorNameViewControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider4.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider89.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider90.get();
                    StatusBarWindowStateController statusBarWindowStateController = (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory20.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    return new CollapsedStatusBarFragment(daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, ongoingCallController, systemStatusAnimationSchedulerImpl, statusBarLocationPublisher, shadeExpansionStateManager, statusBarIconController, factory, collapsedStatusBarViewModel, collapsedStatusBarViewBinderImpl, statusBarHideIconsForBouncerManager, keyguardStateController, panelExpansionInteractor, statusBarStateController, m1630$$Nest$mnotificationIconContainerStatusBarViewBinder, commandQueue, carrierConfigTracker, m1520$$Nest$mcollapsedStatusBarFragmentLogger, m1634$$Nest$moperatorNameViewControllerFactory, secureSettings2, executor, dumpManager, statusBarWindowStateController, keyguardUpdateMonitor, (DemoModeController) provider91.get());
                case 1118:
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope11 = (CoroutineScope) provider92.get();
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    OngoingCallRepository ongoingCallRepository = (OngoingCallRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingCallRepositoryProvider.get();
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    CommonNotifCollection commonNotifCollection = (CommonNotifCollection) provider93.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor = (ActiveNotificationsInteractor) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock2 = (SystemClock) provider95.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory21.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor2 = (Executor) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    IActivityManager iActivityManager = (IActivityManager) provider97.get();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider98.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl2 = (StatusBarWindowControllerImpl) provider99.get();
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeStatusBarAwayGestureHandlerProvider;
                    return new OngoingCallController(coroutineScope11, context3, ongoingCallRepository, commonNotifCollection, activeNotificationsInteractor, systemClock2, activityStarter, executor2, iActivityManager, dumpManager2, statusBarWindowControllerImpl2, (SwipeStatusBarAwayGestureHandler) provider100.get(), (StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideOngoingCallLogBufferProvider.get());
                case 1119:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker = (DisplayTracker) provider101.get();
                    SwipeUpGestureLogger swipeUpGestureLogger = (SwipeUpGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpGestureLoggerProvider.get();
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    return new SwipeStatusBarAwayGestureHandler(context4, displayTracker, swipeUpGestureLogger, (StatusBarWindowControllerImpl) provider102.get());
                case 1120:
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemEventCoordinatorProvider;
                    SystemEventCoordinator systemEventCoordinator = (SystemEventCoordinator) provider103.get();
                    SystemEventChipAnimationController m1698$$Nest$msystemEventChipAnimationController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1698$$Nest$msystemEventChipAnimationController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl3 = (StatusBarWindowControllerImpl) provider104.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider105.get();
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock3 = (SystemClock) provider106.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope12 = (CoroutineScope) provider107.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemStatusAnimationSchedulerLoggerProvider;
                    return new SystemStatusAnimationSchedulerImpl(systemEventCoordinator, m1698$$Nest$msystemEventChipAnimationController, statusBarWindowControllerImpl3, dumpManager3, systemClock3, coroutineScope12, (SystemStatusAnimationSchedulerLogger) provider108.get());
                case 1121:
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock4 = (SystemClock) provider109.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController = (BatteryController) provider110.get();
                    PrivacyItemController privacyItemController = (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get();
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new SystemEventCoordinator(systemClock4, batteryController, privacyItemController, context5, (CoroutineScope) provider111.get(), (ConnectedDisplayInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectedDisplayInteractorImplProvider.get());
                case 1122:
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideVirtualDeviceManagerProvider;
                    VirtualDeviceManager virtualDeviceManager = (VirtualDeviceManager) provider112.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl3 = (KeyguardRepositoryImpl) delegateFactory22.get();
                    DisplayRepository displayRepository = (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get();
                    com.android.systemui.display.data.repository.DeviceStateRepositoryImpl m1546$$Nest$mdeviceStateRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1546$$Nest$mdeviceStateRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new ConnectedDisplayInteractorImpl(virtualDeviceManager, keyguardRepositoryImpl3, displayRepository, m1546$$Nest$mdeviceStateRepositoryImpl, (CoroutineDispatcher) provider113.get());
                case 1123:
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemStatusAnimationSchedulerLogBufferProvider;
                    return new SystemStatusAnimationSchedulerLogger((LogBuffer) provider114.get());
                case 1124:
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarEventsModule_Companion_ProvideSystemStatusAnimationSchedulerLogBufferFactory.provideSystemStatusAnimationSchedulerLogBuffer((LogBufferFactory) provider115.get());
                case 1125:
                    return new StatusBarLocationPublisher();
                case 1126:
                    return new DarkIconManager.Factory((WifiUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiUiAdapterProvider.get(), (MobileContextProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileContextProvider.get(), (MobileUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileUiAdapterProvider.get(), (DarkIconDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get());
                case 1127:
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarInteractorProvider;
                    CollapsedStatusBarInteractor collapsedStatusBarInteractor = (CollapsedStatusBarInteractor) provider116.get();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightsOutInteractorProvider;
                    LightsOutInteractor lightsOutInteractor = (LightsOutInteractor) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor2 = (ActiveNotificationsInteractor) provider118.get();
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor9 = (KeyguardTransitionInteractor) provider119.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory23.get();
                    SceneContainerOcclusionInteractor sceneContainerOcclusionInteractor = (SceneContainerOcclusionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerOcclusionInteractorProvider.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory24.get();
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingActivityChipsViewModelProvider;
                    OngoingActivityChipsViewModel ongoingActivityChipsViewModel = (OngoingActivityChipsViewModel) provider120.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new CollapsedStatusBarViewModelImpl(collapsedStatusBarInteractor, lightsOutInteractor, activeNotificationsInteractor2, keyguardTransitionInteractor9, sceneInteractor, sceneContainerOcclusionInteractor, shadeInteractor, ongoingActivityChipsViewModel, (CoroutineScope) provider121.get());
                case 1128:
                    return new CollapsedStatusBarInteractor((DisableFlagsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsRepositoryImplProvider.get());
                case 1129:
                    return new LightsOutInteractor((StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get());
                case 1130:
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope13 = (CoroutineScope) provider122.get();
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenRecordChipViewModelProvider;
                    ScreenRecordChipViewModel screenRecordChipViewModel = (ScreenRecordChipViewModel) provider123.get();
                    ShareToAppChipViewModel shareToAppChipViewModel = (ShareToAppChipViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shareToAppChipViewModelProvider.get();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castToOtherDeviceChipViewModelProvider;
                    CastToOtherDeviceChipViewModel castToOtherDeviceChipViewModel = (CastToOtherDeviceChipViewModel) provider124.get();
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.callChipViewModelProvider;
                    CallChipViewModel callChipViewModel = (CallChipViewModel) provider125.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.demoRonChipViewModelProvider;
                    DemoRonChipViewModel demoRonChipViewModel = (DemoRonChipViewModel) provider126.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new OngoingActivityChipsViewModel(coroutineScope13, screenRecordChipViewModel, shareToAppChipViewModel, castToOtherDeviceChipViewModel, callChipViewModel, demoRonChipViewModel, (LogBuffer) provider127.get());
                case 1131:
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope14 = (CoroutineScope) provider128.get();
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenRecordChipInteractorProvider;
                    ScreenRecordChipInteractor screenRecordChipInteractor = (ScreenRecordChipInteractor) provider129.get();
                    ShareToAppChipViewModel shareToAppChipViewModel2 = (ShareToAppChipViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shareToAppChipViewModelProvider.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock5 = (SystemClock) provider130.get();
                    EndMediaProjectionDialogHelper endMediaProjectionDialogHelper = (EndMediaProjectionDialogHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.endMediaProjectionDialogHelperProvider.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider131.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new ScreenRecordChipViewModel(coroutineScope14, context6, screenRecordChipInteractor, shareToAppChipViewModel2, systemClock5, endMediaProjectionDialogHelper, dialogTransitionAnimator, (LogBuffer) provider132.get());
                case 1132:
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope15 = (CoroutineScope) provider133.get();
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenRecordRepositoryImplProvider;
                    ScreenRecordRepositoryImpl screenRecordRepositoryImpl = (ScreenRecordRepositoryImpl) provider134.get();
                    MediaProjectionManagerRepository mediaProjectionManagerRepository = (MediaProjectionManagerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionManagerRepositoryProvider.get();
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new ScreenRecordChipInteractor(coroutineScope15, screenRecordRepositoryImpl, mediaProjectionManagerRepository, (LogBuffer) provider135.get());
                case 1133:
                    MediaProjectionManager mediaProjectionManager = (MediaProjectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getSystemService(MediaProjectionManager.class);
                    Preconditions.checkNotNullFromProvides(mediaProjectionManager);
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager = (DisplayManager) provider136.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider5.get();
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope16 = (CoroutineScope) provider137.get();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher16 = (CoroutineDispatcher) provider138.get();
                    ActivityTaskManagerTasksRepository activityTaskManagerTasksRepository = (ActivityTaskManagerTasksRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityTaskManagerTasksRepositoryProvider.get();
                    MediaProjectionServiceHelper mediaProjectionServiceHelper = new MediaProjectionServiceHelper();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaProjectionLogBufferProvider;
                    return new MediaProjectionManagerRepository(mediaProjectionManager, displayManager, handler2, coroutineScope16, coroutineDispatcher16, activityTaskManagerTasksRepository, mediaProjectionServiceHelper, (LogBuffer) provider139.get());
                case 1134:
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider;
                    IActivityTaskManager iActivityTaskManager = (IActivityTaskManager) provider140.get();
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope17 = (CoroutineScope) provider141.get();
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new ActivityTaskManagerTasksRepository(iActivityTaskManager, coroutineScope17, (CoroutineDispatcher) provider142.get());
                case 1135:
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return MediaProjectionModule_Companion_ProvideMediaProjectionLogBufferFactory.provideMediaProjectionLogBuffer((LogBufferFactory) provider143.get());
                case 1136:
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarChipsModule_Companion_ProvideChipsLogBufferFactory.provideChipsLogBuffer((LogBufferFactory) provider144.get());
                case 1137:
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope18 = (CoroutineScope) provider145.get();
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    MediaProjectionChipInteractor mediaProjectionChipInteractor = (MediaProjectionChipInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionChipInteractorProvider.get();
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock6 = (SystemClock) provider146.get();
                    EndMediaProjectionDialogHelper endMediaProjectionDialogHelper2 = (EndMediaProjectionDialogHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.endMediaProjectionDialogHelperProvider.get();
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator2 = (DialogTransitionAnimator) provider147.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new ShareToAppChipViewModel(coroutineScope18, context7, mediaProjectionChipInteractor, systemClock6, endMediaProjectionDialogHelper2, dialogTransitionAnimator2, (LogBuffer) provider148.get());
                case 1138:
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope19 = (CoroutineScope) provider149.get();
                    MediaProjectionManagerRepository mediaProjectionManagerRepository2 = (MediaProjectionManagerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionManagerRepositoryProvider.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider150.get();
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new MediaProjectionChipInteractor(coroutineScope19, mediaProjectionManagerRepository2, packageManager, (LogBuffer) provider151.get());
                case 1139:
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    SystemUIDialog.Factory factory2 = (SystemUIDialog.Factory) delegateFactory25.get();
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator3 = (DialogTransitionAnimator) provider152.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    return new EndMediaProjectionDialogHelper(factory2, dialogTransitionAnimator3, (PackageManager) provider153.get());
                case 1140:
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope20 = (CoroutineScope) provider154.get();
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    MediaProjectionChipInteractor mediaProjectionChipInteractor2 = (MediaProjectionChipInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionChipInteractorProvider.get();
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaRouterChipInteractorProvider;
                    MediaRouterChipInteractor mediaRouterChipInteractor = (MediaRouterChipInteractor) provider155.get();
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock7 = (SystemClock) provider156.get();
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator4 = (DialogTransitionAnimator) provider157.get();
                    EndMediaProjectionDialogHelper endMediaProjectionDialogHelper3 = (EndMediaProjectionDialogHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.endMediaProjectionDialogHelperProvider.get();
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new CastToOtherDeviceChipViewModel(coroutineScope20, context8, mediaProjectionChipInteractor2, mediaRouterChipInteractor, systemClock7, dialogTransitionAnimator4, endMediaProjectionDialogHelper3, (LogBuffer) provider158.get());
                case 1141:
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope21 = (CoroutineScope) provider159.get();
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaRouterRepositoryImplProvider;
                    MediaRouterRepositoryImpl mediaRouterRepositoryImpl = (MediaRouterRepositoryImpl) provider160.get();
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new MediaRouterChipInteractor(coroutineScope21, mediaRouterRepositoryImpl, (LogBuffer) provider161.get());
                case 1142:
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope22 = (CoroutineScope) provider162.get();
                    CastControllerImpl castControllerImpl = (CastControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get();
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaRouterLogBufferProvider;
                    return new MediaRouterRepositoryImpl(coroutineScope22, castControllerImpl, (LogBuffer) provider163.get());
                case 1143:
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return MediaRouterModule_Companion_ProvideMediaRouterLogBufferFactory.provideMediaRouterLogBuffer((LogBufferFactory) provider164.get());
                case 1144:
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope23 = (CoroutineScope) provider165.get();
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.callChipInteractorProvider;
                    CallChipInteractor callChipInteractor = (CallChipInteractor) provider166.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock8 = (SystemClock) provider167.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory26.get();
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new CallChipViewModel(coroutineScope23, callChipInteractor, systemClock8, activityStarter2, (LogBuffer) provider168.get());
                case 1145:
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope24 = (CoroutineScope) provider169.get();
                    OngoingCallRepository ongoingCallRepository2 = (OngoingCallRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingCallRepositoryProvider.get();
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipsLogBufferProvider;
                    return new CallChipInteractor(coroutineScope24, ongoingCallRepository2, (LogBuffer) provider170.get());
                case 1146:
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry = (CommandRegistry) provider171.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager2 = (PackageManager) provider172.get();
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new DemoRonChipViewModel(commandRegistry, packageManager2, (SystemClock) provider173.get());
                case 1147:
                    return new CollapsedStatusBarViewBinderImpl();
                case 1148:
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope25 = (CoroutineScope) provider174.get();
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider175.get();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider176.get();
                    StatusBarWindowStateController statusBarWindowStateController2 = (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get();
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor2 = (ShadeInteractor) delegateFactory27.get();
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new StatusBarHideIconsForBouncerManager(coroutineScope25, commandQueue2, delayableExecutor, statusBarWindowStateController2, shadeInteractor2, (DumpManager) provider177.get());
                case 1149:
                    return new DarkIconRepositoryImpl((DarkIconDispatcherImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get());
                case 1150:
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideCollapsedSbFragmentLogBufferFactory.provideCollapsedSbFragmentLogBuffer((LogBufferFactory) provider178.get());
                case 1151:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController2 = (StatusBarIconController) provider179.get();
                    NetworkController networkController = (NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get();
                    SecurityController securityController = (SecurityController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityControllerImplProvider.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService = (TunerService) delegateFactory28.get();
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    return new StatusBarSignalPolicy(context9, statusBarIconController2, networkController, securityController, tunerService, (JavaAdapter) provider180.get(), (AirplaneModeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeInteractorProvider.get());
                case 1152:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager = (WindowManager) provider181.get();
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider182.get();
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager2 = (DisplayManager) provider183.get();
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider184.get();
                    AccessibilityButtonTargetsObserver accessibilityButtonTargetsObserver = (AccessibilityButtonTargetsObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityButtonTargetsObserverProvider.get();
                    AccessibilityButtonModeObserver accessibilityButtonModeObserver = (AccessibilityButtonModeObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityButtonModeObserverProvider.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory29.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings3 = (SecureSettings) switchingProvider6.get();
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker2 = (DisplayTracker) provider185.get();
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    return new AccessibilityFloatingMenuController(context10, windowManager, viewCaptureAwareWindowManager, displayManager2, accessibilityManager, accessibilityButtonTargetsObserver, accessibilityButtonModeObserver, keyguardUpdateMonitor2, secureSettings3, displayTracker2, (NavigationModeController) provider186.get(), GlobalConcurrencyModule_ProvideHandlerFactory.provideHandler());
                case 1153:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator = (KeyguardViewMediator) delegateFactory30.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory31.get();
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogControllerImplProvider;
                    VolumeDialogControllerImpl volumeDialogControllerImpl = (VolumeDialogControllerImpl) provider187.get();
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController = (DemoModeController) provider188.get();
                    PluginDependencyProvider pluginDependencyProvider = (PluginDependencyProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.pluginDependencyProvider.get();
                    ExtensionControllerImpl extensionControllerImpl = (ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get();
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    return new VolumeDialogComponent(context11, keyguardViewMediator, activityStarter3, volumeDialogControllerImpl, demoModeController, pluginDependencyProvider, extensionControllerImpl, (TunerService) delegateFactory32.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1710$$Nest$mvolumeDialog(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1154:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider189.get();
                    RingerModeTrackerImpl ringerModeTrackerImpl = (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get();
                    ThreadFactoryImpl newInstance = ThreadFactoryImpl_Factory.newInstance();
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider;
                    AudioManager audioManager = (AudioManager) provider190.get();
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager = (NotificationManager) provider191.get();
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider192.get();
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIAudioServiceProvider;
                    IAudioService iAudioService = (IAudioService) provider193.get();
                    VolumeControllerAdapter m1709$$Nest$mvolumeControllerAdapter = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1709$$Nest$mvolumeControllerAdapter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager2 = (AccessibilityManager) provider194.get();
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager3 = (PackageManager) provider195.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider196.get();
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider;
                    KeyguardManager keyguardManager = (KeyguardManager) provider197.get();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider;
                    ActivityManager activityManager = (ActivityManager) provider198.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory33.get();
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider199.get();
                    AudioSharingInteractor audioSharingInteractor = (AudioSharingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioSharingInteractorProvider.get();
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    return new VolumeDialogControllerImpl(context12, broadcastDispatcher2, ringerModeTrackerImpl, newInstance, audioManager, notificationManager, vibratorHelper, iAudioService, m1709$$Nest$mvolumeControllerAdapter, accessibilityManager2, packageManager3, wakefulnessLifecycle, keyguardManager, activityManager, userTracker, dumpManager4, audioSharingInteractor, (JavaAdapter) provider200.get());
                case 1155:
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioManagerIntentsReceiverProvider;
                    AudioManagerEventsReceiverImpl audioManagerEventsReceiverImpl = (AudioManagerEventsReceiverImpl) provider201.get();
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider;
                    AudioManager audioManager2 = (AudioManager) provider202.get();
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver = (ContentResolver) provider203.get();
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext = (CoroutineContext) provider204.get();
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return AudioModule_Companion_ProvideAudioRepositoryFactory.provideAudioRepository(audioManagerEventsReceiverImpl, audioManager2, contentResolver, coroutineContext, (CoroutineScope) provider205.get(), (VolumeLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeLoggerProvider.get());
                case 1156:
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context22 = (Context) switchingProvider7.get();
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return AudioModule_Companion_ProvideAudioManagerIntentsReceiverFactory.provideAudioManagerIntentsReceiver(context22, (CoroutineScope) provider206.get());
                case 1157:
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVolumeLogBufferProvider;
                    return new VolumeLogger((LogBuffer) provider207.get());
                case 1158:
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.audioSharingInteractorImplProvider;
                    DoubleCheck.lazy(provider208);
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.audioSharingInteractorEmptyImplProvider;
                    return AudioSharingModule_Companion_ProvideAudioSharingInteractorFactory.provideAudioSharingInteractor(DoubleCheck.lazy(provider209));
                case 1159:
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope26 = (CoroutineScope) provider210.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext2 = (CoroutineContext) provider211.get();
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioVolumeInteractorProvider;
                    AudioVolumeInteractor audioVolumeInteractor = (AudioVolumeInteractor) provider212.get();
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioSharingRepositoryProvider;
                    return new AudioSharingInteractorImpl(coroutineScope26, coroutineContext2, audioVolumeInteractor, (AudioSharingRepositoryEmptyImpl) provider213.get());
                case 1160:
                    AudioRepository audioRepository = (AudioRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioRepositoryProvider.get();
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsSoundPolicyInteractorProvider;
                    return AudioModule_Companion_ProvideAudioVolumeInteractorFactory.provideAudioVolumeInteractor(audioRepository, (NotificationsSoundPolicyInteractor) provider214.get());
                case 1161:
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideZenModeRepositoryProvider;
                    return NotificationsModule_ProvideNotificationsSoundPolicyInteractorFactory.provideNotificationsSoundPolicyInteractor((ZenModeRepositoryImpl) provider215.get());
                case 1162:
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    return AudioModule_Companion_ProvideAudioSharingRepositoryFactory.provideAudioSharingRepository();
                case 1163:
                    return new AudioSharingInteractorEmptyImpl();
                case 1164:
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope27 = (CoroutineScope) provider219.get();
                    CoroutineContext coroutineContext3 = (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainCoroutineContextProvider.get();
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumePanelFactoryProvider;
                    VolumePanelFactory volumePanelFactory = (VolumePanelFactory) provider220.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter4 = (ActivityStarter) delegateFactory34.get();
                    VolumePanelViewModel.Factory m1712$$Nest$mvolumePanelViewModelFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1712$$Nest$mvolumePanelViewModelFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SystemUIDialogFactory systemUIDialogFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogFactory();
                    provider221 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider221.get();
                    provider222 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumePanelGlobalStateInteractorProvider;
                    return new VolumeNavigator(coroutineScope27, coroutineContext3, volumePanelFactory, activityStarter4, m1712$$Nest$mvolumePanelViewModelFactory, systemUIDialogFactory, uiEventLogger, (VolumePanelGlobalStateInteractor) provider222.get());
                case 1165:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter5 = (ActivityStarter) delegateFactory35.get();
                    provider223 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    return new VolumePanelFactory(context13, activityStarter5, (DialogTransitionAnimator) provider223.get());
                case 1166:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$59(this);
                case 1167:
                    provider224 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogRepositoryProvider;
                    return new VolumeDialogInteractor((VolumeDialogRepository) provider224.get());
                case 1168:
                    return new VolumeDialogRepository();
                case 1169:
                    CentralSurfaces centralSurfaces = (CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get();
                    QuickSettingsController quickSettingsController = (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickSettingsControllerProvider.get();
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    ScreenPinningRequest screenPinningRequest = (ScreenPinningRequest) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenPinningRequestProvider.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory36.get();
                    provider225 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue3 = (CommandQueue) provider225.get();
                    provider226 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    PanelExpansionInteractor panelExpansionInteractor2 = (PanelExpansionInteractor) provider226.get();
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Lazy lazy = DoubleCheck.lazy(delegateFactory37);
                    ShadeHeaderController shadeHeaderController = (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get();
                    RemoteInputQuickSettingsDisabler remoteInputQuickSettingsDisabler = (RemoteInputQuickSettingsDisabler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputQuickSettingsDisablerProvider.get();
                    provider227 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider227.get();
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor3 = (KeyguardUpdateMonitor) delegateFactory38.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory39.get();
                    provider228 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider228.get();
                    provider229 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle2 = (WakefulnessLifecycle) provider229.get();
                    provider230 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider230.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory40.get();
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    AssistManagerGoogle assistManagerGoogle = (AssistManagerGoogle) delegateFactory41.get();
                    DozeServiceHost dozeServiceHost = (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get();
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory42.get();
                    StatusBarHideIconsForBouncerManager statusBarHideIconsForBouncerManager2 = (StatusBarHideIconsForBouncerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarHideIconsForBouncerManagerProvider.get();
                    provider231 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider231.get();
                    provider232 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideOptionalVibratorProvider;
                    Optional optional = (Optional) provider232.get();
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraLauncherProvider);
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory43.get();
                    provider233 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost = (QSHost) provider233.get();
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter6 = (ActivityStarter) delegateFactory44.get();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor7 = (KeyguardInteractor) delegateFactory45.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    PackageManager packageManager4 = (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.providePackageManagerProvider.get();
                    Resources resources = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    return CentralSurfacesCommandQueueCallbacks_Factory.newInstance(centralSurfaces, quickSettingsController, context14, m977$$Nest$mmainResources, screenPinningRequest, shadeController, commandQueue3, panelExpansionInteractor2, lazy, shadeHeaderController, remoteInputQuickSettingsDisabler, metricsLogger, keyguardUpdateMonitor3, keyguardStateController2, headsUpManager, wakefulnessLifecycle2, deviceProvisionedController, statusBarKeyguardViewManager, assistManagerGoogle, dozeServiceHost, notificationStackScrollLayoutController, statusBarHideIconsForBouncerManager2, powerManager, optional, displayId, lazy2, userTracker2, qSHost, activityStarter6, keyguardInteractor7, new EmergencyGestureModule$emergencyGestureIntentFactory$1(packageManager4, resources));
                case 1170:
                    CameraGestureHelper cameraGestureHelper = (CameraGestureHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraGestureHelperProvider.get();
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    return new CameraLauncher(cameraGestureHelper, (KeyguardBypassController) delegateFactory46.get());
                case 1171:
                    return SystemUIGoogleModule_ProvideSensorPrivacyControllerFactory.provideSensorPrivacyController((SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get());
                case 1172:
                    provider234 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry2 = (CommandRegistry) provider234.get();
                    provider235 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController2 = (BatteryController) provider235.get();
                    provider236 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider236.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory47.get();
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider237 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager2 = (WindowManager) provider237.get();
                    provider238 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager2 = (ViewCaptureAwareWindowManager) provider238.get();
                    provider239 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock9 = (SystemClock) provider239.get();
                    provider240 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new WiredChargingRippleController(commandRegistry2, batteryController2, configurationController, featureFlags, context15, windowManager2, viewCaptureAwareWindowManager2, systemClock9, (UiEventLogger) provider240.get());
                case 1173:
                    provider241 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightRevealScrimInteractorProvider;
                    return new LightRevealScrimViewModel((LightRevealScrimInteractor) provider241.get());
                case 1174:
                    provider242 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor10 = (KeyguardTransitionInteractor) provider242.get();
                    provider243 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightRevealScrimRepositoryImplProvider;
                    LightRevealScrimRepository lightRevealScrimRepository = (LightRevealScrimRepository) provider243.get();
                    provider244 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope28 = (CoroutineScope) provider244.get();
                    ScrimLogger scrimLogger = new ScrimLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideScrimLogBufferProvider.get());
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new LightRevealScrimInteractor(keyguardTransitionInteractor10, lightRevealScrimRepository, coroutineScope28, scrimLogger, DoubleCheck.lazy(delegateFactory48));
                case 1175:
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl4 = (KeyguardRepositoryImpl) delegateFactory49.get();
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new LightRevealScrimRepositoryImpl(keyguardRepositoryImpl4, context16, (PowerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerRepositoryImplProvider.get(), new ScrimLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideScrimLogBufferProvider.get()));
                case 1176:
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider);
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory50.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory51.get();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy4 = DoubleCheck.lazy(delegateFactory52);
                    Lazy lazy5 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider);
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider;
                    Lazy lazy6 = DoubleCheck.lazy(delegateFactory53);
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    Lazy lazy7 = DoubleCheck.lazy(delegateFactory54);
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    Lazy lazy8 = DoubleCheck.lazy(delegateFactory55);
                    provider245 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue4 = (CommandQueue) provider245.get();
                    provider246 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider;
                    ShadeAnimationInteractor shadeAnimationInteractor = (ShadeAnimationInteractor) provider246.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    Lazy lazy9 = DoubleCheck.lazy(delegateFactory56);
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    Lazy lazy10 = DoubleCheck.lazy(delegateFactory57);
                    provider247 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    ActivityTransitionAnimator activityTransitionAnimator = (ActivityTransitionAnimator) provider247.get();
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    displayId2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) delegateFactory58.get();
                    provider248 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl4 = (StatusBarWindowControllerImpl) provider248.get();
                    provider249 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle3 = (WakefulnessLifecycle) provider249.get();
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor4 = (KeyguardUpdateMonitor) delegateFactory59.get();
                    provider250 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController2 = (DeviceProvisionedController) provider250.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory60.get();
                    provider251 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider;
                    ActivityIntentHelper activityIntentHelper = (ActivityIntentHelper) provider251.get();
                    provider252 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider252.get();
                    provider253 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor4 = (CommunalSceneInteractor) provider253.get();
                    provider254 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    return new LegacyActivityStarterInternalImpl(lazy3, keyguardStateController3, sysuiStatusBarStateController, lazy4, lazy5, lazy6, lazy7, lazy8, commandQueue4, shadeAnimationInteractor, lazy9, lazy10, activityTransitionAnimator, context17, displayId2, notificationLockscreenUserManager, statusBarWindowControllerImpl4, wakefulnessLifecycle3, keyguardUpdateMonitor4, deviceProvisionedController2, userTracker3, activityIntentHelper, delayableExecutor2, communalSceneInteractor4, (CommunalSettingsInteractor) provider254.get());
                case 1177:
                    return new HeadlessSystemUserModeImpl();
                case 1178:
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    Lazy lazy11 = DoubleCheck.lazy(delegateFactory61);
                    provider255 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker3 = (DisplayTracker) provider255.get();
                    provider256 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor3 = (Executor) provider256.get();
                    provider257 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor4 = (Executor) provider257.get();
                    KeyguardDisplayManager.DeviceStateHelper m1545$$Nest$mdeviceStateHelper = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1545$$Nest$mdeviceStateHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory62.get();
                    provider258 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider63;
                    return new KeyguardDisplayManager(context18, lazy11, displayTracker3, executor3, executor4, m1545$$Nest$mdeviceStateHelper, keyguardStateController4, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$60) provider258.get());
                case 1179:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$60(this);
                case 1180:
                    provider259 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider;
                    Optional optional2 = (Optional) provider259.get();
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return new ScreenOnCoordinator(optional2, (Handler) switchingProvider8.get());
                case 1181:
                    provider260 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider260.get();
                    provider261 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor11 = (KeyguardTransitionInteractor) provider261.get();
                    GlanceableHubToDreamingTransitionViewModel glanceableHubToDreamingTransitionViewModel = (GlanceableHubToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToDreamingTransitionViewModelProvider.get();
                    DreamingToGlanceableHubTransitionViewModel dreamingToGlanceableHubTransitionViewModel = (DreamingToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToGlanceableHubTransitionViewModelProvider.get();
                    provider262 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider;
                    DreamingToLockscreenTransitionViewModel dreamingToLockscreenTransitionViewModel = (DreamingToLockscreenTransitionViewModel) provider262.get();
                    provider263 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromDreamingTransitionInteractorProvider;
                    FromDreamingTransitionInteractor fromDreamingTransitionInteractor = (FromDreamingTransitionInteractor) provider263.get();
                    provider264 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor4 = (CommunalInteractor) provider264.get();
                    delegateFactory63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor5 = (KeyguardUpdateMonitor) delegateFactory63.get();
                    delegateFactory64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory64.get();
                    provider265 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new DreamViewModel(configurationInteractor, keyguardTransitionInteractor11, glanceableHubToDreamingTransitionViewModel, dreamingToGlanceableHubTransitionViewModel, dreamingToLockscreenTransitionViewModel, fromDreamingTransitionInteractor, communalInteractor4, keyguardUpdateMonitor5, userTracker4, (DumpManager) provider265.get());
                case 1182:
                    provider266 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl8 = (KeyguardTransitionRepositoryImpl) provider266.get();
                    provider267 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor7 = (InternalKeyguardTransitionInteractor) provider267.get();
                    provider268 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor12 = (KeyguardTransitionInteractor) provider268.get();
                    provider269 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope29 = (CoroutineScope) provider269.get();
                    provider270 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher17 = (CoroutineDispatcher) provider270.get();
                    provider271 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher18 = (CoroutineDispatcher) provider271.get();
                    delegateFactory65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor8 = (KeyguardInteractor) delegateFactory65.get();
                    GlanceableHubTransitions m1559$$Nest$mglanceableHubTransitions2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1559$$Nest$mglanceableHubTransitions(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider272 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor5 = (CommunalInteractor) provider272.get();
                    provider273 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor5 = (CommunalSceneInteractor) provider273.get();
                    provider274 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    CommunalSettingsInteractor communalSettingsInteractor2 = (CommunalSettingsInteractor) provider274.get();
                    delegateFactory66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor8 = (PowerInteractor) delegateFactory66.get();
                    provider275 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    KeyguardOcclusionInteractor keyguardOcclusionInteractor4 = (KeyguardOcclusionInteractor) provider275.get();
                    DreamManager dreamManager = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamManager();
                    delegateFactory67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new FromDreamingTransitionInteractor(keyguardTransitionRepositoryImpl8, internalKeyguardTransitionInteractor7, keyguardTransitionInteractor12, coroutineScope29, coroutineDispatcher17, coroutineDispatcher18, keyguardInteractor8, m1559$$Nest$mglanceableHubTransitions2, communalInteractor5, communalSceneInteractor5, communalSettingsInteractor2, powerInteractor8, keyguardOcclusionInteractor4, dreamManager, (DeviceEntryInteractor) delegateFactory67.get());
                case 1183:
                    provider276 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor5 = (Executor) provider276.get();
                    provider277 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider;
                    IActivityTaskManager iActivityTaskManager2 = (IActivityTaskManager) provider277.get();
                    delegateFactory68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    return new WindowManagerLockscreenVisibilityManager(executor5, iActivityTaskManager2, (KeyguardStateController) delegateFactory68.get(), (KeyguardSurfaceBehindParamsApplier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindParamsApplierProvider.get(), (KeyguardDismissTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissTransitionInteractorProvider.get());
                case 1184:
                    provider278 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor6 = (Executor) provider278.get();
                    delegateFactory69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    return new KeyguardSurfaceBehindParamsApplier(executor6, (StatusBarKeyguardViewManager) delegateFactory69.get(), (KeyguardSurfaceBehindInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindInteractorProvider.get());
                case 1185:
                    KeyguardSurfaceBehindRepositoryImpl keyguardSurfaceBehindRepositoryImpl = (KeyguardSurfaceBehindRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindRepositoryImplProvider.get();
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider279 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new KeyguardSurfaceBehindInteractor(keyguardSurfaceBehindRepositoryImpl, context19, (KeyguardTransitionInteractor) provider279.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inWindowLauncherUnlockAnimationInteractorProvider), (SwipeToDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeToDismissInteractorProvider.get(), (NotificationLaunchAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationInteractorProvider.get());
                case 1186:
                    provider280 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    KeyguardOcclusionInteractor keyguardOcclusionInteractor5 = (KeyguardOcclusionInteractor) provider280.get();
                    provider281 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    ActivityTransitionAnimator activityTransitionAnimator2 = (ActivityTransitionAnimator) provider281.get();
                    delegateFactory70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    Lazy lazy12 = DoubleCheck.lazy(delegateFactory70);
                    delegateFactory71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider282 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) provider282.get();
                    provider283 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor7 = (Executor) provider283.get();
                    provider284 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider;
                    provider285 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    return new WindowManagerOcclusionManager(keyguardOcclusionInteractor5, activityTransitionAnimator2, lazy12, context20, interactionJankMonitor, executor7);
                case 1187:
                    provider286 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor13 = (KeyguardTransitionInteractor) provider286.get();
                    provider287 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider;
                    KeyguardOcclusionInteractor keyguardOcclusionInteractor6 = (KeyguardOcclusionInteractor) provider287.get();
                    delegateFactory72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new StatusBarKeyguardViewManagerInteractor(keyguardTransitionInteractor13, keyguardOcclusionInteractor6, (PowerInteractor) delegateFactory72.get(), (WindowManagerLockscreenVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityInteractorProvider.get(), (KeyguardSurfaceBehindInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindInteractorProvider.get());
                case 1188:
                    delegateFactory73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor9 = (KeyguardInteractor) delegateFactory73.get();
                    provider288 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl9 = (KeyguardTransitionRepositoryImpl) provider288.get();
                    provider289 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor14 = (KeyguardTransitionInteractor) provider289.get();
                    KeyguardSurfaceBehindInteractor keyguardSurfaceBehindInteractor = (KeyguardSurfaceBehindInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindInteractorProvider.get();
                    FromLockscreenTransitionInteractor fromLockscreenTransitionInteractor2 = (FromLockscreenTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromLockscreenTransitionInteractorProvider.get();
                    FromPrimaryBouncerTransitionInteractor fromPrimaryBouncerTransitionInteractor2 = (FromPrimaryBouncerTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromPrimaryBouncerTransitionInteractorProvider.get();
                    FromAlternateBouncerTransitionInteractor fromAlternateBouncerTransitionInteractor2 = (FromAlternateBouncerTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fromAlternateBouncerTransitionInteractorProvider.get();
                    NotificationLaunchAnimationInteractor notificationLaunchAnimationInteractor = (NotificationLaunchAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationInteractorProvider.get();
                    delegateFactory74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    DoubleCheck.lazy(delegateFactory74);
                    delegateFactory75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new WindowManagerLockscreenVisibilityInteractor(keyguardInteractor9, keyguardTransitionRepositoryImpl9, keyguardTransitionInteractor14, keyguardSurfaceBehindInteractor, fromLockscreenTransitionInteractor2, fromPrimaryBouncerTransitionInteractor2, fromAlternateBouncerTransitionInteractor2, notificationLaunchAnimationInteractor, DoubleCheck.lazy(delegateFactory75), (KeyguardWakeDirectlyToGoneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardWakeDirectlyToGoneInteractorProvider.get());
                case 1189:
                    provider290 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry3 = (CommandRegistry) provider290.get();
                    provider291 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper2 = (VibratorHelper) provider291.get();
                    delegateFactory76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new UdfpsHapticsSimulator(commandRegistry3, vibratorHelper2);
                case 1190:
                    provider292 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    return new UdfpsShell((CommandRegistry) provider292.get());
                case 1191:
                    return BiometricsModule_ProvidesPluginExecutorFactory.providesPluginExecutor(ThreadFactoryImpl_Factory.newInstance());
                case 1192:
                    provider293 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesOverlapDetectorProvider;
                    return new SinglePointerTouchProcessor((OverlapDetector) provider293.get());
                case 1193:
                    return BiometricsModule_Companion_ProvidesOverlapDetectorFactory.providesOverlapDetector();
                case 1194:
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    return new UdfpsKeyguardAccessibilityDelegate(m977$$Nest$mmainResources2, (StatusBarKeyguardViewManager) delegateFactory77.get());
                case 1195:
                    DeviceEntryIconViewModel deviceEntryIconViewModel = (DeviceEntryIconViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryIconViewModelProvider.get();
                    provider294 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider294.get();
                    SystemUIDialogManager systemUIDialogManager = (SystemUIDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider.get();
                    provider295 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryIconLoggerProvider;
                    return new DeviceEntryUdfpsTouchOverlayViewModel(deviceEntryIconViewModel, alternateBouncerInteractor, systemUIDialogManager, (DeviceEntryIconLogger) provider295.get());
                case 1196:
                    provider296 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceEntryIconLogBufferProvider;
                    return new DeviceEntryIconLogger((LogBuffer) provider296.get());
                case 1197:
                    provider297 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideDeviceEntryIconLogBufferFactory.provideDeviceEntryIconLogBuffer((LogBufferFactory) provider297.get());
                case 1198:
                    delegateFactory78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    return new DefaultUdfpsTouchOverlayViewModel((ShadeInteractor) delegateFactory78.get(), (SystemUIDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider.get());
                case 1199:
                    provider298 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUdfpsLogBufferProvider;
                    return new UdfpsLogger((LogBuffer) provider298.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get12() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            DelegateFactory delegateFactory;
            Provider provider5;
            Provider provider6;
            Provider provider7;
            DelegateFactory delegateFactory2;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            SwitchingProvider switchingProvider2;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            ProximitySensor proximitySensor;
            ThresholdSensorImpl build;
            ThresholdSensorImpl build2;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1200:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider.get()).create(1000, "UdfpsLog");
                case 1201:
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider2.get();
                    com.android.systemui.display.data.repository.DeviceStateRepositoryImpl m1546$$Nest$mdeviceStateRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1546$$Nest$mdeviceStateRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    UdfpsOverlayInteractor udfpsOverlayInteractor = (UdfpsOverlayInteractor) provider4.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new LogContextInteractorImpl(coroutineScope, m1546$$Nest$mdeviceStateRepositoryImpl, keyguardTransitionInteractor, udfpsOverlayInteractor, DoubleCheck.lazy(delegateFactory));
                case 1202:
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider;
                    FingerprintPropertyRepository fingerprintPropertyRepository = (FingerprintPropertyRepository) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor = (DisplayStateInteractor) provider6.get();
                    PromptRepositoryImpl promptRepositoryImpl = (PromptRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptRepositoryImplProvider.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    return new PromptSelectorInteractorImpl(fingerprintPropertyRepository, displayStateInteractor, promptRepositoryImpl, (LockPatternUtils) provider7.get());
                case 1203:
                    FaceSettingsRepositoryImpl faceSettingsRepositoryImpl = (FaceSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceSettingsRepositoryImplProvider.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    return new PromptRepositoryImpl(faceSettingsRepositoryImpl, (AuthController) delegateFactory2.get());
                case 1204:
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new FaceSettingsRepositoryImpl(handler, (SecureSettings) switchingProvider2.get());
                case 1205:
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new CredentialViewModel((Context) switchingProvider3.get(), new PromptCredentialInteractor((CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (PromptRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptRepositoryImplProvider.get(), (CredentialInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCredentialInteractorProvider.get()));
                case 1206:
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context = (Context) switchingProvider4.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new CredentialInteractorImpl(context, lockPatternUtils, userManager, devicePolicyManager, (SystemClock) provider11.get());
                case 1207:
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor2 = (DisplayStateInteractor) provider12.get();
                    PromptSelectorInteractor promptSelectorInteractor = (PromptSelectorInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptSelectorInteractorImplProvider.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context2 = (Context) switchingProvider5.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    return new PromptViewModel(displayStateInteractor2, promptSelectorInteractor, context2, (UdfpsOverlayInteractor) provider13.get(), (BiometricStatusInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBiometricStatusInteractorProvider.get(), new UdfpsUtils(), new IconProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get());
                case 1208:
                    ActivityTaskManager activityTaskManager = (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get();
                    BiometricStatusRepositoryImpl biometricStatusRepositoryImpl = (BiometricStatusRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricStatusRepositoryImplProvider.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider;
                    return new BiometricStatusInteractorImpl(activityTaskManager, biometricStatusRepositoryImpl, (FingerprintPropertyRepository) provider14.get());
                case 1209:
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new BiometricStatusRepositoryImpl((CoroutineScope) provider15.get(), (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get());
                case 1210:
                    Handler handler2 = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    SecureSettings secureSettings = (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get();
                    ContentResolver contentResolver = (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get();
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get();
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider);
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new ActiveUnlockConfig(handler2, secureSettings, contentResolver, selectedUserInteractor, lazy, (DumpManager) provider16.get());
                case 1211:
                    return new FingerprintInteractiveToAuthProviderGoogle((CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 1212:
                    return new DozeTransitionListener();
                case 1213:
                    return new DreamOverlayCallbackController();
                case 1214:
                    return new FromGoneTransitionInteractor((KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), (InternalKeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (CommunalSceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider.get(), (KeyguardOcclusionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (KeyguardEnabledInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardEnabledInteractorProvider.get());
                case 1215:
                    return new DockAlignmentController((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWirelessChargerProvider.get());
                case 1216:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.postureDependentProximitySensorProvider);
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.proximitySensorImplProvider);
                    String[] stringArray = m977$$Nest$mmainResources.getStringArray(R.array.proximity_sensor_posture_mapping);
                    if (stringArray != null && stringArray.length != 0) {
                        for (String str : stringArray) {
                            if (!TextUtils.isEmpty(str)) {
                                proximitySensor = (ProximitySensor) lazy2.get();
                                Preconditions.checkNotNullFromProvides(proximitySensor);
                                return proximitySensor;
                            }
                        }
                    }
                    proximitySensor = (ProximitySensor) lazy3.get();
                    Preconditions.checkNotNullFromProvides(proximitySensor);
                    return proximitySensor;
                case 1217:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    ThresholdSensorImpl.BuilderFactory builderFactory = new ThresholdSensorImpl.BuilderFactory(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2), (AsyncSensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.asyncSensorManagerProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideExecutionProvider.get());
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new PostureDependentProximitySensor(SensorModule.createPostureToSensorMapping(builderFactory, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getStringArray(R.array.proximity_sensor_posture_mapping), R.dimen.proximity_sensor_threshold, R.dimen.proximity_sensor_threshold_latch), SensorModule.createPostureToSensorMapping(new ThresholdSensorImpl.BuilderFactory(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3), (AsyncSensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.asyncSensorManagerProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideExecutionProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3).getStringArray(R.array.proximity_sensor_secondary_posture_mapping), R.dimen.proximity_sensor_secondary_threshold, R.dimen.proximity_sensor_secondary_threshold_latch), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider.get(), (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get());
                case 1218:
                    return new AsyncSensorManager((SensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesSensorManagerProvider.get(), new ThreadFactoryImpl(), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get());
                case 1219:
                    SensorManager sensorManager = (SensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.providesSensorManagerProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4);
                    ThresholdSensorImpl.Builder builder = new ThresholdSensorImpl.Builder(m977$$Nest$mmainResources2, (AsyncSensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.asyncSensorManagerProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideExecutionProvider.get());
                    try {
                        Sensor findSensorByType = builder.findSensorByType(m977$$Nest$mmainResources2.getString(R.string.proximity_sensor_type), true);
                        if (findSensorByType != null) {
                            builder.mSensor = findSensorByType;
                            builder.mSensorSet = true;
                        }
                        try {
                            builder.setThresholdValue(m977$$Nest$mmainResources2.getFloat(R.dimen.proximity_sensor_threshold));
                        } catch (Resources.NotFoundException unused) {
                        }
                        builder.setThresholdLatchResourceId(R.dimen.proximity_sensor_threshold_latch);
                        build = builder.build();
                    } catch (IllegalStateException unused2) {
                        Sensor defaultSensor = sensorManager.getDefaultSensor(8, true);
                        builder.mSensor = defaultSensor;
                        builder.mSensorSet = true;
                        builder.setThresholdValue(defaultSensor != null ? defaultSensor.getMaximumRange() : 0.0f);
                        build = builder.build();
                    }
                    Resources m977$$Nest$mmainResources3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4);
                    ThresholdSensorImpl.Builder builder2 = new ThresholdSensorImpl.Builder(m977$$Nest$mmainResources3, (AsyncSensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.asyncSensorManagerProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideExecutionProvider.get());
                    try {
                        Sensor findSensorByType2 = builder2.findSensorByType(m977$$Nest$mmainResources3.getString(R.string.proximity_sensor_secondary_type), true);
                        if (findSensorByType2 != null) {
                            builder2.mSensor = findSensorByType2;
                            builder2.mSensorSet = true;
                        }
                        try {
                            builder2.setThresholdValue(m977$$Nest$mmainResources3.getFloat(R.dimen.proximity_sensor_secondary_threshold));
                        } catch (Resources.NotFoundException unused3) {
                        }
                        builder2.setThresholdLatchResourceId(R.dimen.proximity_sensor_secondary_threshold_latch);
                        build2 = builder2.build();
                    } catch (IllegalStateException unused4) {
                        builder2.mSensor = null;
                        builder2.mSensorSet = true;
                        builder2.setThresholdValue(0.0f);
                        build2 = builder2.build();
                    }
                    return new ProximitySensorImpl(build, build2, (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider.get());
                case 1220:
                    return new ActivityTaskManagerProxy();
                case 1221:
                    return new ControlsFavoritingActivity((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ControlsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 1222:
                    return new ControlsEditingActivity((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ControlsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (CustomIconCache) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.customIconCacheProvider.get());
                case 1223:
                    return new ControlsRequestDialog((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ControlsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ControlsListingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsListingControllerImplProvider.get());
                case 1224:
                    return new ControlsActivity((ControlsUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsUiControllerImplProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (ControlsSettingsDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsDialogManagerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get());
                case 1225:
                    return new ControlsSettingsDialogManagerImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get(), (ControlsSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsRepositoryImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 1226:
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new MediaProjectionAppSelectorActivity(daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, new AsyncActivityLauncher(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.context, (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.provideIActivityTaskManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.provideUiBackgroundExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.provideMainExecutorProvider.get()));
                case 1227:
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenCaptureDevicePolicyResolverProvider);
                    StatusBarManager statusBarManager = (StatusBarManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStatusBarManagerProvider.get();
                    KeyguardManager keyguardManager = (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get();
                    MediaProjectionMetricsLogger mediaProjectionMetricsLogger = (MediaProjectionMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionMetricsLoggerProvider.get();
                    Context context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context;
                    Resources resources = context3.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    return new MediaProjectionPermissionActivity(featureFlags, lazy4, statusBarManager, keyguardManager, mediaProjectionMetricsLogger, new ScreenCaptureDisabledDialogDelegate(context3, resources));
                case 1228:
                    return new LaunchNoteTaskActivity((NoteTaskController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskControllerProvider.get());
                case 1229:
                    return new LaunchNotesRoleSettingsTrampolineActivity((NoteTaskController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskControllerProvider.get());
                case 1230:
                    return new CreateNoteTaskShortcutActivity((RoleManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideRoleManagerProvider.get(), (ShortcutManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShortcutManagerProvider.get());
                case 1231:
                    return new WalletActivity((KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider.get());
                case 1232:
                    return new TunerActivity((DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl());
                case 1233:
                    return new ForegroundServicesDialog((MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get());
                case 1234:
                    return new WorkLockActivity((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get());
                case 1235:
                    return new BrightnessDialog(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1510$$Nest$mbrightnessSliderControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BrightnessController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider64.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (AccessibilityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityManagerWrapperProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 1236:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$61(this);
                case 1237:
                    return new UsbDebuggingActivity((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1238:
                    return new UsbDebuggingSecondaryUserActivity((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1239:
                    return new UsbPermissionActivity(new UsbAudioWarningDialogMessage());
                case 1240:
                    return new UsbConfirmActivity(new UsbAudioWarningDialogMessage());
                case 1241:
                    return new UsbAccessoryUriActivity((DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get());
                case 1242:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new CreateUserActivity(new UserCreator(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.context, (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.provideUserManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get()), new CreateUserDialogController(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1243:
                    return new PeopleSpaceActivity(new PeopleViewModel.Factory((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (PeopleTileRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleTileRepositoryImplProvider.get(), (PeopleWidgetRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleWidgetRepositoryImplProvider.get()));
                case 1244:
                    return new PeopleTileRepositoryImpl((PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get());
                case 1245:
                    return new PeopleWidgetRepositoryImpl((PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get());
                case 1246:
                    return new LongScreenshotActivity((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageExporter(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (LongScreenshotData) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.longScreenshotDataProvider.get(), (ActionIntentExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.actionIntentExecutorProvider.get());
                case 1247:
                    return new LongScreenshotData();
                case 1248:
                    return new ActionIntentExecutor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ActivityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityManagerWrapperProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (SystemUiProxyClient) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemUiProxyProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get());
                case 1249:
                    return new SystemUiProxyClient((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get());
                case 1250:
                    return new AppClipsTrampolineActivity((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (NoteTaskController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskControllerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 1251:
                    Object obj = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appClipsCrossProcessHelperProvider.get();
                    ImageExporter imageExporter = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageExporter();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new AppClipsActivity(new AppClipsViewModel.Factory((AppClipsCrossProcessHelper) obj, imageExporter, (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl7.provideIActivityTaskManagerProvider.get(), (AssistContentRequester) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistContentRequesterProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl7.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl7.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get()), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1252:
                    return new AppClipsCrossProcessHelper((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get());
                case 1253:
                    return new AssistContentRequester(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1254:
                    return new LaunchConversationActivity((NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBubblesManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1255:
                    return new SensorUseStartedActivity((IndividualSensorPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 1256:
                    return new EditWidgetsActivity((CommunalEditModeViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalEditModeViewModelProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (WidgetConfigurationController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider65.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalAppWidgetSection(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                case 1257:
                    return new CommunalEditModeViewModel((CommunalSceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalMediaHostProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CommunalMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalMetricsLoggerProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getString(R.string.launcher_overlayable_package));
                case 1258:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$62(this);
                case 1259:
                    return new SwitchToManagedProfileForCallActivity((TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get());
                case 1260:
                    return new KeyboardTouchpadTutorialActivity((KeyboardTouchpadTutorialViewModel.Factory.ViewModelFactoryAssistedProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewModelFactoryAssistedProvider.get(), Optional.of(ScreensProvider.INSTANCE), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputDeviceTutorialLogger());
                case 1261:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$63(this);
                case 1262:
                    return new TouchpadGesturesInteractor((SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputDeviceTutorialLogger());
                case 1263:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "InputDeviceTutorialLog");
                case 1264:
                    return new KeyboardTouchpadConnectionInteractor((KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get(), (TouchpadRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchpadRepositoryImplProvider.get());
                case 1265:
                    return new QSActivity((QuickSettingsContainerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsContainerViewModelProvider.get(), (GridLayoutSelectorViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gridLayoutSelectorViewModelProvider.get());
                case 1266:
                    Set ofPairOfGridLayoutTypeAndGridLayout = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOfPairOfGridLayoutTypeAndGridLayout();
                    ArrayList arrayList = new ArrayList(CollectionsKt__IterablesKt.collectionSizeOrDefault(ofPairOfGridLayoutTypeAndGridLayout, 10));
                    Iterator it = ofPairOfGridLayoutTypeAndGridLayout.iterator();
                    while (it.hasNext()) {
                        arrayList.add((GridLayoutType) ((Pair) it.next()).getFirst());
                    }
                    Set set = CollectionsKt.toSet(arrayList);
                    Preconditions.checkNotNullFromProvides(set);
                    return new GridLayoutSelectorViewModel(set, (GridLayoutTypeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gridLayoutTypeInteractorProvider.get());
                case 1267:
                    return new TouchpadTutorialActivity(new TouchpadTutorialViewModel.Factory((TouchpadGesturesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchpadGesturesInteractorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputDeviceTutorialLogger()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputDeviceTutorialLogger());
                case 1268:
                    return new ShortcutHelperActivity((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1675$$Nest$mshortcutHelperViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1269:
                    return new ShortcutHelperStateInteractor((DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), (ShortcutHelperStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shortcutHelperStateRepositoryProvider.get());
                case 1270:
                    return new ShortcutHelperStateRepository((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1271:
                    return new ShortcutHelperCategoriesInteractor((ShortcutHelperCategoriesRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shortcutHelperCategoriesRepositoryProvider.get());
                case 1272:
                    Context context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    CoroutineScope coroutineScope2 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get();
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new ShortcutHelperCategoriesRepository(context4, coroutineScope2, coroutineDispatcher, new SystemShortcutsSource(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8)), new MultitaskingShortcutsSource(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8)), new AppCategoriesShortcutsSource((WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8.provideWindowManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get()), new InputShortcutsSource(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8.provideWindowManagerProvider.get()), new CurrentAppShortcutsSource((WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl8.provideWindowManagerProvider.get()), (InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get(), (ShortcutHelperStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shortcutHelperStateRepositoryProvider.get());
                case 1273:
                    return new SystemUISecondaryUserService(new ProcessWrapper());
                case 1274:
                    return new HomeControlsDreamService((ControlsSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsRepositoryImplProvider.get(), (TaskFragmentComponent.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider66.get(), (HomeControlsComponentInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.homeControlsComponentInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1713$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new DreamServiceDelegateImpl(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDreamLogBufferProvider.get());
                case 1275:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$64(this);
                case 1276:
                    return new HomeControlsComponentInteractor((SelectedComponentRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedComponentRepositoryImplProvider.get(), (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (PackageChangeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeInteractorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamManager(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1277:
                    return new PackageChangeInteractor((PackageChangeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeRepositoryImplProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 1278:
                    return new TakeScreenshotService((UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (ScreenshotNotificationsController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider67.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (TakeScreenshotExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.takeScreenshotExecutorImplProvider.get());
                case 1279:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$65(this);
                case 1280:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$66 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$66 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$66) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider73.get();
                    Preconditions.checkNotNullFromProvides(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$66);
                    DisplayRepository displayRepository = (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get();
                    CoroutineScope coroutineScope3 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    PolicyRequestProcessor policyRequestProcessor = (PolicyRequestProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindScreenshotRequestProcessorProvider.get();
                    UiEventLogger uiEventLogger = (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get();
                    ScreenshotNotificationsController.Factory factory = (ScreenshotNotificationsController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider67.get();
                    ImageExporter imageExporter2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageExporter();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new TakeScreenshotExecutorImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$66, displayRepository, coroutineScope3, policyRequestProcessor, uiEventLogger, factory, new HeadlessScreenshotHandler(imageExporter2, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl9.provideMainExecutorProvider.get(), (ImageCaptureImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageCaptureImplProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl9.provideUserManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl9.provideUiEventLoggerProvider.get(), (ScreenshotNotificationsController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider67.get()));
                case 1281:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$66(this);
                case 1282:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$67(this);
                case 1283:
                    return new ScreenshotViewModel((AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get());
                case 1284:
                    return new ThumbnailObserverGoogle();
                case 1285:
                    return new ScreenshotSmartActions(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesScrnshtNotifSmartActionsProvider);
                case 1286:
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get();
                    Context context5 = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get();
                    Executor executor = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get();
                    Handler handler3 = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    deviceConfigProxy.getClass();
                    return android.provider.DeviceConfig.getBoolean("systemui", "enable_screenshot_notification_smart_actions", true) ? new ScreenshotNotificationSmartActionsProviderGoogle(context5, executor, handler3) : new ScreenshotNotificationSmartActionsProvider();
                case 1287:
                    return new ImageCaptureImpl((IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1288:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$68(this);
                case 1289:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$69(this);
                case 1290:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$70(this);
                case 1291:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$71(this);
                case 1292:
                    return new PackageLabelIconProviderImpl((PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get());
                case 1293:
                    return new ProfileFirstRunFileResourcesImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1294:
                    return new ProfileFirstRunSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1295:
                    return new ProfileTypeRepositoryImpl((UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1296:
                    return new ScreenshotSoundControllerImpl((ScreenshotSoundProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotSoundProviderImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1297:
                    return new ScreenshotSoundProviderImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1298:
                    return new Messages(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1299:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$72
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get13() {
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            Provider provider6;
            Provider provider7;
            Optional optional;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            DelegateFactory delegateFactory;
            Optional optional2;
            Provider provider8;
            Provider provider9;
            DelegateFactory delegateFactory2;
            Optional optional3;
            Provider provider10;
            Provider provider11;
            DelegateFactory delegateFactory3;
            Provider provider12;
            Provider provider13;
            DelegateFactory delegateFactory4;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            DelegateFactory delegateFactory5;
            DelegateFactory delegateFactory6;
            ShellTransitions shellTransitions;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            DelegateFactory delegateFactory7;
            DelegateFactory delegateFactory8;
            DelegateFactory delegateFactory9;
            Provider provider21;
            DelegateFactory delegateFactory10;
            Provider provider22;
            DelegateFactory delegateFactory11;
            Provider provider23;
            Provider provider24;
            Provider provider25;
            DelegateFactory delegateFactory12;
            Provider provider26;
            DelegateFactory delegateFactory13;
            Provider provider27;
            Provider provider28;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            Provider provider32;
            Context context;
            Provider provider33;
            Provider provider34;
            DelegateFactory delegateFactory14;
            Provider provider35;
            Provider provider36;
            DelegateFactory delegateFactory15;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            Provider provider40;
            Provider provider41;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider42;
            Provider provider43;
            DelegateFactory delegateFactory16;
            Provider provider44;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            Provider provider45;
            Provider provider46;
            DelegateFactory delegateFactory17;
            Provider provider47;
            Provider provider48;
            Context context2;
            DelegateFactory delegateFactory18;
            Provider provider49;
            Provider provider50;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            Provider provider51;
            Context context3;
            DelegateFactory delegateFactory19;
            DelegateFactory delegateFactory20;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider7;
            Provider provider52;
            Context context4;
            Context context5;
            DelegateFactory delegateFactory21;
            Provider provider53;
            DelegateFactory delegateFactory22;
            DelegateFactory delegateFactory23;
            DelegateFactory delegateFactory24;
            Provider provider54;
            Provider provider55;
            Context context6;
            Context context7;
            Provider provider56;
            Provider provider57;
            Provider provider58;
            Provider provider59;
            Provider provider60;
            Provider provider61;
            DelegateFactory delegateFactory25;
            Context context8;
            Provider provider62;
            Provider provider63;
            Provider provider64;
            GlobalSettingsImpl globalSettingsImpl;
            SwitchingProvider switchingProvider8;
            DelegateFactory delegateFactory26;
            DelegateFactory delegateFactory27;
            DelegateFactory delegateFactory28;
            DelegateFactory delegateFactory29;
            Provider provider65;
            Provider provider66;
            DelegateFactory delegateFactory30;
            Provider provider67;
            DelegateFactory delegateFactory31;
            Provider provider68;
            Provider provider69;
            Context context9;
            Provider provider70;
            Provider provider71;
            Context context10;
            Provider provider72;
            Provider provider73;
            Provider provider74;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider9;
            Provider provider75;
            Provider provider76;
            Provider provider77;
            Provider provider78;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider10;
            DelegateFactory delegateFactory32;
            Provider provider79;
            Provider provider80;
            DelegateFactory delegateFactory33;
            Context context11;
            Provider provider81;
            DelegateFactory delegateFactory34;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            DelegateFactory delegateFactory35;
            Context context12;
            Provider provider85;
            Provider provider86;
            Provider provider87;
            Provider provider88;
            Provider provider89;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            Provider provider96;
            Provider provider97;
            Provider provider98;
            Provider provider99;
            DelegateFactory delegateFactory36;
            NoOpStartable noOpStartable = NoOpStartable.INSTANCE;
            NoOpCoreStartable noOpCoreStartable = NoOpCoreStartable.INSTANCE;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1300:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 1301:
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context13 = (Context) switchingProvider.get();
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageCaptureImplProvider;
                    ImageCaptureImpl imageCaptureImpl = (ImageCaptureImpl) provider2.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindDisplayContentRepositoryProvider;
                    DisplayContentRepositoryImpl displayContentRepositoryImpl = (DisplayContentRepositoryImpl) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindCapturePolicyListProvider;
                    return ScreenshotPolicyModule_BindScreenshotRequestProcessorFactory.bindScreenshotRequestProcessor(context13, coroutineDispatcher, imageCaptureImpl, displayContentRepositoryImpl, provider4);
                case 1302:
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider;
                    IActivityTaskManager iActivityTaskManager = (IActivityTaskManager) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemUiProxyProvider;
                    SystemUiProxyClient systemUiProxyClient = (SystemUiProxyClient) provider6.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new DisplayContentRepositoryImpl(iActivityTaskManager, systemUiProxyClient, (CoroutineDispatcher) provider7.get());
                case 1303:
                    return ScreenshotPolicyModule_BindCapturePolicyListFactory.bindCapturePolicyList(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1642$$Nest$mprivateProfilePolicy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1719$$Nest$mworkProfilePolicy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1304:
                    optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    return new AppClipsScreenshotHelperService(optional);
                case 1305:
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context14 = (Context) switchingProvider2.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory.get();
                    optional2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    return new AppClipsService(context14, featureFlags, optional2, (DevicePolicyManager) provider8.get());
                case 1306:
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider9.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    return new ScreenshotProxyService(shadeExpansionStateManager, coroutineDispatcher2, (ActivityStarter) delegateFactory2.get());
                case 1307:
                    return new NoteTaskControllerUpdateService((NoteTaskController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskControllerProvider.get());
                case 1308:
                    optional3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    return new NoteTaskBubblesController.NoteTaskBubblesService(optional3);
                case 1309:
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.walletContextualSuggestionsControllerProvider;
                    WalletContextualSuggestionsController walletContextualSuggestionsController = (WalletContextualSuggestionsController) provider11.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new WalletContextualLocationsService(coroutineDispatcher3, walletContextualSuggestionsController, (FeatureFlags) delegateFactory3.get());
                case 1310:
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider12.get();
                    QuickAccessWalletController quickAccessWalletController = (QuickAccessWalletController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickAccessWalletControllerProvider.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider13.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new WalletContextualSuggestionsController(coroutineScope, quickAccessWalletController, broadcastDispatcher, (FeatureFlags) delegateFactory4.get());
                case 1311:
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    PluginManager pluginManager = (PluginManager) provider14.get();
                    DozeLog dozeLog = (DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    return new DozeService(daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, pluginManager, dozeLog, (Executor) provider15.get());
                case 1312:
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider16.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ImageWallpaper(delayableExecutor, (UserTracker) delegateFactory5.get());
                case 1313:
                    return SysUIConcurrencyModule_ProvideLongRunningDelayableExecutorFactory.provideLongRunningDelayableExecutor((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningLooperProvider.get());
                case 1314:
                    return SysUIConcurrencyModule_ProvideLongRunningLooperFactory.provideLongRunningLooper();
                case 1315:
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator = (KeyguardViewMediator) delegateFactory6.get();
                    KeyguardLifecyclesDispatcher keyguardLifecyclesDispatcher = (KeyguardLifecyclesDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardLifecyclesDispatcherProvider.get();
                    ScreenOnCoordinator screenOnCoordinator = (ScreenOnCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOnCoordinatorProvider.get();
                    shellTransitions = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setShellTransitions;
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker = (DisplayTracker) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityViewModelProvider;
                    WindowManagerLockscreenVisibilityViewModel windowManagerLockscreenVisibilityViewModel = (WindowManagerLockscreenVisibilityViewModel) provider18.get();
                    WindowManagerLockscreenVisibilityManager windowManagerLockscreenVisibilityManager = (WindowManagerLockscreenVisibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityManagerProvider.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindViewModelProvider;
                    KeyguardSurfaceBehindViewModel keyguardSurfaceBehindViewModel = (KeyguardSurfaceBehindViewModel) provider19.get();
                    KeyguardSurfaceBehindParamsApplier keyguardSurfaceBehindParamsApplier = (KeyguardSurfaceBehindParamsApplier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindParamsApplierProvider.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider20.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags2 = (FeatureFlags) delegateFactory7.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory8.get();
                    WindowManagerOcclusionManager windowManagerOcclusionManager = (WindowManagerOcclusionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerOcclusionManagerProvider.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    Lazy lazy = DoubleCheck.lazy(delegateFactory9);
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider21.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory10.get();
                    KeyguardEnabledInteractor keyguardEnabledInteractor = (KeyguardEnabledInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardEnabledInteractorProvider.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateCallbackStartableProvider;
                    Lazy lazy2 = DoubleCheck.lazy(provider22);
                    KeyguardWakeDirectlyToGoneInteractor keyguardWakeDirectlyToGoneInteractor = (KeyguardWakeDirectlyToGoneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardWakeDirectlyToGoneInteractorProvider.get();
                    KeyguardDismissInteractor keyguardDismissInteractor = (KeyguardDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissInteractorProvider.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new KeyguardService(keyguardViewMediator, keyguardLifecyclesDispatcher, screenOnCoordinator, shellTransitions, displayTracker, windowManagerLockscreenVisibilityViewModel, windowManagerLockscreenVisibilityManager, keyguardSurfaceBehindViewModel, keyguardSurfaceBehindParamsApplier, coroutineScope2, featureFlags2, powerInteractor, windowManagerOcclusionManager, lazy, executor, keyguardInteractor, keyguardEnabledInteractor, lazy2, keyguardWakeDirectlyToGoneInteractor, keyguardDismissInteractor, DoubleCheck.lazy(delegateFactory11), (KeyguardStateCallbackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateCallbackInteractorProvider.get());
                case 1316:
                    Looper provideMainLooper = GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper();
                    ScreenLifecycle screenLifecycle = (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get();
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    return new KeyguardLifecyclesDispatcher(provideMainLooper, screenLifecycle, (WakefulnessLifecycle) provider23.get());
                case 1317:
                    return new WindowManagerLockscreenVisibilityViewModel((WindowManagerLockscreenVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityInteractorProvider.get());
                case 1318:
                    return new KeyguardSurfaceBehindViewModel((KeyguardSurfaceBehindInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindInteractorProvider.get());
                case 1319:
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider25.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory12.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider26.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new KeyguardStateCallbackStartable(coroutineScope3, coroutineDispatcher4, sceneInteractor, selectedUserInteractor, (DeviceEntryInteractor) delegateFactory13.get(), (SimBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerInteractorProvider.get(), (TrustInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustInteractorProvider.get());
                case 1320:
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider28.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor2 = (SelectedUserInteractor) provider29.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider30.get();
                    TrustInteractor trustInteractor = (TrustInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustInteractorProvider.get();
                    SimBouncerInteractor simBouncerInteractor = (SimBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerInteractorProvider.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider;
                    DismissCallbackRegistry dismissCallbackRegistry = (DismissCallbackRegistry) provider31.get();
                    WindowManagerLockscreenVisibilityInteractor windowManagerLockscreenVisibilityInteractor = (WindowManagerLockscreenVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityInteractorProvider.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider;
                    return new KeyguardStateCallbackInteractor(coroutineScope4, coroutineDispatcher5, selectedUserInteractor2, keyguardTransitionInteractor, trustInteractor, simBouncerInteractor, dismissCallbackRegistry, windowManagerLockscreenVisibilityInteractor, (TrustManager) provider32.get());
                case 1321:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DreamOverlayLifecycleOwner dreamOverlayLifecycleOwner = new DreamOverlayLifecycleOwner();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider33.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider34.get();
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory3 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory4 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory5 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DreamOverlayStateController dreamOverlayStateController = (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory14.get();
                    ScrimManager m1660$$Nest$mscrimManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1660$$Nest$mscrimManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider35.get();
                    DreamModule$$ExternalSyntheticLambda0 dreamModule$$ExternalSyntheticLambda0 = new DreamModule$$ExternalSyntheticLambda0(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context);
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider36.get();
                    TouchInsetManager m1621$$Nest$mnamedTouchInsetManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1621$$Nest$mnamedTouchInsetManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    ComponentName m1610$$Nest$mnamedComponentName2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1610$$Nest$mnamedComponentName2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    ComponentName m1611$$Nest$mnamedComponentName3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1611$$Nest$mnamedComponentName3(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DreamOverlayCallbackController dreamOverlayCallbackController = (DreamOverlayCallbackController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayCallbackControllerProvider.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new DreamOverlayService(context, dreamOverlayLifecycleOwner, delayableExecutor2, viewCaptureAwareWindowManager, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory3, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory4, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory5, dreamOverlayStateController, keyguardUpdateMonitor, m1660$$Nest$mscrimManager, communalInteractor, dreamModule$$ExternalSyntheticLambda0, uiEventLogger, m1621$$Nest$mnamedTouchInsetManager, m1610$$Nest$mnamedComponentName2, m1611$$Nest$mnamedComponentName3, dreamOverlayCallbackController, (KeyguardInteractor) delegateFactory15.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureInteractor(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1618$$Nest$mnamedString3(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1322:
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor2 = (Executor) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    return new BouncerlessScrimController(executor2, (PowerManager) provider38.get());
                case 1323:
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    return new NotificationListenerWithPlugins((PluginManager) provider39.get());
                case 1324:
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider3.get();
                    DumpHandler m1549$$Nest$mdumpHandler = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1549$$Nest$mdumpHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider40.get();
                    LogBufferEulogizer logBufferEulogizer = (LogBufferEulogizer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferEulogizerProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new SystemUIService(handler, m1549$$Nest$mdumpHandler, broadcastDispatcher2, logBufferEulogizer, new LogBufferFreezer((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.dumpManagerProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainDelayableExecutorProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1506$$Nest$mbatteryStateNotifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UncaughtExceptionPreHandlerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.uncaughtExceptionPreHandlerManagerProvider.get());
                case 1325:
                    return new SystemUIAuxiliaryDumpService(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1549$$Nest$mdumpHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1326:
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider;
                    RecordingController recordingController = (RecordingController) provider41.get();
                    Executor executor3 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningExecutorProvider.get();
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider4.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider42.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager = (NotificationManager) provider43.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new RecordingService(recordingController, executor3, handler2, uiEventLogger2, notificationManager, (UserContextProvider) delegateFactory16.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get());
                case 1327:
                    return new ExecutorImpl((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningLooperProvider.get());
                case 1328:
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider;
                    RecordingController recordingController2 = (RecordingController) provider44.get();
                    Executor executor4 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningExecutorProvider.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider5.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger3 = (UiEventLogger) provider45.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager2 = (NotificationManager) provider46.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserContextProvider userContextProvider = (UserContextProvider) delegateFactory17.get();
                    KeyguardDismissUtil keyguardDismissUtil = (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider47.get();
                    PanelInteractor panelInteractor = (PanelInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelInteractorImplProvider.get();
                    TraceurMessageSender traceurMessageSender = (TraceurMessageSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.traceurMessageSenderProvider.get();
                    IssueRecordingState issueRecordingState = (IssueRecordingState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.issueRecordingStateProvider.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    return new IssueRecordingService(recordingController2, executor4, handler3, uiEventLogger3, notificationManager2, userContextProvider, keyguardDismissUtil, dialogTransitionAnimator, panelInteractor, traceurMessageSender, issueRecordingState, (IActivityManager) provider48.get());
                case 1329:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory18.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider;
                    ColumbusSettings columbusSettings = (ColumbusSettings) provider49.get();
                    ColumbusStructuredDataManager columbusStructuredDataManager = (ColumbusStructuredDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusStructuredDataManagerProvider.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger4 = (UiEventLogger) provider50.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler4 = (Handler) switchingProvider6.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    return new ColumbusTargetRequestService(context2, userTracker, columbusSettings, columbusStructuredDataManager, uiEventLogger4, handler4, (Looper) provider51.get());
                case 1330:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ColumbusSettings(context3, (UserTracker) delegateFactory19.get(), (ColumbusContentObserver.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider76.get());
                case 1331:
                    ContentResolverWrapper contentResolverWrapper = (ContentResolverWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contentResolverWrapperProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory20.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler5 = (Handler) switchingProvider7.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new ColumbusContentObserver.Factory(contentResolverWrapper, userTracker2, handler5, (Executor) provider52.get());
                case 1332:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new ContentResolverWrapper(context4);
                case 1333:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory21.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new ColumbusStructuredDataManager(context5, userTracker3, (Executor) provider53.get());
                case 1334:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    Context context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context;
                    Resources resources = context15.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    return new LowLightClockDreamService(new ChargingStatusProvider(context15, resources, (IBatteryStats) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideIBatteryStatsProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1594$$Nest$mlowLightClockAnimationProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (LowLightTransitionCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.lowLightTransitionCoordinatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1567$$Nest$miDisplay(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1335:
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory22.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator2 = (KeyguardViewMediator) delegateFactory23.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new LockscreenWallpaperDreamService(keyguardInteractor2, keyguardViewMediator2, (FeatureFlagsClassic) delegateFactory24.get());
                case 1336:
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider;
                    QSHost qSHost = (QSHost) provider54.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new LauncherTileService(qSHost, (Executor) provider55.get());
                case 1337:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new HealthService(context6, (HealthManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.healthManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 1338:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager = (AlarmManager) provider56.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new HealthManager(context7, alarmManager, broadcastDispatcher3, coroutineDispatcher6, (CoroutineScope) provider59.get());
                case 1339:
                    BatteryEventStateController batteryEventStateController = (BatteryEventStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batteryEventStateControllerProvider.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    BroadcastSender broadcastSender = (BroadcastSender) provider60.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider61.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new BatteryEventService(batteryEventStateController, broadcastSender, coroutineDispatcher7, (UserTracker) delegateFactory25.get());
                case 1340:
                    return new BatteryEventStateController((BatteryEventModuleProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batteryEventModuleProvider.get(), (EventSourceMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemEventDataSourceProvider.get());
                case 1341:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new BatteryEventModuleProvider(context8);
                case 1342:
                    HalDataSource halDataSource = (HalDataSource) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideHalDataSourceProvider.get();
                    SettingsDataSource settingsDataSource = (SettingsDataSource) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsDataSourceProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    FrameworkDataSource frameworkDataSource = new FrameworkDataSource(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.context, (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.providePowerManagerProvider.get());
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider62.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new SystemEventDataSource(halDataSource, settingsDataSource, frameworkDataSource, broadcastDispatcher4, coroutineDispatcher8, (CoroutineScope) provider64.get());
                case 1343:
                    return new HalDataSource(new GoogleBatteryManagerWrapperImpl());
                case 1344:
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider8.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new SettingsDataSource(globalSettingsImpl, secureSettings, (UserTracker) delegateFactory26.get());
                case 1345:
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService = (OverviewProxyService) delegateFactory27.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory28.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    return new OverviewProxyRecentsImpl(overviewProxyService, activityStarter, (KeyguardStateController) delegateFactory29.get());
                case 1346:
                    return new SmartActionsReceiver((ScreenshotSmartActions) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotSmartActionsProvider.get());
                case 1347:
                    MediaOutputDialogManager mediaOutputDialogManager = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaOutputDialogManager();
                    Context context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context;
                    return new MediaOutputDialogReceiver(mediaOutputDialogManager, new MediaOutputBroadcastDialogManager());
                case 1348:
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider;
                    return new PeopleSpaceWidgetPinnedReceiver((PeopleSpaceWidgetManager) provider65.get());
                case 1349:
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider;
                    return new PeopleSpaceWidgetProvider((PeopleSpaceWidgetManager) provider66.get());
                case 1350:
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory30.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new GuestResetOrExitSessionReceiver(userTracker4, (BroadcastDispatcher) provider67.get(), new GuestResetOrExitSessionReceiver.ExitSessionDialogFactory((SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$6) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider7.get()), new GuestResetOrExitSessionReceiver.ExitSessionDialogFactory((SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$7) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider8.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl)));
                case 1351:
                    return new HearingDevicesDialogReceiver((HearingDevicesDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hearingDevicesDialogManagerProvider.get());
                case 1352:
                    return new ExtraDimDialogReceiver((ExtraDimDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extraDimDialogManagerProvider.get());
                case 1353:
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new KeyboardShortcutsReceiver((FeatureFlags) delegateFactory31.get());
                case 1354:
                    return new HealthUpdateReceiver((HealthManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.healthManagerProvider.get());
                case 1355:
                    Dependency dependency = new Dependency();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    dependency.mDumpManager = (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.dumpManagerProvider.get();
                    dependency.mBroadcastDispatcher = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider);
                    dependency.mBluetoothController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothControllerImplProvider);
                    dependency.mKeyguardUpdateMonitor = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider);
                    dependency.mDeviceProvisionedController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider);
                    dependency.mPluginManager = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.providesPluginManagerProvider);
                    dependency.mAssistManager = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider);
                    dependency.mTunerService = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider);
                    dependency.mDarkIconDispatcher = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider);
                    dependency.mFragmentService = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider);
                    dependency.mVolumeDialogController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogControllerImplProvider);
                    dependency.mMetricsLogger = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.provideMetricsLoggerProvider);
                    dependency.mUiOffloadThread = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiOffloadThreadProvider);
                    dependency.mLightBarController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider);
                    dependency.mOverviewProxyService = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider);
                    dependency.mNavBarModeController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider);
                    dependency.mNavigationBarController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider);
                    dependency.mStatusBarStateController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider);
                    dependency.mNotificationMediaManager = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider);
                    dependency.mBgLooper = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider);
                    dependency.mTimeTickHandler = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideTimeTickHandlerProvider);
                    dependency.mSysUiStateFlagsContainer = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider);
                    dependency.mCommandQueue = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider);
                    dependency.mUiEventLogger = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.provideUiEventLoggerProvider);
                    dependency.mFeatureFlagsLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider);
                    dependency.mNotificationSectionsManagerLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionsManagerProvider);
                    dependency.mScreenOffAnimationController = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider);
                    dependency.mAmbientStateLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider);
                    dependency.mGroupMembershipManagerLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider);
                    dependency.mGroupExpansionManagerLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupExpansionManagerImplProvider);
                    dependency.mSystemUIDialogManagerLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider);
                    dependency.mDialogTransitionAnimatorLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider);
                    dependency.mUserTrackerLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider);
                    dependency.mStatusBarWindowControllerLazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider);
                    return dependency;
                case 1356:
                    return new UiOffloadThread();
                case 1357:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contextualEducationInteractorProvider);
                    return noOpCoreStartable;
                case 1358:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardTouchpadEduInteractorProvider);
                    return noOpCoreStartable;
                case 1359:
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new KeyboardTouchpadEduInteractor((CoroutineScope) provider68.get(), (ContextualEducationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contextualEducationInteractorProvider.get(), (UserInputDeviceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userInputDeviceRepositoryProvider.get(), Clock.systemUTC());
                case 1360:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contextualEduUiCoordinatorProvider);
                    return noOpCoreStartable;
                case 1361:
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider69.get();
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ContextualEduViewModel contextualEduViewModel = (ContextualEduViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contextualEduViewModelProvider.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    return new ContextualEduUiCoordinator(coroutineScope5, context9, contextualEduViewModel, (NotificationManager) provider70.get());
                case 1362:
                    return new ContextualEduViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (KeyboardTouchpadEduInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardTouchpadEduInteractorProvider.get());
                case 1363:
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    final CoroutineScope coroutineScope6 = (CoroutineScope) provider71.get();
                    final NotificationSettingsRepository notificationSettingsRepository = (NotificationSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationSettingsRepositoryProvider.get();
                    final VisualInterruptionDecisionLogger visualInterruptionDecisionLogger = new VisualInterruptionDecisionLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationInterruptLogBufferProvider.get());
                    return new CoreStartable() { // from class: com.android.systemui.statusbar.notification.data.NotificationSettingsRepositoryModule$provideCoreStartable$1

                        /* compiled from: go/retraceme 97024faaf470985feb378c0f604e66d2eca678dbbb151206fad2ab4525fd6f86 */
                        /* renamed from: com.android.systemui.statusbar.notification.data.NotificationSettingsRepositoryModule$provideCoreStartable$1$1, reason: invalid class name */
                        final class AnonymousClass1 extends SuspendLambda implements Function2 {
                            final /* synthetic */ VisualInterruptionDecisionLogger $logger;
                            final /* synthetic */ NotificationSettingsRepository $repository;
                            int label;

                            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                            public AnonymousClass1(NotificationSettingsRepository notificationSettingsRepository, VisualInterruptionDecisionLogger visualInterruptionDecisionLogger, Continuation continuation) {
                                super(2, continuation);
                                this.$repository = notificationSettingsRepository;
                                this.$logger = visualInterruptionDecisionLogger;
                            }

                            @Override // kotlin.coroutines.jvm.internal.BaseContinuationImpl
                            public final Continuation create(Object obj, Continuation continuation) {
                                return new AnonymousClass1(this.$repository, this.$logger, continuation);
                            }

                            @Override // kotlin.jvm.functions.Function2
                            public final Object invoke(Object obj, Object obj2) {
                                ((AnonymousClass1) create((CoroutineScope) obj, (Continuation) obj2)).invokeSuspend(Unit.INSTANCE);
                                return CoroutineSingletons.COROUTINE_SUSPENDED;
                            }

                            @Override // kotlin.coroutines.jvm.internal.BaseContinuationImpl
                            public final Object invokeSuspend(Object obj) {
                                CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
                                int i = this.label;
                                if (i != 0) {
                                    if (i != 1) {
                                        throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
                                    }
                                    throw AndroidLegacyPlatformTextInputServiceAdapter$startInput$2$1$1$$ExternalSyntheticOutline0.m(obj);
                                }
                                ResultKt.throwOnFailure(obj);
                                ReadonlyStateFlow readonlyStateFlow = this.$repository.isCooldownEnabled;
                                final VisualInterruptionDecisionLogger visualInterruptionDecisionLogger = this.$logger;
                                FlowCollector flowCollector = new FlowCollector() { // from class: com.android.systemui.statusbar.notification.data.NotificationSettingsRepositoryModule.provideCoreStartable.1.1.1
                                    @Override // kotlinx.coroutines.flow.FlowCollector
                                    public final Object emit(Object obj2, Continuation continuation) {
                                        VisualInterruptionDecisionLogger.this.logCooldownSetting(((Boolean) obj2).booleanValue());
                                        return Unit.INSTANCE;
                                    }
                                };
                                this.label = 1;
                                readonlyStateFlow.collect(flowCollector, this);
                                return coroutineSingletons;
                            }
                        }

                        @Override // com.android.systemui.CoreStartable
                        public final void start() {
                            BuildersKt.launch$default(CoroutineScope.this, null, null, new AnonymousClass1(notificationSettingsRepository, visualInterruptionDecisionLogger, null), 3);
                        }
                    };
                case 1364:
                    NotificationLogger notificationLogger = (NotificationLogger) ((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLegacyLoggerOptionalProvider.get()).orElse(null);
                    return notificationLogger != null ? notificationLogger : new com.android.systemui.NoOpCoreStartable();
                case 1365:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shortcutHelperActivityStarterProvider);
                    return noOpStartable;
                case 1366:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new ShortcutHelperActivityStarter(context10, (CoroutineScope) provider72.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1675$$Nest$mshortcutHelperViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1367:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shortcutHelperStateRepositoryProvider);
                    return noOpStartable;
                case 1368:
                    return new CoroutineScopeCoreStartable(Collections.emptySet());
                case 1369:
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new BroadcastDispatcherStartable((BroadcastDispatcher) provider73.get());
                case 1370:
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider74.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context17 = (Context) switchingProvider9.get();
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBiometricStatusInteractorProvider);
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    Lazy lazy4 = DoubleCheck.lazy(provider75);
                    Lazy lazy5 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySideFpsOverlayInteractorProvider);
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    Lazy lazy6 = DoubleCheck.lazy(provider76);
                    Lazy lazy7 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsProgressBarViewModelProvider);
                    Lazy lazy8 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsSensorInteractorProvider);
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    return new SideFpsOverlayViewBinder(coroutineScope7, context17, lazy3, lazy4, lazy5, lazy6, lazy7, lazy8, DoubleCheck.lazy(provider77));
                case 1371:
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider78.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context18 = (Context) switchingProvider10.get();
                    DeviceEntryFingerprintAuthRepository deviceEntryFingerprintAuthRepository = (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get();
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor2 = (SceneInteractor) delegateFactory32.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider79.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider80.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new DeviceEntrySideFpsOverlayInteractor(coroutineScope8, context18, deviceEntryFingerprintAuthRepository, sceneInteractor2, primaryBouncerInteractor, alternateBouncerInteractor, (KeyguardUpdateMonitor) delegateFactory33.get());
                case 1372:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    BiometricStatusInteractorImpl biometricStatusInteractorImpl = (BiometricStatusInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBiometricStatusInteractorProvider.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider;
                    DeviceEntryFingerprintAuthInteractor deviceEntryFingerprintAuthInteractor = (DeviceEntryFingerprintAuthInteractor) provider81.get();
                    SideFpsSensorInteractor sideFpsSensorInteractor = (SideFpsSensorInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsSensorInteractorProvider.get();
                    DozeServiceHost dozeServiceHost = (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor3 = (KeyguardInteractor) delegateFactory34.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor = (DisplayStateInteractor) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher9 = (CoroutineDispatcher) provider83.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider84.get();
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new SideFpsProgressBarViewModel(context11, biometricStatusInteractorImpl, deviceEntryFingerprintAuthInteractor, sideFpsSensorInteractor, dozeServiceHost, keyguardInteractor3, displayStateInteractor, coroutineDispatcher9, coroutineScope9, (PowerInteractor) delegateFactory35.get());
                case 1373:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider;
                    FingerprintPropertyRepository fingerprintPropertyRepository = (FingerprintPropertyRepository) provider85.get();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager = (WindowManager) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor2 = (DisplayStateInteractor) provider87.get();
                    Optional of = Optional.of((FingerprintInteractiveToAuthProviderGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFingerprintInteractiveToAuthProvider.get());
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    BiometricSettingsRepositoryImpl biometricSettingsRepositoryImpl = (BiometricSettingsRepositoryImpl) provider88.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new SideFpsSensorInteractor(context12, fingerprintPropertyRepository, windowManager, displayStateInteractor2, of, biometricSettingsRepositoryImpl, (KeyguardTransitionInteractor) provider89.get(), (SideFpsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsLoggerProvider.get());
                case 1374:
                    return new SideFpsLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBouncerLogProvider.get());
                case 1375:
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider90.get();
                    Lazy lazy9 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerWindowViewModelProvider);
                    Lazy lazy10 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerDependenciesProvider);
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    Lazy lazy11 = DoubleCheck.lazy(provider91);
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    return new AlternateBouncerViewBinder(coroutineScope10, lazy9, lazy10, lazy11, DoubleCheck.lazy(provider92));
                case 1376:
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor2 = (AlternateBouncerInteractor) provider93.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new AlternateBouncerWindowViewModel(alternateBouncerInteractor2, (KeyguardTransitionInteractor) provider94.get());
                case 1377:
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider95.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider;
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor = (InternalKeyguardTransitionInteractor) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    CommunalSettingsInteractor communalSettingsInteractor = (CommunalSettingsInteractor) provider97.get();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope11 = (CoroutineScope) provider98.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider99.get();
                    CommunalSceneTransitionRepository communalSceneTransitionRepository = (CommunalSceneTransitionRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneTransitionRepositoryProvider.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new CommunalSceneTransitionInteractor(keyguardTransitionInteractor2, internalKeyguardTransitionInteractor, communalSettingsInteractor, coroutineScope11, communalSceneInteractor, communalSceneTransitionRepository, (KeyguardInteractor) delegateFactory36.get());
                case 1378:
                    return new CommunalSceneTransitionRepository();
                case 1379:
                    return new CommunalLoggerStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CommunalSceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1380:
                    DockManager dockManager = (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get();
                    CommunalInteractor communalInteractor2 = (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get();
                    CommunalSettingsInteractor communalSettingsInteractor2 = (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get();
                    CommunalSceneInteractor communalSceneInteractor2 = (CommunalSceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider.get();
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get();
                    KeyguardInteractor keyguardInteractor4 = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    SystemSettingsImpl m1700$$Nest$msystemSettingsImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1700$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Optional optional4 = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider.get();
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get();
                    return new CommunalSceneStartable(dockManager, communalInteractor2, communalSettingsInteractor2, communalSceneInteractor2, keyguardTransitionInteractor3, keyguardInteractor4, m1700$$Nest$msystemSettingsImpl, optional4, notificationShadeWindowController, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1381:
                    return new CommunalDreamStartable((PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamManager(), (CommunalSceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1382:
                    return new CommunalAppWidgetHostStartable((CommunalAppWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalAppWidgetHostProvider.get(), (CommunalWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalWidgetHostProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get());
                case 1383:
                    return new CommunalBackupRestoreStartable((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), new Handler());
                case 1384:
                    return new CommunalOngoingContentStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (CommunalMediaRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalMediaRepositoryImplProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (CommunalSmartspaceRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSmartspaceRepositoryImplProvider.get());
                case 1385:
                    return new CommunalMetricsStartable((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (StatsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStatsManagerProvider.get(), (CommunalMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalMetricsLoggerProvider.get());
                case 1386:
                    ConfigurationController configurationController = (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get();
                    SetBuilder setBuilder = new SetBuilder(9);
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideRecentsProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenPinningRequestProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeUIProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerUIProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rearDisplayDialogControllerProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenDecorationsProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemActionsProvider.get());
                    setBuilder.add((ConfigurationController.ConfigurationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.toastUIProvider.get());
                    return new ConfigurationControllerStartable(configurationController, setBuilder.build());
                case 1387:
                    return new VolumeUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (VolumeDialogComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogComponentProvider.get(), (AudioRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioRepositoryProvider.get(), (AudioSharingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAudioSharingInteractorProvider.get());
                case 1388:
                    return new PowerUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (IVrManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIVrManagerProvider.get(), (PowerUI.WarningsUI) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerNotificationWarningsGoogleImplProvider.get(), (EnhancedEstimates) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.enhancedEstimatesGoogleImplProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureProvider));
                case 1389:
                    Context context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ActivityStarter activityStarter2 = (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get();
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get();
                    BroadcastSender broadcastSender2 = (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get();
                    UiEventLogger uiEventLogger5 = (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get();
                    GlobalSettingsImpl globalSettingsImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    Lazy lazy12 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider);
                    DialogTransitionAnimator dialogTransitionAnimator2 = (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get();
                    EnhancedEstimates enhancedEstimates = (EnhancedEstimates) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.enhancedEstimatesGoogleImplProvider.get();
                    UserTracker userTracker5 = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new PowerNotificationWarningsGoogleImpl(context19, activityStarter2, broadcastDispatcher5, broadcastSender2, uiEventLogger5, globalSettingsImpl2, lazy12, dialogTransitionAnimator2, enhancedEstimates, userTracker5, new BatteryEventClient(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.context, (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.applicationScopeProvider.get()), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batterySaverConfirmationDialogProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.severeLowBatteryNotificationProvider, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 1390:
                    Context context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ActivityStarter activityStarter3 = (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get();
                    return new BatterySaverConfirmationDialog(context20, activityStarter3, (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 1391:
                    return new SevereLowBatteryNotification(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get());
                case 1392:
                    CommandQueue commandQueue = (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get();
                    Executor executor5 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get();
                    Resources resources2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources2);
                    return new RearDisplayDialogController(commandQueue, executor5, resources2, (LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 1393:
                    return new ScreenDecorations(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (PrivacyDotViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDotViewControllerProvider.get(), new ThreadFactoryImpl(), (PrivacyDotDecorProviderFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDotDecorProviderFactoryProvider.get(), (FaceScanningProviderFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceScanningProviderFactoryProvider.get(), (ScreenDecorationsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenDecorationsLoggerProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), new CameraProtectionLoaderImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (ViewCaptureAwareWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider.get());
                case 1394:
                    return new PrivacyDotViewController((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get(), (StatusBarContentInsetsProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarContentInsetsProvider.get(), (SystemStatusAnimationSchedulerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemStatusAnimationSchedulerProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 1395:
                    return new PrivacyDotDecorProviderFactory(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 1396:
                    return new FaceScanningProviderFactory((AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ScreenDecorationsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenDecorationsLoggerProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get());
                case 1397:
                    return new ScreenDecorationsLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideScreenDecorationsLogProvider.get());
                case 1398:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(200, "ScreenDecorationsLog");
                case 1399:
                    return new ToastUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), INotificationManager.Stub.asInterface(ServiceManager.getService("notification")), IAccessibilityManager.Stub.asInterface(ServiceManager.getService("accessibility")), (ToastFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.toastFactoryProvider.get(), new ToastLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideToastLogBufferProvider.get()));
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get14() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            DelegateFactory delegateFactory;
            DelegateFactory delegateFactory2;
            Provider provider4;
            Context context;
            Provider provider5;
            SwitchingProvider switchingProvider;
            SwitchingProvider switchingProvider2;
            Provider provider6;
            Provider provider7;
            Provider provider8;
            Provider provider9;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            SwitchingProvider switchingProvider4;
            Provider provider14;
            DelegateFactory delegateFactory3;
            Provider provider15;
            Provider provider16;
            Context context2;
            Provider provider17;
            Provider provider18;
            Context context3;
            DelegateFactory delegateFactory4;
            DelegateFactory delegateFactory5;
            Provider provider19;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Context context4;
            Provider provider24;
            DelegateFactory delegateFactory6;
            Provider provider25;
            Provider provider26;
            Context context5;
            SwitchingProvider switchingProvider5;
            Provider provider27;
            Provider provider28;
            Context overlayWindowContextContext;
            Provider provider29;
            Provider provider30;
            DelegateFactory delegateFactory7;
            Provider provider31;
            Provider provider32;
            Context context6;
            Provider provider33;
            DelegateFactory delegateFactory8;
            Provider provider34;
            Provider provider35;
            DelegateFactory delegateFactory9;
            Context context7;
            SwitchingProvider switchingProvider6;
            Provider provider36;
            Context context8;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            Provider provider40;
            DelegateFactory delegateFactory10;
            Provider provider41;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            Provider provider45;
            DelegateFactory delegateFactory11;
            Provider provider46;
            Context context9;
            DelegateFactory delegateFactory12;
            DelegateFactory delegateFactory13;
            Provider provider47;
            Provider provider48;
            Provider provider49;
            Provider provider50;
            Context context10;
            Provider provider51;
            SwitchingProvider switchingProvider7;
            SwitchingProvider switchingProvider8;
            Context context11;
            Context context12;
            Provider provider52;
            Provider provider53;
            Context context13;
            Context context14;
            Provider provider54;
            Provider provider55;
            Context context15;
            Provider provider56;
            Provider provider57;
            Provider provider58;
            Context context16;
            Provider provider59;
            SwitchingProvider switchingProvider9;
            Provider provider60;
            Provider provider61;
            Provider provider62;
            SwitchingProvider switchingProvider10;
            Provider provider63;
            Provider provider64;
            Provider provider65;
            DelegateFactory delegateFactory14;
            DelegateFactory delegateFactory15;
            Provider provider66;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            Provider provider71;
            Provider provider72;
            Provider provider73;
            Provider provider74;
            Provider provider75;
            Context context17;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider11;
            Provider provider76;
            Provider provider77;
            Provider provider78;
            DelegateFactory delegateFactory16;
            DelegateFactory delegateFactory17;
            SwitchingProvider switchingProvider12;
            Provider provider79;
            Provider provider80;
            Provider provider81;
            Provider provider82;
            Provider provider83;
            Context context18;
            Provider provider84;
            Provider provider85;
            Context context19;
            Optional optional;
            Optional optional2;
            Optional optional3;
            Optional optional4;
            Provider provider86;
            Provider provider87;
            DelegateFactory delegateFactory18;
            DelegateFactory delegateFactory19;
            DelegateFactory delegateFactory20;
            Provider provider88;
            DelegateFactory delegateFactory21;
            Provider provider89;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            Context context20;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            Provider provider96;
            Provider provider97;
            DelegateFactory delegateFactory22;
            Provider provider98;
            Provider provider99;
            Context context21;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            Provider provider103;
            Provider provider104;
            Provider provider105;
            Provider provider106;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider13;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Provider provider110;
            Provider provider111;
            Provider provider112;
            Context context22;
            Provider provider113;
            Provider provider114;
            Provider provider115;
            Provider provider116;
            DelegateFactory delegateFactory23;
            Context context23;
            Provider provider117;
            Provider provider118;
            SwitchingProvider switchingProvider14;
            Provider provider119;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            DelegateFactory delegateFactory24;
            Provider provider123;
            Context context24;
            Provider provider124;
            Provider provider125;
            Provider provider126;
            Provider provider127;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider15;
            Provider provider128;
            Provider provider129;
            Provider provider130;
            SwitchingProvider switchingProvider16;
            Provider provider131;
            Provider provider132;
            Provider provider133;
            Context context25;
            Provider provider134;
            Provider provider135;
            Provider provider136;
            Provider provider137;
            Context context26;
            Provider provider138;
            Provider provider139;
            Provider provider140;
            DelegateFactory delegateFactory25;
            Provider provider141;
            Provider provider142;
            Provider provider143;
            Provider provider144;
            Provider provider145;
            Provider provider146;
            Provider provider147;
            SwitchingProvider switchingProvider17;
            DelegateFactory delegateFactory26;
            Provider provider148;
            Provider provider149;
            Provider provider150;
            DelegateFactory delegateFactory27;
            Provider provider151;
            Provider provider152;
            DelegateFactory delegateFactory28;
            DelegateFactory delegateFactory29;
            Provider provider153;
            DelegateFactory delegateFactory30;
            Provider provider154;
            Provider provider155;
            Provider provider156;
            Provider provider157;
            Context context27;
            Provider provider158;
            Provider provider159;
            Provider provider160;
            Provider provider161;
            Provider provider162;
            Provider provider163;
            Provider provider164;
            Context unused;
            Context unused2;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1400:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideToastLogBufferFactory.provideToastLogBuffer((LogBufferFactory) provider.get());
                case 1401:
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    return new FalsingCoreStartable((FalsingCollector) provider2.get());
                case 1402:
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider3.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new FeatureFlagsReleaseStartable(dumpManager, (FeatureFlags) delegateFactory.get());
                case 1403:
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) delegateFactory2.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flagDependenciesNotifierProvider;
                    return new FlagDependencies(featureFlagsClassic, (FlagDependenciesNotifier) provider4.get());
                case 1404:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    return new FlagDependenciesNotifier(context, (NotificationManager) provider5.get());
                case 1405:
                    return new MotionToolStartable(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1534$$Nest$mddmHandleMotionTool(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1406:
                    FragmentService fragmentService = (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get();
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFragmentLegacyProvider;
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFragmentComposeProvider;
                    return new QSFragmentStartable(fragmentService, switchingProvider, switchingProvider2);
                case 1407:
                    return new QSFragmentLegacy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSImplProvider, new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1408:
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider77;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$74 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$74 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$74) provider6.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new QSFragmentCompose(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$74, (DumpManager) provider7.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQuickQSMediaHostProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQSMediaHostProvider.get());
                case 1409:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$74(this);
                case 1410:
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigRepositoryProvider;
                    CarrierConfigRepository carrierConfigRepository = (CarrierConfigRepository) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new CarrierConfigCoreStartable(carrierConfigRepository, (CoroutineScope) provider9.get());
                case 1411:
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Lazy lazy = DoubleCheck.lazy(switchingProvider3);
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    Lazy lazy2 = DoubleCheck.lazy(provider10);
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    Lazy lazy3 = DoubleCheck.lazy(provider11);
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    Lazy lazy4 = DoubleCheck.lazy(provider12);
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    Lazy lazy5 = DoubleCheck.lazy(provider13);
                    Lazy lazy6 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider);
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.adapterProvider;
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    Lazy lazy7 = DoubleCheck.lazy(provider14);
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    Lazy lazy8 = DoubleCheck.lazy(delegateFactory3);
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    Lazy lazy9 = DoubleCheck.lazy(provider15);
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherViewModelProvider;
                    return new UserSwitcherDialogCoordinator(lazy, lazy2, lazy3, lazy4, lazy5, lazy6, switchingProvider4, lazy7, lazy8, lazy9, DoubleCheck.lazy(provider16));
                case 1412:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    UserSwitcherController userSwitcherController = (UserSwitcherController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherControllerProvider.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    return new UserDetailView$Adapter(context2, userSwitcherController, uiEventLogger, (FalsingManager) provider18.get());
                case 1413:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory4.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory5.get();
                    Handler provideHandler = GlobalConcurrencyModule_ProvideHandlerFactory.provideHandler();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager = (NotificationManager) provider19.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricNotificationBroadcastReceiverProvider;
                    BiometricNotificationBroadcastReceiver biometricNotificationBroadcastReceiver = (BiometricNotificationBroadcastReceiver) provider20.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFingerprintReEnrollNotificationProvider;
                    Optional of = Optional.of((FingerprintReEnrollNotification) provider21.get());
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    FingerprintManager fingerprintManager = (FingerprintManager) provider22.get();
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider;
                    return new BiometricNotificationService(context3, keyguardUpdateMonitor, keyguardStateController, provideHandler, notificationManager, biometricNotificationBroadcastReceiver, of, fingerprintManager, (FaceManager) provider23.get());
                case 1414:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricNotificationDialogFactoryProvider;
                    return BiometricNotificationBroadcastReceiver_Factory.newInstance(context4, (BiometricNotificationDialogFactory) provider24.get());
                case 1415:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    SystemUIDialog.Factory factory = (SystemUIDialog.Factory) delegateFactory6.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider;
                    FingerprintManager fingerprintManager2 = (FingerprintManager) provider25.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider;
                    return BiometricNotificationDialogFactory_Factory.newInstance(m977$$Nest$mmainResources, factory, fingerprintManager2, (FaceManager) provider26.get());
                case 1416:
                    return SystemUIGoogleModule_ProvideFingerprintReEnrollNotificationFactory.provideFingerprintReEnrollNotification();
                case 1417:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.clipboardOverlayControllerProvider;
                    ClipboardToast m1516$$Nest$mclipboardToast = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1516$$Nest$mclipboardToast(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    UserScopedServiceImpl m978$$Nest$muserScopedServiceOfClipboardManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$muserScopedServiceOfClipboardManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider;
                    KeyguardManager keyguardManager = (KeyguardManager) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return ClipboardListener_Factory.newInstance(context5, switchingProvider5, m1516$$Nest$mclipboardToast, m978$$Nest$muserScopedServiceOfClipboardManager, keyguardManager, (UiEventLogger) provider28.get());
                case 1418:
                    overlayWindowContextContext = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayWindowContextContext();
                    ClipboardOverlayView m1514$$Nest$mclipboardOverlayView = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1514$$Nest$mclipboardOverlayView(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    ClipboardOverlayWindow m1515$$Nest$mclipboardOverlayWindow = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1515$$Nest$mclipboardOverlayWindow(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider29.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    BroadcastSender broadcastSender = (BroadcastSender) provider30.get();
                    TimeoutHandler timeoutHandler = new TimeoutHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context);
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    ClipboardOverlayUtils m1513$$Nest$mclipboardOverlayUtils = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1513$$Nest$mclipboardOverlayUtils(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor = (Executor) provider31.get();
                    ClipboardImageLoader m1512$$Nest$mclipboardImageLoader = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1512$$Nest$mclipboardImageLoader(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    ClipboardTransitionExecutor m1517$$Nest$mclipboardTransitionExecutor = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1517$$Nest$mclipboardTransitionExecutor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return ClipboardOverlayController_Factory.newInstance(overlayWindowContextContext, m1514$$Nest$mclipboardOverlayView, m1515$$Nest$mclipboardOverlayWindow, broadcastDispatcher, broadcastSender, timeoutHandler, m1513$$Nest$mclipboardOverlayUtils, executor, m1512$$Nest$mclipboardImageLoader, m1517$$Nest$mclipboardTransitionExecutor, (UiEventLogger) provider32.get());
                case 1419:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider33.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory8.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor2 = (Executor) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor3 = (Executor) provider35.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    return new InstantAppNotifier(context6, commandQueue, userTracker, executor2, executor3, (KeyguardStateController) delegateFactory9.get());
                case 1420:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Provider provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider;
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new KeyboardUI(context7, provider165, (SecureSettings) switchingProvider6.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1507$$Nest$mbluetoothDialogDelegate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1421:
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.taskSwitcherNotificationCoordinatorProvider;
                    return new MediaProjectionTaskSwitcherCoreStartable(DoubleCheck.lazy(provider36));
                case 1422:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager2 = (NotificationManager) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider38.get();
                    TaskSwitcherNotificationViewModel m1701$$Nest$mtaskSwitcherNotificationViewModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1701$$Nest$mtaskSwitcherNotificationViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new TaskSwitcherNotificationCoordinator(context8, notificationManager2, coroutineScope, m1701$$Nest$mtaskSwitcherNotificationViewModel, (BroadcastDispatcher) provider39.get());
                case 1423:
                    return new TaskSwitchInteractor((MediaProjectionManagerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionManagerRepositoryProvider.get(), (ActivityTaskManagerTasksRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityTaskManagerTasksRepositoryProvider.get());
                case 1424:
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider40.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory10.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    SessionTracker sessionTracker = (SessionTracker) provider41.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new KeyguardBiometricLockoutLogger(uiEventLogger2, keyguardUpdateMonitor2, sessionTracker, (SelectedUserInteractor) provider42.get());
                case 1425:
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider44.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider45.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor3 = (KeyguardUpdateMonitor) delegateFactory11.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new LatencyTester(broadcastDispatcher2, deviceConfigProxy, delayableExecutor, keyguardUpdateMonitor3, (SelectedUserInteractor) provider46.get());
                case 1426:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    com.android.systemui.display.data.repository.DeviceStateRepositoryImpl m1546$$Nest$mdeviceStateRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1546$$Nest$mdeviceStateRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory12.get();
                    UnfoldTransitionInteractor unfoldTransitionInteractor = (UnfoldTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unfoldTransitionInteractorProvider.get();
                    AnimationStatusRepositoryImpl m1502$$Nest$manimationStatusRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1502$$Nest$manimationStatusRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory13.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor4 = (Executor) provider47.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider48.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplaySwitchLatencyLoggerProvider;
                    DisplaySwitchLatencyLogger displaySwitchLatencyLogger = (DisplaySwitchLatencyLogger) provider49.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new DisplaySwitchLatencyTracker(context9, m1546$$Nest$mdeviceStateRepositoryImpl, powerInteractor, unfoldTransitionInteractor, m1502$$Nest$manimationStatusRepositoryImpl, keyguardInteractor, executor4, coroutineScope2, displaySwitchLatencyLogger, (SystemClock) provider50.get());
                case 1427:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider51.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider7.get();
                    Lazy lazy10 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureProvider);
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return new ImmersiveModeConfirmation(context10, commandQueue2, secureSettings, lazy10, (Handler) switchingProvider8.get());
                case 1428:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new RingtonePlayer(context11);
                case 1429:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gesturePointerEventDetectorProvider;
                    return new GesturePointerEventListener(context12, (GesturePointerEventDetector) provider52.get());
                case 1430:
                    unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new GesturePointerEventDetector();
                case 1431:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new ShortcutKeyDispatcher(context13);
                case 1432:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider54.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new SliceBroadcastRelayHandler(context14, broadcastDispatcher3, (Executor) provider55.get());
                case 1433:
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider56.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager3 = (NotificationManager) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStorageManagerProvider;
                    return new StorageNotification(context15, broadcastDispatcher4, notificationManager3, (StorageManager) provider58.get());
                case 1434:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) provider59.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler = (Handler) switchingProvider9.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor5 = (Executor) provider60.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor6 = (Executor) provider61.get();
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.themeOverlayApplierProvider;
                    ThemeOverlayApplier themeOverlayApplier = (ThemeOverlayApplier) provider62.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider10.get();
                    SystemPropertiesHelper systemPropertiesHelper = (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get();
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    WallpaperManager m979$$Nest$mwallpaperManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m979$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider64.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider65.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory14.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory15.get();
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider66.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter = (JavaAdapter) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiModeManagerProvider;
                    UiModeManager uiModeManager = (UiModeManager) provider69.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider;
                    ActivityManager activityManager = (ActivityManager) provider70.get();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    return new ThemeOverlayControllerGoogle(context16, broadcastDispatcher5, handler, executor5, executor6, themeOverlayApplier, secureSettings2, systemPropertiesHelper, m977$$Nest$mmainResources2, m979$$Nest$mwallpaperManager, userManager, dumpManager2, deviceProvisionedController, userTracker2, featureFlags, wakefulnessLifecycle, javaAdapter, keyguardTransitionInteractor, uiModeManager, activityManager, (ConfigurationController) provider71.get());
                case 1435:
                    OverlayManager overlayManager = (OverlayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideOverlayManagerProvider.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor7 = (Executor) provider72.get();
                    String m1619$$Nest$mnamedString4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1619$$Nest$mnamedString4(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    String m1620$$Nest$mnamedString5 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1620$$Nest$mnamedString5(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new ThemeOverlayApplier(overlayManager, executor7, m1619$$Nest$mnamedString4, m1620$$Nest$mnamedString5, dumpManager3, (Executor) provider74.get());
                case 1436:
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    return new MediaOutputSwitcherDialogUI((CommandQueue) provider75.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaOutputDialogManager());
                case 1437:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider11.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor8 = (Executor) provider76.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue3 = (CommandQueue) provider77.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modeSwitchesControllerProvider;
                    ModeSwitchesController modeSwitchesController = (ModeSwitchesController) provider78.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState = (SysUiState) delegateFactory16.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService = (OverviewProxyService) delegateFactory17.get();
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings3 = (SecureSettings) switchingProvider12.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker = (DisplayTracker) provider79.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager = (DisplayManager) provider80.get();
                    AccessibilityLogger m1490$$Nest$maccessibilityLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1490$$Nest$maccessibilityLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager = (IWindowManager) provider81.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    return new MagnificationImpl(context17, handler2, executor8, commandQueue3, modeSwitchesController, sysUiState, overviewProxyService, secureSettings3, displayTracker, displayManager, m1490$$Nest$maccessibilityLogger, iWindowManager, accessibilityManager, (ViewCaptureAwareWindowManager) provider83.get());
                case 1438:
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider;
                    DisplayManager displayManager2 = (DisplayManager) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    return new ModeSwitchesController(context18, displayManager2, (ViewCaptureAwareWindowManager) provider85.get());
                case 1439:
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInterface shellInterface = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setShell;
                    Optional optional5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setPip;
                    optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setSplitScreen;
                    optional2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOneHanded;
                    optional3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setDesktopMode;
                    optional4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setRecentTasks;
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue4 = (CommandQueue) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider87.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory18.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor4 = (KeyguardUpdateMonitor) delegateFactory19.get();
                    ScreenLifecycle screenLifecycle = (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState2 = (SysUiState) delegateFactory20.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle2 = (WakefulnessLifecycle) provider88.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory21.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    DisplayTracker displayTracker2 = (DisplayTracker) provider89.get();
                    NoteTaskInitializer m1627$$Nest$mnoteTaskInitializer = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1627$$Nest$mnoteTaskInitializer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    CommunalTransitionViewModel communalTransitionViewModel = (CommunalTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTransitionViewModelProvider.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter2 = (JavaAdapter) provider90.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new WMShell(context19, shellInterface, optional5, optional, optional2, optional3, optional4, commandQueue4, configurationController, keyguardStateController2, keyguardUpdateMonitor4, screenLifecycle, sysUiState2, wakefulnessLifecycle2, userTracker3, displayTracker2, m1627$$Nest$mnoteTaskInitializer, communalTransitionViewModel, javaAdapter2, (Executor) provider91.get());
                case 1440:
                    ChipbarCoordinator chipbarCoordinator = (ChipbarCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarCoordinatorProvider.get();
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue5 = (CommandQueue) provider92.get();
                    context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider93.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttSenderLoggerProvider;
                    MediaTttSenderLogger mediaTttSenderLogger = (MediaTttSenderLogger) provider94.get();
                    MediaTttFlags mediaTttFlags = (MediaTttFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttFlagsProvider.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttSenderUiEventLoggerProvider;
                    return new MediaTttSenderCoordinator(chipbarCoordinator, commandQueue5, context20, dumpManager4, mediaTttSenderLogger, mediaTttFlags, (MediaTttSenderUiEventLogger) provider95.get());
                case 1441:
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaTttSenderLogBufferProvider;
                    return new MediaTttSenderLogger((LogBuffer) provider96.get());
                case 1442:
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return MediaModule_ProvideMediaTttSenderLogBufferFactory.provideMediaTttSenderLogBuffer((LogBufferFactory) provider97.get());
                case 1443:
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new MediaTttFlags((FeatureFlags) delegateFactory22.get());
                case 1444:
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new MediaTttSenderUiEventLogger((UiEventLogger) provider98.get());
                case 1445:
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue6 = (CommandQueue) provider99.get();
                    context21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttReceiverLoggerProvider;
                    MediaTttReceiverLogger mediaTttReceiverLogger = (MediaTttReceiverLogger) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider101.get();
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider102.get();
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager2 = (AccessibilityManager) provider103.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController2 = (ConfigurationController) provider104.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager5 = (DumpManager) provider105.get();
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider106.get();
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider13.get();
                    MediaTttFlags mediaTttFlags2 = (MediaTttFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttFlagsProvider.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttReceiverUiEventLoggerProvider;
                    MediaTttReceiverUiEventLogger mediaTttReceiverUiEventLogger = (MediaTttReceiverUiEventLogger) provider107.get();
                    ViewUtil viewUtil = (ViewUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewUtilProvider.get();
                    WakeLock.Builder m1713$$Nest$mwakeLockBuilder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1713$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new MediaTttChipControllerReceiver(commandQueue6, context21, mediaTttReceiverLogger, viewCaptureAwareWindowManager, delayableExecutor2, accessibilityManager2, configurationController2, dumpManager5, powerManager, handler3, mediaTttFlags2, mediaTttReceiverUiEventLogger, viewUtil, m1713$$Nest$mwakeLockBuilder, (SystemClock) provider108.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1604$$Nest$mmediaTttReceiverRippleController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (TemporaryViewUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.temporaryViewUiEventLoggerProvider.get());
                case 1446:
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaTttReceiverLogBufferProvider;
                    return new MediaTttReceiverLogger((LogBuffer) provider109.get());
                case 1447:
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return MediaModule_ProvideMediaTttReceiverLogBufferFactory.provideMediaTttReceiverLogBuffer((LogBufferFactory) provider110.get());
                case 1448:
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new MediaTttReceiverUiEventLogger((UiEventLogger) provider111.get());
                case 1449:
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry = (CommandRegistry) provider112.get();
                    context22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new MediaTttCommandLineHelper(commandRegistry, context22, (Executor) provider113.get());
                case 1450:
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stylusManagerProvider;
                    StylusManager stylusManager = (StylusManager) provider114.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    InputManager inputManager = (InputManager) provider115.get();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stylusUsiPowerUIProvider;
                    StylusUsiPowerUI stylusUsiPowerUI = (StylusUsiPowerUI) provider116.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new StylusUsiPowerStartable(stylusManager, inputManager, stylusUsiPowerUI, (FeatureFlags) delegateFactory23.get());
                case 1451:
                    context23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerCompatProvider;
                    NotificationManagerCompat notificationManagerCompat = (NotificationManagerCompat) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    InputManager inputManager2 = (InputManager) provider118.get();
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler4 = (Handler) switchingProvider14.get();
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new StylusUsiPowerUI(context23, notificationManagerCompat, inputManager2, handler4, (UiEventLogger) provider119.get());
                case 1452:
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardBacklightDialogCoordinatorProvider;
                    Lazy lazy11 = DoubleCheck.lazy(provider120);
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stickyKeysIndicatorCoordinatorProvider;
                    Lazy lazy12 = DoubleCheck.lazy(provider121);
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardDockingIndicationViewBinderProvider;
                    Lazy lazy13 = DoubleCheck.lazy(provider122);
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new PhysicalKeyboardCoreStartable(lazy11, lazy12, lazy13, (FeatureFlags) delegateFactory24.get());
                case 1453:
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider123.get();
                    context24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backlightDialogViewModelProvider;
                    return new KeyboardBacklightDialogCoordinator(coroutineScope3, context24, (BacklightDialogViewModel) provider124.get());
                case 1454:
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardBacklightInteractorProvider;
                    return new BacklightDialogViewModel((KeyboardBacklightInteractor) provider125.get(), (AccessibilityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityManagerWrapperProvider.get());
                case 1455:
                    return new KeyboardBacklightInteractor((KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get());
                case 1456:
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider126.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stickyKeyDialogFactoryProvider;
                    return new StickyKeysIndicatorCoordinator(coroutineScope4, (StickyKeyDialogFactory) provider127.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1696$$Nest$mstickyKeysIndicatorViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new StickyKeysLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyboardLogBufferProvider.get()));
                case 1457:
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new StickyKeyDialogFactory((Context) switchingProvider15.get());
                case 1458:
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    InputManager inputManager3 = (InputManager) provider128.get();
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider129.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userAwareSecureSettingsRepositoryImplProvider;
                    return new StickyKeysRepositoryImpl(inputManager3, coroutineDispatcher, (UserAwareSecureSettingsRepositoryImpl) provider130.get(), new StickyKeysLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyboardLogBufferProvider.get()));
                case 1459:
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings4 = (SecureSettings) switchingProvider16.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider131.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new UserAwareSecureSettingsRepositoryImpl(secureSettings4, userRepositoryImpl, (CoroutineDispatcher) provider132.get());
                case 1460:
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyboardLogBufferFactory.provideKeyboardLogBuffer((LogBufferFactory) provider133.get());
                case 1461:
                    context25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider134.get();
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardDockingIndicationViewModelProvider;
                    KeyboardDockingIndicationViewModel keyboardDockingIndicationViewModel = (KeyboardDockingIndicationViewModel) provider135.get();
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    return new KeyboardDockingIndicationViewBinder(context25, coroutineScope5, keyboardDockingIndicationViewModel, (ViewCaptureAwareWindowManager) provider136.get());
                case 1462:
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager = (WindowManager) provider137.get();
                    context26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardDockingIndicationInteractorProvider;
                    KeyboardDockingIndicationInteractor keyboardDockingIndicationInteractor = (KeyboardDockingIndicationInteractor) provider138.get();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider139.get();
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new KeyboardDockingIndicationViewModel(windowManager, context26, keyboardDockingIndicationInteractor, configurationInteractor, (CoroutineScope) provider140.get());
                case 1463:
                    return new KeyboardDockingIndicationInteractor((KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get());
                case 1464:
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory25.get();
                    RingerModeTrackerImpl ringerModeTrackerImpl = (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get();
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager = (UserFileManager) provider141.get();
                    KeyguardQuickAffordanceRepository keyguardQuickAffordanceRepository = (KeyguardQuickAffordanceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceRepositoryProvider.get();
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider142.get();
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new MuteQuickAffordanceCoreStartable(userTracker4, ringerModeTrackerImpl, userFileManager, keyguardQuickAffordanceRepository, coroutineScope6, (CoroutineDispatcher) provider143.get());
                case 1465:
                    Monitor monitor = (Monitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemUserMonitorProvider.get();
                    DreamCondition m1547$$Nest$mdreamCondition = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1547$$Nest$mdreamCondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DreamStatusBarStateCallback m1548$$Nest$mdreamStatusBarStateCallback = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1548$$Nest$mdreamStatusBarStateCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.restartDozeListenerProvider;
                    return new DreamMonitor(monitor, m1547$$Nest$mdreamCondition, m1548$$Nest$mdreamStatusBarStateCallback, (RestartDozeListener) provider144.get());
                case 1466:
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor9 = (Executor) provider145.get();
                    SystemProcessCondition m1699$$Nest$msystemProcessCondition = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1699$$Nest$msystemProcessCondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMonitorTableLogBufferProvider;
                    return SystemUIModule_ProvideSystemUserMonitorFactory.provideSystemUserMonitor(executor9, m1699$$Nest$msystemProcessCondition, (TableLogBuffer) provider146.get());
                case 1467:
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return ((TableLogBufferFactory) provider147.get()).create(250, "MonitorLog");
                case 1468:
                    switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings5 = (SecureSettings) switchingProvider17.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory26.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager2 = (PowerManager) provider148.get();
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider149.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    return new RestartDozeListener(secureSettings5, statusBarStateController, powerManager2, systemClock, (DelayableExecutor) provider150.get());
                case 1469:
                    return new AssistantAttentionMonitor((Monitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemUserMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1504$$Nest$massistantAttentionCondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new AssistantAttentionCallback((DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get()));
                case 1470:
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory27.get();
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl = (StatusBarWindowControllerImpl) provider151.get();
                    ShadeViewController shadeViewController = (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSurfaceProvider.get();
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    PanelExpansionInteractor panelExpansionInteractor = (PanelExpansionInteractor) provider152.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory28.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory29.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider153.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) delegateFactory30.get();
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    return new StatusBarHeadsUpChangeListener(notificationShadeWindowController, statusBarWindowControllerImpl, shadeViewController, panelExpansionInteractor, notificationStackScrollLayoutController, keyguardBypassController, headsUpManager, statusBarStateController2, (NotificationRemoteInputManager) provider154.get());
                case 1471:
                    Lazy lazy14 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissActionInteractorProvider);
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new KeyguardDismissActionBinder(lazy14, (CoroutineScope) provider155.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1581$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1472:
                    KeyguardDismissInteractor keyguardDismissInteractor = (KeyguardDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissInteractorProvider.get();
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider156.get();
                    KeyguardViewMediator.AnonymousClass4 m1707$$Nest$mviewMediatorCallback = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1707$$Nest$mviewMediatorCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new KeyguardDismissBinder(keyguardDismissInteractor, selectedUserInteractor, m1707$$Nest$mviewMediatorCallback, (CoroutineScope) provider157.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1581$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1473:
                    context27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider158.get();
                    HomeControlsComponentInteractor homeControlsComponentInteractor = (HomeControlsComponentInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.homeControlsComponentInteractorProvider.get();
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new HomeControlsDreamStartable(context27, packageManager, homeControlsComponentInteractor, (CoroutineScope) provider159.get());
                case 1474:
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new BatteryControllerStartable();
                case 1475:
                    CoroutineScope coroutineScope7 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    Executor executor10 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get();
                    ControlsComponent controlsComponent = (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get();
                    UserTracker userTracker5 = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    AuthorizedPanelsRepositoryImpl m1505$$Nest$mauthorizedPanelsRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SelectedComponentRepositoryImpl selectedComponentRepositoryImpl = (SelectedComponentRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedComponentRepositoryImplProvider.get();
                    PackageChangeInteractor packageChangeInteractor = (PackageChangeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeInteractorProvider.get();
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager2 = (UserManager) provider163.get();
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new ControlsStartable(coroutineScope7, coroutineDispatcher2, executor10, controlsComponent, userTracker5, m1505$$Nest$mauthorizedPanelsRepositoryImpl, selectedComponentRepositoryImpl, packageChangeInteractor, userManager2, (BroadcastDispatcher) provider164.get());
                case 1476:
                    Context context28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Lazy lazy15 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.serviceConfigurationGoogleProvider);
                    UiEventLogger uiEventLogger3 = (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get();
                    Lazy lazy16 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideColumbusStarterProvider);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    Context context29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context;
                    SensorManager sensorManager = (SensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.providesSensorManagerProvider.get();
                    StatsManager statsManager = (StatsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideStatsManagerProvider.get();
                    DataLogger dataLogger = new DataLogger();
                    dataLogger.mDataQueue = new LinkedList();
                    dataLogger.mLastPullTimeNanos = 0L;
                    dataLogger.mStatsManager = statsManager;
                    return new GoogleServices(context28, lazy15, uiEventLogger3, lazy16, new AutorotateDataService(context29, sensorManager, dataLogger, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainDelayableExecutorProvider.get()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setShell);
                case 1477:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getClass();
                    SetBuilder setBuilder = new SetBuilder(11);
                    setBuilder.add(((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$75) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider78.get()).create(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.namedSetOfAction()));
                    setBuilder.add((Gate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakeModeProvider.get());
                    setBuilder.add((Gate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraVisibilityProvider.get());
                    setBuilder.add((Gate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chargingStateProvider.get());
                    setBuilder.add((Gate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.usbStateProvider.get());
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    setBuilder.add(new NavigationBarVisibility((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardVisibility(), new NonGesturalNavigation((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.namedSetOfAction()));
                    setBuilder.add(new TelephonyActivity((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get(), (TelephonyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideTelephonyManagerProvider.get(), (TelephonyListenerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider.get()));
                    setBuilder.add((Gate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setupWizardProvider.get());
                    Resources resources = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    DelayableExecutor delayableExecutor3 = (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainDelayableExecutorProvider.get();
                    Resources resources2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources2);
                    setBuilder.add(new SystemKeyPress(resources, delayableExecutor3, resources2.getInteger(R.integer.elmyra_system_key_gate_duration), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get()));
                    setBuilder.add(new PowerSaveState((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.providePowerManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get()));
                    setBuilder.add(new LockTask((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get()));
                    Set build = setBuilder.build();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getClass();
                    SetBuilder setBuilder2 = new SetBuilder(5);
                    Set namedSetOfAction = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.namedSetOfAction();
                    Preconditions.checkNotNullFromProvides(namedSetOfAction);
                    setBuilder2.addAll(namedSetOfAction);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    setBuilder2.add(new UnpinNotifications(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideMainExecutorProvider.get(), Optional.of((HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get())));
                    setBuilder2.add((Action) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraActionProvider.get());
                    setBuilder2.add((Action) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setupWizardActionProvider.get());
                    setBuilder2.add((Action) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOpaProvider.get());
                    return new ServiceConfigurationGoogle(build, setBuilder2.build(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1664$$Nest$msetOfFeedbackEffect(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (GestureSensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesGestureSensorProvider.get());
                case 1478:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$75(this);
                case 1479:
                    return new WakeMode(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 1480:
                    Context context30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Executor executor11 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get();
                    CameraAction cameraAction = (CameraAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraActionProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new CameraVisibility(context30, executor11, cameraAction, new PowerState((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.provideMainExecutorProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5.providePowerManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get()), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardVisibility(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.namedSetOfAction());
                case 1481:
                    return new CameraAction((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (AssistInvocationEffect) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInvocationEffectProvider.get());
                case 1482:
                    AssistManagerGoogle assistManagerGoogle = (AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get();
                    OpaHomeButton opaHomeButton = new OpaHomeButton((KeyguardViewMediator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider.get(), (CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get());
                    return new AssistInvocationEffect(assistManagerGoogle, opaHomeButton, new OpaLockscreen());
                case 1483:
                    return new ChargingState((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getInteger(R.integer.elmyra_charging_gate_duration));
                case 1484:
                    return new UsbState((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getInteger(R.integer.elmyra_usb_gate_duration));
                case 1485:
                    return new SetupWizard((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (SettingsAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsActionProvider.get());
                case 1486:
                    return new SettingsAction(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (LaunchOpa) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOpaProvider.get());
                case 1487:
                    return new LaunchOpa(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get(), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (AssistInvocationEffect) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInvocationEffectProvider.get());
                case 1488:
                    return new SetupWizardAction((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (SettingsAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsActionProvider.get(), (LaunchOpa) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOpaProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$75) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider78.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get());
                case 1489:
                    GestureSensor gestureSensor = JNIGestureSensor.isAvailable(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context) ? (GestureSensor) DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.jNIGestureSensorProvider).get() : (GestureSensor) DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cHREGestureSensorProvider).get();
                    Preconditions.checkNotNullFromProvides(gestureSensor);
                    return gestureSensor;
                case 1490:
                    return new JNIGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GestureConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureConfigurationProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get());
                case 1491:
                    Context context31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new GestureConfiguration(context31, Collections.singleton(new ScreenStateAdjustment(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.context, (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl6.providePowerManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get())));
                case 1492:
                    return new CHREGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GestureConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureConfigurationProvider.get(), (SnapshotConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.snapshotConfigurationProvider.get());
                case 1493:
                    return new SnapshotConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1494:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusStarterImplProvider);
                    Lazy lazy17 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusServiceWrapperProvider);
                    UnreleasedFlag unreleasedFlag = Flags.NULL_FLAG;
                    Object obj = lazy17.get();
                    Intrinsics.checkNotNull(obj);
                    return (ColumbusStarter) obj;
                case 1495:
                    return new ColumbusStarterImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusManagerProvider), (ColumbusSettingsFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsFetcherProvider.get());
                case 1496:
                    CoroutineScope coroutineScope8 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getClass();
                    ArrayList arrayList = new ArrayList(1);
                    EmptySet emptySet = EmptySet.INSTANCE;
                    Preconditions.checkNotNullFromProvides(emptySet);
                    EmptyIterator emptyIterator = EmptyIterator.INSTANCE;
                    arrayList.addAll(emptySet);
                    Set emptySet2 = arrayList.isEmpty() ? Collections.emptySet() : arrayList.size() == 1 ? Collections.singleton(arrayList.get(0)) : Collections.unmodifiableSet(new HashSet(arrayList));
                    List list = (List) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickTapActionsProvider.get();
                    ArrayList arrayList2 = new ArrayList(1);
                    Preconditions.checkNotNullFromProvides(emptySet);
                    arrayList2.addAll(emptySet);
                    return new ColumbusManager(coroutineScope8, coroutineDispatcher3, emptySet2, list, arrayList2.isEmpty() ? Collections.emptySet() : arrayList2.size() == 1 ? Collections.singleton(arrayList2.get(0)) : Collections.unmodifiableSet(new HashSet(arrayList2)), (WakeLock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickTapWakeLockProvider.get(), (GestureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureControllerProvider.get(), (GateFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gateFetcherProvider.get(), (ActionFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.actionFetcherProvider.get());
                case 1497:
                    EmptyList emptyList = EmptyList.INSTANCE;
                    Preconditions.checkNotNullFromProvides(emptyList);
                    return emptyList;
                case 1498:
                    return WakeLock.wrap(WakeLock.createWakeLockInner(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, "Columbus", 1), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakeLockLogger(), 2000L);
                case 1499:
                    CoroutineScope coroutineScope9 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    NoOpGestureSensor noOpGestureSensor = (NoOpGestureSensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGestureSensorProvider.get();
                    ArrayList arrayList3 = new ArrayList(1);
                    EmptySet emptySet3 = EmptySet.INSTANCE;
                    Preconditions.checkNotNullFromProvides(emptySet3);
                    EmptyIterator emptyIterator2 = EmptyIterator.INSTANCE;
                    arrayList3.addAll(emptySet3);
                    return new GestureController(coroutineScope9, noOpGestureSensor, arrayList3.isEmpty() ? Collections.emptySet() : arrayList3.size() == 1 ? Collections.singleton(arrayList3.get(0)) : Collections.unmodifiableSet(new HashSet(arrayList3)), (GateFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gateFetcherProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARN: Removed duplicated region for block: B:15:0x00a4  */
        /* JADX WARN: Removed duplicated region for block: B:18:0x00a7 A[SYNTHETIC] */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
            To view partially-correct add '--show-bad-code' argument
        */
        public java.lang.Object get15() {
            /*
                Method dump skipped, instructions count: 4876
                To view this dump add '--comments-level debug' option
            */
            throw new UnsupportedOperationException("Method not decompiled: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider.get15():java.lang.Object");
        }

        public Object get2() {
            Provider provider;
            Provider provider2;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            DelegateFactory delegateFactory;
            Provider provider3;
            Provider provider4;
            Context context;
            DelegateFactory delegateFactory2;
            Provider provider5;
            Provider provider6;
            DelegateFactory delegateFactory3;
            Provider provider7;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            GlobalSettingsImpl globalSettingsImpl;
            Provider provider14;
            Provider provider15;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            Provider provider16;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            DelegateFactory delegateFactory4;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            DelegateFactory delegateFactory5;
            Provider provider23;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            Provider provider24;
            Provider provider25;
            Provider provider26;
            Provider provider27;
            Provider provider28;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            Provider provider32;
            Provider provider33;
            Provider provider34;
            Provider provider35;
            Provider provider36;
            DelegateFactory delegateFactory6;
            SwitchingProvider switchingProvider4;
            Provider provider37;
            DelegateFactory delegateFactory7;
            Provider provider38;
            Provider provider39;
            Provider provider40;
            Provider provider41;
            DelegateFactory delegateFactory8;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            Provider provider45;
            Provider provider46;
            Provider provider47;
            DelegateFactory delegateFactory9;
            Provider provider48;
            DelegateFactory delegateFactory10;
            Provider provider49;
            Provider provider50;
            Provider provider51;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            Provider provider52;
            Provider provider53;
            Provider provider54;
            Provider provider55;
            Provider provider56;
            Provider provider57;
            Provider provider58;
            DelegateFactory delegateFactory11;
            Provider provider59;
            Provider provider60;
            Provider provider61;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            Provider provider62;
            Provider provider63;
            Provider provider64;
            Provider provider65;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider7;
            Provider provider66;
            Provider provider67;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider9;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            Provider provider71;
            DelegateFactory delegateFactory12;
            Provider provider72;
            Provider provider73;
            Provider provider74;
            Provider provider75;
            DelegateFactory delegateFactory13;
            Provider provider76;
            Context context2;
            DelegateFactory delegateFactory14;
            DelegateFactory delegateFactory15;
            DelegateFactory delegateFactory16;
            DelegateFactory delegateFactory17;
            Provider provider77;
            Provider provider78;
            Provider provider79;
            DelegateFactory delegateFactory18;
            Provider provider80;
            Provider provider81;
            Provider provider82;
            Provider provider83;
            DelegateFactory delegateFactory19;
            Provider provider84;
            DelegateFactory delegateFactory20;
            Provider provider85;
            GlobalSettingsImpl globalSettingsImpl2;
            Provider provider86;
            Provider provider87;
            DelegateFactory delegateFactory21;
            DelegateFactory delegateFactory22;
            DelegateFactory delegateFactory23;
            Provider provider88;
            SwitchingProvider switchingProvider10;
            Provider provider89;
            DelegateFactory delegateFactory24;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            DelegateFactory delegateFactory25;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            Provider provider96;
            DelegateFactory delegateFactory26;
            Provider provider97;
            DelegateFactory delegateFactory27;
            Provider provider98;
            Provider provider99;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            Provider provider103;
            Provider provider104;
            Provider provider105;
            DelegateFactory delegateFactory28;
            Provider provider106;
            Provider provider107;
            DelegateFactory delegateFactory29;
            DelegateFactory delegateFactory30;
            Provider provider108;
            Provider provider109;
            DelegateFactory delegateFactory31;
            Provider provider110;
            Provider provider111;
            Provider provider112;
            Provider provider113;
            Provider provider114;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider11;
            Provider provider115;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider12;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider13;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider14;
            SwitchingProvider switchingProvider15;
            Provider provider123;
            Provider provider124;
            Provider provider125;
            Provider provider126;
            DelegateFactory delegateFactory32;
            Provider provider127;
            Provider provider128;
            Provider provider129;
            Provider provider130;
            Context context3;
            Provider provider131;
            Provider provider132;
            Provider provider133;
            Provider provider134;
            Provider provider135;
            Provider provider136;
            Provider provider137;
            Provider provider138;
            DelegateFactory delegateFactory33;
            Provider provider139;
            Provider provider140;
            DelegateFactory delegateFactory34;
            LocalBluetoothAdapter localBluetoothAdapter;
            BluetoothAdapter defaultAdapter;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 200:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return DeviceEntryFaceAuthModule_Companion_ProvideFaceDetectTableLogFactory.provideFaceDetectTableLog((TableLogBufferFactory) provider.get());
                case 201:
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return DeviceEntryFaceAuthModule_Companion_ProvideFaceAuthTableLogFactory.provideFaceAuthTableLog((TableLogBufferFactory) provider2.get());
                case 202:
                    KeyguardBouncerRepositoryImpl keyguardBouncerRepositoryImpl = (KeyguardBouncerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBouncerRepositoryImplProvider.get();
                    BouncerViewImpl bouncerViewImpl = (BouncerViewImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerViewImplProvider.get();
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory.get();
                    KeyguardSecurityModel keyguardSecurityModel = (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get();
                    PrimaryBouncerCallbackInteractor primaryBouncerCallbackInteractor = (PrimaryBouncerCallbackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerCallbackInteractorProvider.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector = (FalsingCollector) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider;
                    DismissCallbackRegistry dismissCallbackRegistry = (DismissCallbackRegistry) provider4.get();
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory2.get();
                    TrustRepositoryImpl trustRepositoryImpl = (TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider6.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    return new PrimaryBouncerInteractor(keyguardBouncerRepositoryImpl, bouncerViewImpl, handler, keyguardStateController, keyguardSecurityModel, primaryBouncerCallbackInteractor, falsingCollector, dismissCallbackRegistry, context, keyguardUpdateMonitor, trustRepositoryImpl, coroutineScope, selectedUserInteractor, (DeviceEntryFaceAuthInteractor) delegateFactory3.get());
                case 203:
                    return new BouncerViewImpl();
                case 204:
                    return new PrimaryBouncerCallbackInteractor();
                case 205:
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider7.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider;
                    TrustManager trustManager = (TrustManager) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryLoggerProvider;
                    return new TrustRepositoryImpl(coroutineScope2, coroutineDispatcher, userRepositoryImpl, trustManager, (TrustRepositoryLogger) provider11.get());
                case 206:
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardUpdateMonitorLogBufferProvider;
                    return new TrustRepositoryLogger((LogBuffer) provider12.get());
                case 207:
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardUpdateMonitorLogBufferFactory.provideKeyguardUpdateMonitorLogBuffer((LogBufferFactory) provider13.get());
                case 208:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new FaceWakeUpTriggersConfigImpl(m977$$Nest$mmainResources, globalSettingsImpl, (DumpManager) provider14.get());
                case 209:
                    DeviceEntryFaceAuthRepositoryImpl deviceEntryFaceAuthRepositoryImpl = (DeviceEntryFaceAuthRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthRepositoryImplProvider.get();
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DeviceEntryFaceAuthStatusInteractor(deviceEntryFaceAuthRepositoryImpl, m977$$Nest$mmainResources2, (CoroutineScope) provider15.get());
                case 210:
                    return new NoopDeviceEntryFaceAuthInteractor();
                case 211:
                    return new SceneBackInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1656$$Nest$msceneLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SceneContainerConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.containerConfigProvider.get());
                case 212:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 213:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 214:
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context4 = (Context) switchingProvider2.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider16.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerRepositoryImplProvider;
                    SimBouncerRepositoryImpl simBouncerRepositoryImpl = (SimBouncerRepositoryImpl) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager = (TelephonyManager) provider19.get();
                    Resources m977$$Nest$mmainResources3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory4.get();
                    EuiccManager euiccManager = (EuiccManager) ((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get()).getSystemService("euicc");
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider;
                    return new SimBouncerInteractor(context4, coroutineScope3, coroutineDispatcher2, simBouncerRepositoryImpl, telephonyManager, m977$$Nest$mmainResources3, keyguardUpdateMonitor2, euiccManager, (MobileConnectionsRepository) provider20.get());
                case 215:
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider22.get();
                    Resources m977$$Nest$mmainResources4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor3 = (KeyguardUpdateMonitor) delegateFactory5.get();
                    SubscriptionManagerProxyImpl subscriptionManagerProxyImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.subscriptionManagerProxyImpl();
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new SimBouncerRepositoryImpl(coroutineScope4, coroutineDispatcher3, m977$$Nest$mmainResources4, keyguardUpdateMonitor3, subscriptionManagerProxyImpl, (BroadcastDispatcher) provider23.get(), (EuiccManager) ((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get()).getSystemService("euicc"));
                case 216:
                    return new UserSwitcherViewModel((UserSwitcherInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider.get(), (GuestUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestUserInteractorProvider.get());
                case 217:
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context5 = (Context) switchingProvider3.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider25.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider26.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl2 = (UserRepositoryImpl) provider28.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider29.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) provider30.get();
                    RefreshUsersScheduler refreshUsersScheduler = (RefreshUsersScheduler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.refreshUsersSchedulerProvider.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider31.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestResumeSessionReceiverProvider;
                    return new GuestUserInteractor(context5, coroutineScope5, coroutineDispatcher4, coroutineDispatcher5, userManager, userRepositoryImpl2, deviceProvisionedController, devicePolicyManager, refreshUsersScheduler, uiEventLogger, (GuestResumeSessionReceiver) provider32.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1562$$Nest$mguestResetOrExitSessionReceiver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 218:
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider33.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    return new RefreshUsersScheduler(coroutineScope6, coroutineDispatcher6, (UserRepositoryImpl) provider35.get());
                case 219:
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider36.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory6.get();
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new GuestResumeSessionReceiver(executor, userTracker, (SecureSettings) switchingProvider4.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1563$$Nest$mguestSessionNotification(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new GuestResetOrExitSessionReceiver.ExitSessionDialogFactory((SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$6) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider7.get()));
                case 220:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$6(this);
                case 221:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$7(this);
                case 222:
                    Resources m977$$Nest$mmainResources5 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider;
                    DeviceEntryFingerprintAuthInteractor deviceEntryFingerprintAuthInteractor = (DeviceEntryFingerprintAuthInteractor) provider37.get();
                    FingerprintPropertyInteractor fingerprintPropertyInteractor = (FingerprintPropertyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyInteractorProvider.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor = (DeviceEntryFaceAuthInteractor) delegateFactory7.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricSettingsInteractorProvider;
                    DeviceEntryBiometricSettingsInteractor deviceEntryBiometricSettingsInteractor = (DeviceEntryBiometricSettingsInteractor) provider38.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceHelpMessageDeferralInteractorProvider;
                    FaceHelpMessageDeferralInteractor faceHelpMessageDeferralInteractor = (FaceHelpMessageDeferralInteractor) provider39.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureInteractorProvider;
                    return new BiometricMessageInteractor(m977$$Nest$mmainResources5, deviceEntryFingerprintAuthInteractor, fingerprintPropertyInteractor, deviceEntryFaceAuthInteractor, deviceEntryBiometricSettingsInteractor, faceHelpMessageDeferralInteractor, (DevicePostureInteractor) provider40.get());
                case 223:
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider41.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor2 = (DeviceEntryFaceAuthInteractor) delegateFactory8.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricSettingsInteractorProvider;
                    return new FaceHelpMessageDeferralInteractor(coroutineScope7, deviceEntryFaceAuthInteractor2, (DeviceEntryBiometricSettingsInteractor) provider42.get(), (FaceHelpMessageDeferralFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceHelpMessageDeferralFactoryProvider.get());
                case 224:
                    Resources m977$$Nest$mmainResources6 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    LogBuffer logBuffer = (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBiometricLogBufferProvider.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new FaceHelpMessageDeferralFactory(m977$$Nest$mmainResources6, logBuffer, dumpManager, DoubleCheck.lazy(provider44));
                case 225:
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideBiometricLogBufferFactory.provideBiometricLogBuffer((LogBufferFactory) provider45.get());
                case 226:
                    return new DevicePostureInteractor((DevicePostureRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureRepositoryImplProvider.get());
                case 227:
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider46.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider;
                    AuthenticationInteractor authenticationInteractor = (AuthenticationInteractor) provider47.get();
                    DeviceEntryRepositoryImpl deviceEntryRepositoryImpl = (DeviceEntryRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryRepositoryImplProvider.get();
                    TrustInteractor trustInteractor = (TrustInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustInteractorProvider.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor3 = (DeviceEntryFaceAuthInteractor) delegateFactory9.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider;
                    DeviceEntryFingerprintAuthInteractor deviceEntryFingerprintAuthInteractor2 = (DeviceEntryFingerprintAuthInteractor) provider48.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory10.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricSettingsInteractorProvider;
                    DeviceEntryBiometricSettingsInteractor deviceEntryBiometricSettingsInteractor2 = (DeviceEntryBiometricSettingsInteractor) provider49.get();
                    SystemPropertiesHelper systemPropertiesHelper = (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new DeviceUnlockedInteractor(coroutineScope8, authenticationInteractor, deviceEntryRepositoryImpl, trustInteractor, deviceEntryFaceAuthInteractor3, deviceEntryFingerprintAuthInteractor2, powerInteractor, deviceEntryBiometricSettingsInteractor2, systemPropertiesHelper, (KeyguardTransitionInteractor) provider50.get());
                case 228:
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new TrustInteractor((CoroutineScope) provider51.get(), (TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get());
                case 229:
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context6 = (Context) switchingProvider5.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.emergencyServicesRepositoryProvider;
                    EmergencyServicesRepository emergencyServicesRepository = (EmergencyServicesRepository) provider53.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider;
                    MobileConnectionsRepository mobileConnectionsRepository = (MobileConnectionsRepository) provider54.get();
                    TelephonyInteractor telephonyInteractor = (TelephonyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyInteractorProvider.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider;
                    AuthenticationInteractor authenticationInteractor2 = (AuthenticationInteractor) provider55.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor2 = (SelectedUserInteractor) provider56.get();
                    ActivityTaskManager activityTaskManager = (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get();
                    TelecomManager telecomManager = (TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.emergencyAffordanceManagerProvider;
                    EmergencyAffordanceManager emergencyAffordanceManager = (EmergencyAffordanceManager) provider57.get();
                    BouncerInteractorModule$emergencyDialerIntentFactory$1 m1551$$Nest$memergencyDialerIntentFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1551$$Nest$memergencyDialerIntentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider58.get();
                    DozeLogger dozeLogger = new DozeLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDozeLogBufferProvider.get());
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new BouncerActionButtonInteractor(context6, coroutineDispatcher7, emergencyServicesRepository, mobileConnectionsRepository, telephonyInteractor, authenticationInteractor2, selectedUserInteractor2, activityTaskManager, telecomManager, emergencyAffordanceManager, m1551$$Nest$memergencyDialerIntentFactory, metricsLogger, dozeLogger, DoubleCheck.lazy(delegateFactory11));
                case 230:
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider59.get();
                    Resources m977$$Nest$mmainResources7 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider;
                    return new EmergencyServicesRepository(coroutineScope9, m977$$Nest$mmainResources7, (ConfigurationRepository) provider60.get());
                case 231:
                    return new TelephonyInteractor((TelephonyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyRepositoryImplProvider.get());
                case 232:
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider61.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context7 = (Context) switchingProvider6.get();
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider62.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider;
                    return new TelephonyRepositoryImpl(coroutineScope10, context7, coroutineDispatcher8, (TelephonyListenerManager) provider63.get(), (TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get());
                case 233:
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager2 = (TelephonyManager) provider64.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return TelephonyListenerManager_Factory.newInstance(telephonyManager2, (Executor) provider65.get(), TelephonyCallback_Factory.newInstance());
                case 234:
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return BouncerInteractorModule_EmergencyAffordanceManagerFactory.emergencyAffordanceManager((Context) switchingProvider7.get());
                case 235:
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideDozeLogBufferFactory.provideDozeLogBuffer((LogBufferFactory) provider66.get());
                case 236:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 237:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 238:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 239:
                    return new InputMethodInteractor((InputMethodRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputMethodRepositoryImplProvider.get());
                case 240:
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new InputMethodRepositoryImpl((CoroutineDispatcher) provider67.get(), (InputMethodManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputMethodManagerProvider.get());
                case 241:
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return MSDLModule_ProvideMSDLPlayerFactory.provideMSDLPlayer((Context) switchingProvider8.get());
                case 242:
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new Object((Context) switchingProvider9.get()) { // from class: com.android.systemui.bouncer.ui.BouncerViewModule$Companion$bouncerDialogFactory$1
                        public final /* synthetic */ Context $context;
                    };
                case 243:
                    return new CommunalScene((CommunalViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalViewModelProvider.get(), (CommunalColors) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalColorsImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1527$$Nest$mcommunalContent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 244:
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher9 = (CoroutineDispatcher) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope11 = (CoroutineScope) provider69.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope12 = (CoroutineScope) provider70.get();
                    Resources m977$$Nest$mmainResources8 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider71.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory12.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider;
                    KeyguardIndicationController keyguardIndicationController = (KeyguardIndicationController) provider72.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider74.get();
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    CommunalSettingsInteractor communalSettingsInteractor = (CommunalSettingsInteractor) provider75.get();
                    CommunalTutorialInteractor communalTutorialInteractor = (CommunalTutorialInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTutorialInteractorProvider.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory13.get();
                    MediaHost mediaHost = (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalMediaHostProvider.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    return new CommunalViewModel(coroutineDispatcher9, coroutineScope11, coroutineScope12, m977$$Nest$mmainResources8, keyguardTransitionInteractor, keyguardInteractor, keyguardIndicationController, communalSceneInteractor, communalInteractor, communalSettingsInteractor, communalTutorialInteractor, shadeInteractor, mediaHost, (LogBuffer) provider76.get(), (CommunalMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalMetricsLoggerProvider.get());
                case 245:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Looper provideMainLooper = GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper();
                    WakeLock.Builder m1713$$Nest$mwakeLockBuilder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1713$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory14.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory15.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor4 = (KeyguardUpdateMonitor) delegateFactory16.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockManager dockManager = (DockManager) delegateFactory17.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider77.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager2 = (DevicePolicyManager) provider78.get();
                    IBatteryStats iBatteryStats = (IBatteryStats) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIBatteryStatsProvider.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager2 = (UserManager) provider79.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService = (TunerService) delegateFactory18.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider80.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider81.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider83.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController = (AuthController) delegateFactory19.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider84.get();
                    ScreenLifecycle screenLifecycle = (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory20.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider85.get();
                    FaceHelpMessageDeferralFactory faceHelpMessageDeferralFactory = (FaceHelpMessageDeferralFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceHelpMessageDeferralFactoryProvider.get();
                    KeyguardLogger m1581$$Nest$mkeyguardLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1581$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    globalSettingsImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager = (AlarmManager) provider87.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory21.get();
                    BouncerMessageInteractor bouncerMessageInteractor = (BouncerMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageInteractorProvider.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory22.get();
                    IndicationHelper indicationHelper = (IndicationHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.indicationHelperProvider.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory23.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider88.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider10.get();
                    BiometricMessageInteractor biometricMessageInteractor = (BiometricMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricMessageInteractorProvider.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider;
                    DeviceEntryFingerprintAuthInteractor deviceEntryFingerprintAuthInteractor3 = (DeviceEntryFingerprintAuthInteractor) provider89.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    return new KeyguardIndicationControllerGoogle(context2, provideMainLooper, m1713$$Nest$mwakeLockBuilder, keyguardStateController2, statusBarStateController, keyguardUpdateMonitor4, dockManager, broadcastDispatcher, devicePolicyManager2, iBatteryStats, userManager2, tunerService, deviceConfigProxy, delayableExecutor, delayableExecutor2, falsingManager, authController, lockPatternUtils, screenLifecycle, keyguardBypassController, accessibilityManager, faceHelpMessageDeferralFactory, m1581$$Nest$mkeyguardLogger, globalSettingsImpl2, alternateBouncerInteractor, alarmManager, userTracker2, bouncerMessageInteractor, featureFlags, indicationHelper, keyguardInteractor2, systemClock, secureSettings, biometricMessageInteractor, deviceEntryFingerprintAuthInteractor3, (DeviceEntryFaceAuthInteractor) delegateFactory24.get());
                case 246:
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    return new ExecutorImpl((Looper) provider90.get());
                case 247:
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider91.get()).create(500, "KeyguardLog");
                case 248:
                    BouncerMessageRepositoryImpl bouncerMessageRepositoryImpl = (BouncerMessageRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageRepositoryImplProvider.get();
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl3 = (UserRepositoryImpl) provider92.get();
                    CountDownTimerUtil countDownTimerUtil = (CountDownTimerUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.countDownTimerUtilProvider.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor5 = (KeyguardUpdateMonitor) delegateFactory25.get();
                    TrustRepositoryImpl trustRepositoryImpl2 = (TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get();
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider;
                    BiometricSettingsRepositoryImpl biometricSettingsRepositoryImpl = (BiometricSettingsRepositoryImpl) provider93.get();
                    SystemPropertiesHelper systemPropertiesHelper2 = (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope13 = (CoroutineScope) provider95.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider;
                    return new BouncerMessageInteractor(bouncerMessageRepositoryImpl, userRepositoryImpl3, countDownTimerUtil, keyguardUpdateMonitor5, trustRepositoryImpl2, biometricSettingsRepositoryImpl, systemPropertiesHelper2, primaryBouncerInteractor, coroutineScope13, (FacePropertyRepositoryImpl) provider96.get(), (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get(), (DeviceEntryBiometricsAllowedInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricsAllowedInteractorProvider.get());
                case 249:
                    return new BouncerMessageRepositoryImpl();
                case 250:
                    return new CountDownTimerUtil();
                case 251:
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new IndicationHelper((KeyguardUpdateMonitor) delegateFactory26.get());
                case 252:
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope14 = (CoroutineScope) provider97.get();
                    CommunalSceneRepositoryImpl communalSceneRepositoryImpl = (CommunalSceneRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneRepositoryImplProvider.get();
                    CommunalSceneLogger communalSceneLogger = new CommunalSceneLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new CommunalSceneInteractor(coroutineScope14, communalSceneRepositoryImpl, communalSceneLogger, (SceneInteractor) delegateFactory27.get());
                case 253:
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope15 = (CoroutineScope) provider98.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new CommunalSceneRepositoryImpl(coroutineScope15, (CoroutineScope) provider99.get(), (SceneDataSource) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalSceneDataSourceDelegatorProvider.get());
                case 254:
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope16 = (CoroutineScope) provider100.get();
                    SceneKey sceneKey = CommunalScenes.Blank;
                    SceneKey sceneKey2 = CommunalScenes.Communal;
                    return new SceneDataSourceDelegator(coroutineScope16, new SceneContainerConfig(CollectionsKt__CollectionsKt.listOf(sceneKey, sceneKey2), sceneKey, EmptyList.INSTANCE, MapsKt.mapOf(new Pair(sceneKey, 0), new Pair(sceneKey2, 1))));
                case 255:
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider101.get()).create(250, "CommunalLog");
                case 256:
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope17 = (CoroutineScope) provider102.get();
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope18 = (CoroutineScope) provider103.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher10 = (CoroutineDispatcher) provider104.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider105.get();
                    CommunalWidgetRepositoryImpl communalWidgetRepositoryImpl = (CommunalWidgetRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalWidgetRepositoryImplProvider.get();
                    CommunalPrefsInteractor communalPrefsInteractor = (CommunalPrefsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalPrefsInteractorProvider.get();
                    CommunalMediaRepositoryImpl communalMediaRepositoryImpl = (CommunalMediaRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalMediaRepositoryImplProvider.get();
                    CommunalSmartspaceRepositoryImpl communalSmartspaceRepositoryImpl = (CommunalSmartspaceRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSmartspaceRepositoryImplProvider.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor3 = (KeyguardInteractor) delegateFactory28.get();
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider106.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    CommunalSettingsInteractor communalSettingsInteractor2 = (CommunalSettingsInteractor) provider107.get();
                    CommunalAppWidgetHost communalAppWidgetHost = (CommunalAppWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalAppWidgetHostProvider.get();
                    EditWidgetsActivityStarterImpl editWidgetsActivityStarterImpl = new EditWidgetsActivityStarterImpl((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory29.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory30.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager3 = (UserManager) provider108.get();
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor2 = (CommunalSceneInteractor) provider109.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory31.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    return new CommunalInteractor(coroutineScope17, coroutineScope18, coroutineDispatcher10, broadcastDispatcher2, communalWidgetRepositoryImpl, communalPrefsInteractor, communalMediaRepositoryImpl, communalSmartspaceRepositoryImpl, keyguardInteractor3, keyguardTransitionInteractor2, communalSettingsInteractor2, communalAppWidgetHost, editWidgetsActivityStarterImpl, userTracker3, activityStarter, userManager3, communalSceneInteractor2, sceneInteractor, (LogBuffer) provider110.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTableLogBufferProvider.get(), (ManagedProfileController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.managedProfileControllerImplProvider.get());
                case 257:
                    CommunalAppWidgetHost communalAppWidgetHost2 = (CommunalAppWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalAppWidgetHostProvider.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope19 = (CoroutineScope) provider111.get();
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher11 = (CoroutineDispatcher) provider112.get();
                    CommunalWidgetHost communalWidgetHost = (CommunalWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalWidgetHostProvider.get();
                    CommunalWidgetDao_Impl communalWidgetDao_Impl = (CommunalWidgetDao_Impl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalWidgetDaoProvider.get();
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    LogBuffer logBuffer2 = (LogBuffer) provider113.get();
                    BackupManager backupManager = (BackupManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackupManagerProvider.get();
                    CommunalBackupUtils communalBackupUtils = (CommunalBackupUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalBackupUtilsProvider.get();
                    PackageChangeRepository packageChangeRepository = (PackageChangeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeRepositoryImplProvider.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    return new CommunalWidgetRepositoryImpl(communalAppWidgetHost2, coroutineScope19, coroutineDispatcher11, communalWidgetHost, communalWidgetDao_Impl, logBuffer2, backupManager, communalBackupUtils, packageChangeRepository, (UserManager) provider114.get(), (DefaultWidgetPopulation) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultWidgetPopulationProvider.get());
                case 258:
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context8 = (Context) switchingProvider11.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope20 = (CoroutineScope) provider115.get();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    return new CommunalAppWidgetHost(context8, coroutineScope20, (LogBuffer) provider116.get());
                case 259:
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope21 = (CoroutineScope) provider117.get();
                    Optional optional = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAppWidgetManagerProvider.get();
                    CommunalAppWidgetHost communalAppWidgetHost3 = (CommunalAppWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalAppWidgetHostProvider.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor3 = (SelectedUserInteractor) provider118.get();
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    return new CommunalWidgetHost(coroutineScope21, optional, communalAppWidgetHost3, selectedUserInteractor3, (LogBuffer) provider119.get());
                case 260:
                    CommunalWidgetDao_Impl communalWidgetDao = ((CommunalDatabase) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalDatabaseProvider.get()).communalWidgetDao();
                    Preconditions.checkNotNullFromProvides(communalWidgetDao);
                    return communalWidgetDao;
                case 261:
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return CommunalDatabase.Companion.getInstance((Context) switchingProvider12.get(), (DefaultWidgetPopulation) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultWidgetPopulationProvider.get());
                case 262:
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope22 = (CoroutineScope) provider120.get();
                    CommunalWidgetHost communalWidgetHost2 = (CommunalWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalWidgetHostProvider.get();
                    DelegateFactory delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalWidgetDaoProvider;
                    String[] stringArray = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getStringArray(R.array.config_communalWidgetAllowlist);
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    LogBuffer logBuffer3 = (LogBuffer) provider121.get();
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    return new DefaultWidgetPopulation(coroutineScope22, communalWidgetHost2, delegateFactory35, stringArray, logBuffer3, (UserManager) provider122.get());
                case 263:
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new BackupManager((Context) switchingProvider13.get());
                case 264:
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new CommunalBackupUtils((Context) switchingProvider14.get());
                case 265:
                    return new PackageChangeRepositoryImpl((PackageInstallerMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageInstallerMonitorProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$11) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider14.get());
                case 266:
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider15.get();
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new PackageInstallerMonitor(handler2, (CoroutineScope) provider123.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePackageChangeRepoLogBufferProvider.get(), (PackageInstaller) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageInstallerProvider.get());
                case 267:
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider124.get()).create(50, "PackageChangeRepo");
                case 268:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$11(this);
                case 269:
                    return new PackageUpdateLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePackageChangeRepoLogBufferProvider.get());
                case 270:
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope23 = (CoroutineScope) provider125.get();
                    CommunalPrefsRepositoryImpl communalPrefsRepositoryImpl = (CommunalPrefsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalPrefsRepositoryImplProvider.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor4 = (SelectedUserInteractor) provider126.get();
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new CommunalPrefsInteractor(coroutineScope23, communalPrefsRepositoryImpl, selectedUserInteractor4, (UserTracker) delegateFactory32.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTableLogBufferProvider.get());
                case 271:
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher12 = (CoroutineDispatcher) provider127.get();
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager = (UserFileManager) provider128.get();
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider129.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    return new CommunalPrefsRepositoryImpl(coroutineDispatcher12, userFileManager, broadcastDispatcher3, (LogBuffer) provider130.get());
                case 272:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager4 = (UserManager) provider131.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider132.get();
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    return new UserFileManagerImpl(context3, userManager4, broadcastDispatcher4, (DelayableExecutor) provider133.get());
                case 273:
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return ((TableLogBufferFactory) provider134.get()).create(250, "CommunalTableLog");
                case 274:
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    return new CommunalMediaRepositoryImpl((MediaDataManager) provider135.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTableLogBufferProvider.get());
                case 275:
                    Object obj = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.legacyMediaDataManagerImplProvider.get();
                    Intrinsics.checkNotNull(obj);
                    return (MediaDataManager) obj;
                case 276:
                    Context context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ThreadFactoryImpl threadFactoryImpl = new ThreadFactoryImpl();
                    CoroutineDispatcher coroutineDispatcher13 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    Executor executor2 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get();
                    DelayableExecutor delayableExecutor3 = (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get();
                    CoroutineDispatcher coroutineDispatcher14 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    CoroutineScope coroutineScope24 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    MediaControllerFactory mediaControllerFactory = new MediaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context);
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider136.get();
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) provider137.get();
                    MediaTimeoutListener mediaTimeoutListener = (MediaTimeoutListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTimeoutListenerProvider.get();
                    MediaResumeListener mediaResumeListener = (MediaResumeListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaResumeListenerProvider.get();
                    Context context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context;
                    MediaSessionManager mediaSessionManager = (MediaSessionManager) context10.getSystemService(MediaSessionManager.class);
                    Preconditions.checkNotNullFromProvides(mediaSessionManager);
                    MediaSessionBasedFilter mediaSessionBasedFilter = new MediaSessionBasedFilter(context10, mediaSessionManager, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                    MediaDeviceManager m1603$$Nest$mmediaDeviceManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1603$$Nest$mmediaDeviceManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    MediaDataCombineLatest mediaDataCombineLatest = new MediaDataCombineLatest();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    LegacyMediaDataFilterImpl legacyMediaDataFilterImpl = new LegacyMediaDataFilterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (MediaUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get());
                    SmartspaceMediaDataProvider smartspaceMediaDataProvider = new SmartspaceMediaDataProvider();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock2 = (SystemClock) provider138.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService2 = (TunerService) delegateFactory33.get();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider;
                    MediaFlags mediaFlags = (MediaFlags) provider139.get();
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider;
                    MediaUiEventLogger mediaUiEventLogger = (MediaUiEventLogger) provider140.get();
                    SmartspaceManager smartspaceManager = (SmartspaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSmartspaceManagerProvider.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new LegacyMediaDataManagerImpl(context9, threadFactoryImpl, coroutineDispatcher13, executor2, delayableExecutor3, coroutineDispatcher14, coroutineScope24, mediaControllerFactory, dumpManager2, broadcastDispatcher5, mediaTimeoutListener, mediaResumeListener, mediaSessionBasedFilter, m1603$$Nest$mmediaDeviceManager, mediaDataCombineLatest, legacyMediaDataFilterImpl, smartspaceMediaDataProvider, systemClock2, tunerService2, mediaFlags, mediaUiEventLogger, smartspaceManager, (KeyguardUpdateMonitor) delegateFactory34.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataLoaderProvider), (MediaLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaLoggerProvider.get());
                case 277:
                    return new MediaTimeoutListener(new MediaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (MediaTimeoutLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTimeoutLoggerProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get());
                case 278:
                    return new MediaTimeoutLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaTimeoutListenerLogBufferProvider.get());
                case 279:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(100, "MediaTimeout");
                case 280:
                    return new MediaFlags((FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 281:
                    Context context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    BroadcastDispatcher broadcastDispatcher6 = (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get();
                    UserTracker userTracker4 = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    Executor executor3 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get();
                    Executor executor4 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get();
                    TunerService tunerService3 = (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get();
                    Context context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context;
                    return new MediaResumeListener(context11, broadcastDispatcher6, userTracker4, executor3, executor4, tunerService3, new ResumeMediaBrowserFactory(context12, new MediaBrowserFactory(context12), (ResumeMediaBrowserLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.resumeMediaBrowserLoggerProvider.get()), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get());
                case 282:
                    return new ResumeMediaBrowserLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaBrowserBufferProvider.get());
                case 283:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(100, "MediaBrowser");
                case 284:
                    Context context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Handler handler3 = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get();
                    UserHandle userHandle = UserHandle.ALL;
                    synchronized (LocalBluetoothAdapter.class) {
                        try {
                            if (LocalBluetoothAdapter.sInstance == null && (defaultAdapter = BluetoothAdapter.getDefaultAdapter()) != null) {
                                LocalBluetoothAdapter.sInstance = new LocalBluetoothAdapter(defaultAdapter);
                            }
                            localBluetoothAdapter = LocalBluetoothAdapter.sInstance;
                        } catch (Throwable th) {
                            throw th;
                        }
                    }
                    if (localBluetoothAdapter == null) {
                        return null;
                    }
                    return new LocalBluetoothManager(localBluetoothAdapter, context13, handler3, userHandle);
                case 285:
                    return new MediaMuteAwaitConnectionManagerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (MediaMuteAwaitLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaMuteAwaitLoggerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 286:
                    return new MediaMuteAwaitLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaMuteAwaitLogBufferProvider.get());
                case 287:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(20, "MediaMuteAwaitLog");
                case 288:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "MediaDeviceLog");
                case 289:
                    return new MediaUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 290:
                    Context context14 = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get();
                    return new MediaDataLoader(context14, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), new MediaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get(), (ImageLoader) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageLoaderProvider.get(), (StatusBarManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStatusBarManagerProvider.get());
                case 291:
                    return new ImageLoader((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 292:
                    return new MediaLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaLogBufferProvider.get());
                case 293:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(20, "MediaLog");
                case 294:
                    CoroutineScope coroutineScope25 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    MediaDataProcessor mediaDataProcessor = (MediaDataProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataProcessorProvider.get();
                    MediaTimeoutListener mediaTimeoutListener2 = (MediaTimeoutListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTimeoutListenerProvider.get();
                    MediaResumeListener mediaResumeListener2 = (MediaResumeListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaResumeListenerProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    Context context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.context;
                    MediaSessionManager mediaSessionManager2 = (MediaSessionManager) context15.getSystemService(MediaSessionManager.class);
                    Preconditions.checkNotNullFromProvides(mediaSessionManager2);
                    return new MediaCarouselInteractor(coroutineScope25, mediaDataProcessor, mediaTimeoutListener2, mediaResumeListener2, new MediaSessionBasedFilter(context15, mediaSessionManager2, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1603$$Nest$mmediaDeviceManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new MediaDataCombineLatest(), (MediaDataFilterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataFilterImplProvider.get(), (MediaFilterRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFilterRepositoryProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get());
                case 295:
                    return new MediaDataProcessor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), new ThreadFactoryImpl(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), new MediaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), new SmartspaceMediaDataProvider(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get(), (MediaUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider.get(), (SmartspaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSmartspaceManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (MediaDataRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataRepositoryProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataLoaderProvider), (MediaLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaLoggerProvider.get());
                case 296:
                    return new MediaDataRepository((MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 297:
                    return new MediaDataFilterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (MediaUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get(), (MediaFilterRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFilterRepositoryProvider.get(), (MediaLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaLoggerProvider.get());
                case 298:
                    return new MediaFilterRepository((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get(), (MediaSmartspaceLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaSmartspaceLoggerProvider.get());
                case 299:
                    return new MediaSmartspaceLogger();
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get3() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Context context;
            Provider provider5;
            Provider provider6;
            Provider provider7;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            DelegateFactory delegateFactory;
            Provider provider13;
            DelegateFactory delegateFactory2;
            SwitchingProvider switchingProvider;
            Provider provider14;
            Provider provider15;
            Context context2;
            Provider provider16;
            DelegateFactory delegateFactory3;
            Provider provider17;
            DelegateFactory delegateFactory4;
            Provider provider18;
            Provider provider19;
            DelegateFactory delegateFactory5;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Provider provider24;
            Provider provider25;
            DelegateFactory delegateFactory6;
            Context context3;
            DelegateFactory delegateFactory7;
            DelegateFactory delegateFactory8;
            DelegateFactory delegateFactory9;
            DelegateFactory delegateFactory10;
            Provider provider26;
            DelegateFactory delegateFactory11;
            DelegateFactory delegateFactory12;
            Provider provider27;
            Provider provider28;
            DelegateFactory delegateFactory13;
            SwitchingProvider switchingProvider2;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            Context context4;
            SwitchingProvider switchingProvider4;
            Provider provider32;
            DelegateFactory delegateFactory14;
            Provider provider33;
            Provider provider34;
            Provider provider35;
            Provider provider36;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            Provider provider40;
            Provider provider41;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            DelegateFactory delegateFactory15;
            Provider provider45;
            GlobalSettingsImpl globalSettingsImpl;
            SwitchingProvider switchingProvider5;
            Provider provider46;
            DelegateFactory delegateFactory16;
            Context context5;
            Provider provider47;
            Provider provider48;
            DelegateFactory delegateFactory17;
            Provider provider49;
            Provider provider50;
            DelegateFactory delegateFactory18;
            Provider provider51;
            Provider provider52;
            Provider provider53;
            DelegateFactory delegateFactory19;
            Provider provider54;
            Provider provider55;
            DelegateFactory delegateFactory20;
            Provider provider56;
            GlobalSettingsImpl globalSettingsImpl2;
            Context context6;
            Provider provider57;
            Provider provider58;
            Provider provider59;
            GlobalSettingsImpl globalSettingsImpl3;
            Provider provider60;
            Provider provider61;
            Provider provider62;
            Provider provider63;
            Provider provider64;
            DelegateFactory delegateFactory21;
            Provider provider65;
            Provider provider66;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            Provider provider71;
            Provider provider72;
            Provider provider73;
            VolumePanelLogger volumePanelLogger;
            Provider provider74;
            Context context7;
            Provider provider75;
            Provider provider76;
            Provider provider77;
            Provider provider78;
            Provider provider79;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            Provider provider80;
            Provider provider81;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            Provider provider85;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider7;
            Provider provider86;
            Provider provider87;
            Provider provider88;
            Provider provider89;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            Provider provider90;
            DelegateFactory delegateFactory22;
            Provider provider91;
            DelegateFactory delegateFactory23;
            Provider provider92;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            Provider provider96;
            Provider provider97;
            Provider provider98;
            Context context8;
            Provider provider99;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            Provider provider103;
            Provider provider104;
            Provider provider105;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Context context9;
            Provider provider110;
            Provider provider111;
            Provider provider112;
            Provider provider113;
            DelegateFactory delegateFactory24;
            DelegateFactory delegateFactory25;
            DelegateFactory delegateFactory26;
            DelegateFactory delegateFactory27;
            Provider provider114;
            DelegateFactory delegateFactory28;
            Provider provider115;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            Provider provider120;
            DelegateFactory delegateFactory29;
            DelegateFactory delegateFactory30;
            Provider provider121;
            Context context10;
            DelegateFactory delegateFactory31;
            Context context11;
            DelegateFactory delegateFactory32;
            Provider provider122;
            DelegateFactory delegateFactory33;
            DelegateFactory delegateFactory34;
            Provider provider123;
            Provider provider124;
            DelegateFactory delegateFactory35;
            DelegateFactory delegateFactory36;
            DelegateFactory delegateFactory37;
            Provider provider125;
            Provider provider126;
            Provider provider127;
            DelegateFactory delegateFactory38;
            DelegateFactory delegateFactory39;
            DelegateFactory delegateFactory40;
            DelegateFactory delegateFactory41;
            DelegateFactory delegateFactory42;
            Provider provider128;
            Provider provider129;
            Provider provider130;
            Provider provider131;
            DelegateFactory delegateFactory43;
            DelegateFactory delegateFactory44;
            Provider provider132;
            DelegateFactory delegateFactory45;
            Provider provider133;
            Provider provider134;
            Provider provider135;
            Provider provider136;
            Provider provider137;
            Provider provider138;
            DelegateFactory delegateFactory46;
            DelegateFactory delegateFactory47;
            DelegateFactory delegateFactory48;
            Provider provider139;
            Context context12;
            Provider provider140;
            Provider provider141;
            Provider provider142;
            Provider provider143;
            Provider provider144;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider9;
            Provider provider145;
            Provider provider146;
            Provider provider147;
            SysUIUnfoldModule sysUIUnfoldModule;
            Provider provider148;
            Provider provider149;
            Provider provider150;
            Context context13;
            Provider provider151;
            DelegateFactory delegateFactory49;
            DelegateFactory delegateFactory50;
            DelegateFactory delegateFactory51;
            DelegateFactory delegateFactory52;
            GlobalSettingsImpl globalSettingsImpl4;
            DelegateFactory delegateFactory53;
            Provider provider152;
            Provider provider153;
            Provider provider154;
            Provider provider155;
            Provider provider156;
            DelegateFactory delegateFactory54;
            DelegateFactory delegateFactory55;
            Provider provider157;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider10;
            Provider provider158;
            DelegateFactory delegateFactory56;
            DelegateFactory delegateFactory57;
            Provider provider159;
            Provider provider160;
            DelegateFactory delegateFactory58;
            DelegateFactory delegateFactory59;
            DelegateFactory delegateFactory60;
            DelegateFactory delegateFactory61;
            Provider provider161;
            Provider provider162;
            Provider provider163;
            int displayId;
            DelegateFactory delegateFactory62;
            Provider provider164;
            Provider provider165;
            SwitchingProvider switchingProvider11;
            Provider provider166;
            Provider provider167;
            DelegateFactory delegateFactory63;
            Provider provider168;
            DelegateFactory delegateFactory64;
            Provider provider169;
            DelegateFactory delegateFactory65;
            Provider provider170;
            Provider provider171;
            Provider provider172;
            Provider provider173;
            Provider provider174;
            DelegateFactory delegateFactory66;
            Provider provider175;
            Provider provider176;
            DelegateFactory delegateFactory67;
            Provider provider177;
            Provider provider178;
            DelegateFactory delegateFactory68;
            SwitchingProvider switchingProvider12;
            Provider provider179;
            Provider provider180;
            Provider provider181;
            KeyguardBottomAreaViewModel keyguardBottomAreaViewModel;
            Provider provider182;
            Provider provider183;
            Provider provider184;
            Provider provider185;
            Provider provider186;
            Provider provider187;
            Provider provider188;
            Provider provider189;
            Provider provider190;
            DelegateFactory delegateFactory69;
            DelegateFactory delegateFactory70;
            Provider provider191;
            Provider provider192;
            DelegateFactory delegateFactory71;
            DelegateFactory delegateFactory72;
            Provider provider193;
            DelegateFactory delegateFactory73;
            DelegateFactory delegateFactory74;
            Provider provider194;
            Provider provider195;
            Provider provider196;
            DelegateFactory delegateFactory75;
            DelegateFactory delegateFactory76;
            DelegateFactory delegateFactory77;
            DelegateFactory delegateFactory78;
            Provider provider197;
            Context context14;
            DelegateFactory delegateFactory79;
            DelegateFactory delegateFactory80;
            Provider provider198;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider13;
            GlobalSettingsImpl globalSettingsImpl5;
            Provider provider199;
            Provider provider200;
            Provider provider201;
            Provider provider202;
            DelegateFactory delegateFactory81;
            Provider provider203;
            Provider provider204;
            Provider provider205;
            Provider provider206;
            SwitchingProvider switchingProvider14;
            Provider provider207;
            Context context15;
            DelegateFactory delegateFactory82;
            Provider provider208;
            Provider provider209;
            DelegateFactory delegateFactory83;
            Provider provider210;
            DelegateFactory delegateFactory84;
            Provider provider211;
            Provider provider212;
            DelegateFactory delegateFactory85;
            DelegateFactory delegateFactory86;
            DelegateFactory delegateFactory87;
            Provider provider213;
            Provider provider214;
            Provider provider215;
            Provider provider216;
            Context context16;
            Provider provider217;
            Provider provider218;
            DelegateFactory delegateFactory88;
            Provider provider219;
            Provider provider220;
            Provider provider221;
            Provider provider222;
            Provider provider223;
            Provider provider224;
            DelegateFactory delegateFactory89;
            Provider provider225;
            Provider provider226;
            Provider provider227;
            Context context17;
            Provider provider228;
            SwitchingProvider switchingProvider15;
            DelegateFactory delegateFactory90;
            DelegateFactory delegateFactory91;
            Provider provider229;
            Provider provider230;
            Provider provider231;
            Provider provider232;
            DelegateFactory delegateFactory92;
            DelegateFactory delegateFactory93;
            Context context18;
            Provider provider233;
            Provider provider234;
            Provider provider235;
            Provider provider236;
            Provider provider237;
            Provider provider238;
            DelegateFactory delegateFactory94;
            Provider provider239;
            Provider provider240;
            Context context19;
            Provider provider241;
            Provider provider242;
            SwitchingProvider switchingProvider16;
            SwitchingProvider switchingProvider17;
            SwitchingProvider switchingProvider18;
            SwitchingProvider switchingProvider19;
            SwitchingProvider switchingProvider20;
            SwitchingProvider switchingProvider21;
            SwitchingProvider switchingProvider22;
            SwitchingProvider switchingProvider23;
            Provider provider243;
            Context context20;
            Provider provider244;
            DelegateFactory delegateFactory95;
            Provider provider245;
            DelegateFactory delegateFactory96;
            DelegateFactory delegateFactory97;
            DelegateFactory delegateFactory98;
            Provider provider246;
            Provider provider247;
            Provider provider248;
            DelegateFactory delegateFactory99;
            Provider provider249;
            DelegateFactory delegateFactory100;
            Provider provider250;
            DelegateFactory delegateFactory101;
            Provider provider251;
            Context context21;
            Provider provider252;
            Provider provider253;
            Provider provider254;
            Provider provider255;
            Provider provider256;
            Context context22;
            Provider provider257;
            SwitchingProvider unused;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 300:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSmartspaceControllerProvider;
                    CommunalSmartspaceController communalSmartspaceController = (CommunalSmartspaceController) provider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider2.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider;
                    return new CommunalSmartspaceRepositoryImpl(communalSmartspaceController, executor, systemClock, (LogBuffer) provider4.get());
                case 301:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    SmartspaceManager smartspaceManager = (SmartspaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSmartspaceManagerProvider.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider;
                    ExecutionImpl executionImpl = (ExecutionImpl) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor2 = (Executor) provider6.get();
                    LockscreenPrecondition m1591$$Nest$mlockscreenPrecondition = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1591$$Nest$mlockscreenPrecondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Optional of = Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1593$$Nest$mlockscreenTargetFilter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlanceableHubBcSmartspaceDataPluginProvider;
                    return new CommunalSmartspaceController(context, smartspaceManager, executionImpl, executor2, m1591$$Nest$mlockscreenPrecondition, of, Optional.of((BcSmartspaceDataPlugin) provider7.get()));
                case 302:
                    return SmartspaceGoogleModule_ProvideGlanceableHubBcSmartspaceDataPluginFactory.provideGlanceableHubBcSmartspaceDataPlugin();
                case 303:
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor3 = (Executor) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsRepositoryImplProvider;
                    CommunalSettingsRepositoryImpl communalSettingsRepositoryImpl = (CommunalSettingsRepositoryImpl) provider11.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider12.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new CommunalSettingsInteractor(coroutineScope, coroutineDispatcher, executor3, communalSettingsRepositoryImpl, selectedUserInteractor, (UserTracker) delegateFactory.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTableLogBufferProvider.get());
                case 304:
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider13.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) delegateFactory2.get();
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider14.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    return new CommunalSettingsRepositoryImpl(coroutineDispatcher2, featureFlagsClassic, secureSettings, broadcastDispatcher, (DevicePolicyManager) provider15.get());
                case 305:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor4 = (Executor) provider16.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory3.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider17.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new ManagedProfileControllerImpl(context2, executor4, userTracker, userManager, (KeyguardUpdateMonitor) delegateFactory4.get());
                case 306:
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTutorialDisabledRepositoryImplProvider;
                    CommunalTutorialDisabledRepositoryImpl communalTutorialDisabledRepositoryImpl = (CommunalTutorialDisabledRepositoryImpl) provider19.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory5.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider;
                    CommunalSettingsInteractor communalSettingsInteractor = (CommunalSettingsInteractor) provider20.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    return new CommunalTutorialInteractor(coroutineScope2, communalTutorialDisabledRepositoryImpl, keyguardInteractor, communalSettingsInteractor, (CommunalInteractor) provider21.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTableLogBufferProvider.get());
                case 307:
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new CommunalTutorialDisabledRepositoryImpl((CoroutineScope) provider22.get());
                case 308:
                    MediaHost.MediaHostStateHolder mediaHostStateHolder = new MediaHost.MediaHostStateHolder();
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager = (MediaHierarchyManager) provider23.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager = (MediaDataManager) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider;
                    MediaHostStatesManager mediaHostStatesManager = (MediaHostStatesManager) provider25.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider;
                    return MediaModule_ProvidesCommunalMediaHostFactory.providesCommunalMediaHost(mediaHostStateHolder, mediaHierarchyManager, mediaDataManager, mediaHostStatesManager, (MediaCarouselController) delegateFactory6.get());
                case 309:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory7.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory8.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory9.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider;
                    MediaCarouselController mediaCarouselController = (MediaCarouselController) delegateFactory10.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager2 = (MediaDataManager) provider26.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory11.get();
                    DreamOverlayStateController dreamOverlayStateController = (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory12.get();
                    CommunalTransitionViewModel communalTransitionViewModel = (CommunalTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTransitionViewModelProvider.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider28.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory13.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider2.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider3.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider29.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    return new MediaHierarchyManager(context3, sysuiStatusBarStateController, keyguardStateController, keyguardBypassController, mediaCarouselController, mediaDataManager2, statusBarKeyguardViewManager, dreamOverlayStateController, keyguardInteractor2, communalTransitionViewModel, configurationController, wakefulnessLifecycle, shadeInteractor, secureSettings2, handler, coroutineScope3, (SplitShadeStateControllerImpl) provider30.get(), (MediaViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaViewLoggerProvider.get());
                case 310:
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider31.get();
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaControlPanelProvider;
                    VisualStabilityProvider visualStabilityProvider = (VisualStabilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityProvider.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider;
                    MediaHostStatesManager mediaHostStatesManager2 = (MediaHostStatesManager) provider32.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory14.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock2 = (SystemClock) provider33.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider35.get();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor5 = (Executor) provider36.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager3 = (MediaDataManager) provider38.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController2 = (ConfigurationController) provider39.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider40.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider41.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider;
                    MediaUiEventLogger mediaUiEventLogger = (MediaUiEventLogger) provider42.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerLoggerProvider;
                    MediaCarouselControllerLogger mediaCarouselControllerLogger = (MediaCarouselControllerLogger) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider;
                    MediaFlags mediaFlags = (MediaFlags) provider44.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory15.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider45.get();
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings3 = (SecureSettings) switchingProvider5.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselViewModelProvider;
                    MediaCarouselViewModel mediaCarouselViewModel = (MediaCarouselViewModel) provider46.get();
                    SwitchingProvider switchingProvider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaViewControllerProvider;
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new MediaCarouselController(coroutineScope4, context4, switchingProvider4, visualStabilityProvider, mediaHostStatesManager2, activityStarter, systemClock2, coroutineDispatcher3, delayableExecutor, executor5, coroutineDispatcher4, mediaDataManager3, configurationController2, falsingManager, dumpManager, mediaUiEventLogger, mediaCarouselControllerLogger, mediaFlags, keyguardUpdateMonitor, keyguardTransitionInteractor, globalSettingsImpl, secureSettings3, mediaCarouselViewModel, switchingProvider24, (DeviceEntryInteractor) delegateFactory16.get());
                case 311:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor6 = (Executor) provider47.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider48.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory17.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    BroadcastSender broadcastSender = (BroadcastSender) provider49.get();
                    MediaViewController mediaViewController = (MediaViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaViewControllerProvider.get();
                    SeekBarViewModel seekBarViewModel = new SeekBarViewModel((RepeatableExecutorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundRepeatableExecutorProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get());
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    Lazy lazy = DoubleCheck.lazy(provider50);
                    MediaOutputDialogManager mediaOutputDialogManager = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaOutputDialogManager();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider;
                    MediaCarouselController mediaCarouselController2 = (MediaCarouselController) delegateFactory18.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager2 = (FalsingManager) provider51.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock3 = (SystemClock) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider;
                    MediaUiEventLogger mediaUiEventLogger2 = (MediaUiEventLogger) provider53.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory19.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider;
                    ActivityIntentHelper activityIntentHelper = (ActivityIntentHelper) provider54.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider55.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) delegateFactory20.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDialogControllerProvider;
                    BroadcastDialogController broadcastDialogController = (BroadcastDialogController) provider56.get();
                    globalSettingsImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    return new MediaControlPanel(context5, executor6, delayableExecutor2, activityStarter2, broadcastSender, mediaViewController, seekBarViewModel, lazy, mediaOutputDialogManager, mediaCarouselController2, falsingManager2, systemClock3, mediaUiEventLogger2, keyguardStateController2, activityIntentHelper, communalSceneInteractor, notificationLockscreenUserManager, broadcastDialogController, globalSettingsImpl2);
                case 312:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController3 = (ConfigurationController) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider;
                    MediaHostStatesManager mediaHostStatesManager3 = (MediaHostStatesManager) provider58.get();
                    MediaViewLogger mediaViewLogger = (MediaViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaViewLoggerProvider.get();
                    SeekBarViewModel seekBarViewModel2 = new SeekBarViewModel((RepeatableExecutorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundRepeatableExecutorProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get());
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor3 = (DelayableExecutor) provider59.get();
                    globalSettingsImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    return new MediaViewController(context6, configurationController3, mediaHostStatesManager3, mediaViewLogger, seekBarViewModel2, delayableExecutor3, globalSettingsImpl3);
                case 313:
                    return new MediaHostStatesManager();
                case 314:
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaViewLogBufferProvider;
                    return new MediaViewLogger((LogBuffer) provider60.get());
                case 315:
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideMediaViewLogBufferFactory.provideMediaViewLogBuffer((LogBufferFactory) provider61.get());
                case 316:
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    return SysUIConcurrencyModule_ProvideBackgroundRepeatableExecutorFactory.provideBackgroundRepeatableExecutor((DelayableExecutor) provider62.get());
                case 317:
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor7 = (Executor) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider;
                    IDreamManager iDreamManager = (IDreamManager) provider64.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory21.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    Lazy lazy2 = DoubleCheck.lazy(provider65);
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) provider66.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAnimationFeatureFlagsProvider;
                    return CentralSurfacesDependenciesModule_ProvideDialogTransitionAnimatorFactory.provideDialogTransitionAnimator(executor7, iDreamManager, keyguardStateController3, lazy2, interactionJankMonitor, (CentralSurfacesDependenciesModule$2) provider67.get());
                case 318:
                    return CentralSurfacesDependenciesModule_ProvideAnimationFeatureFlagsFactory.provideAnimationFeatureFlags();
                case 319:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$12(this);
                case 320:
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nearbyMediaDevicesLoggerProvider;
                    return new NearbyMediaDevicesManager(commandQueue, (NearbyMediaDevicesLogger) provider69.get());
                case 321:
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNearbyMediaDevicesLogBufferProvider;
                    return new NearbyMediaDevicesLogger((LogBuffer) provider70.get());
                case 322:
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideNearbyMediaDevicesLogBufferFactory.provideNearbyMediaDevicesLogBuffer((LogBufferFactory) provider71.get());
                case 323:
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumePanelGlobalStateRepositoryProvider;
                    return new VolumePanelGlobalStateInteractor((VolumePanelGlobalStateRepository) provider72.get());
                case 324:
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider73.get();
                    volumePanelLogger = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumePanelLogger();
                    return new VolumePanelGlobalStateRepository(dumpManager2, volumePanelLogger);
                case 325:
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideVolumeLogBufferFactory.provideVolumeLogBuffer((LogBufferFactory) provider74.get());
                case 326:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new ActivityIntentHelper(context7);
                case 327:
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider75.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider16;
                    return new BroadcastDialogController(dialogTransitionAnimator, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$13) provider76.get());
                case 328:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$13(this);
                case 329:
                    return new VisualStabilityProvider();
                case 330:
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaCarouselControllerBufferProvider;
                    return new MediaCarouselControllerLogger((LogBuffer) provider77.get());
                case 331:
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideMediaCarouselControllerBufferFactory.provideMediaCarouselControllerBuffer((LogBufferFactory) provider78.get());
                case 332:
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider79.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context23 = (Context) switchingProvider6.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider80.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor8 = (Executor) provider81.get();
                    VisualStabilityProvider visualStabilityProvider2 = (VisualStabilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityProvider.get();
                    MediaCarouselInteractor mediaCarouselInteractor = (MediaCarouselInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselInteractorProvider.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaControlInteractorFactoryProvider;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaRecommendationsViewModelProvider;
                    MediaRecommendationsViewModel mediaRecommendationsViewModel = (MediaRecommendationsViewModel) provider83.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider;
                    MediaUiEventLogger mediaUiEventLogger3 = (MediaUiEventLogger) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider;
                    return new MediaCarouselViewModel(coroutineScope5, context23, coroutineDispatcher5, executor8, visualStabilityProvider2, mediaCarouselInteractor, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14, mediaRecommendationsViewModel, mediaUiEventLogger3, (MediaFlags) provider85.get(), (MediaLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaLoggerProvider.get());
                case 333:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14(this);
                case 334:
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context24 = (Context) switchingProvider7.get();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaRecommendationsInteractorProvider;
                    MediaRecommendationsInteractor mediaRecommendationsInteractor = (MediaRecommendationsInteractor) provider87.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider;
                    return new MediaRecommendationsViewModel(context24, coroutineDispatcher6, mediaRecommendationsInteractor, (MediaUiEventLogger) provider88.get());
                case 335:
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider89.get();
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context25 = (Context) switchingProvider8.get();
                    MediaFilterRepository mediaFilterRepository = (MediaFilterRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFilterRepositoryProvider.get();
                    MediaDataProcessor mediaDataProcessor = (MediaDataProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataProcessorProvider.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    BroadcastSender broadcastSender2 = (BroadcastSender) provider90.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    return new MediaRecommendationsInteractor(coroutineScope6, context25, mediaFilterRepository, mediaDataProcessor, broadcastSender2, (ActivityStarter) delegateFactory22.get());
                case 336:
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor9 = (Executor) provider91.get();
                    boolean booleanValue = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1606$$Nest$mnamedBoolean(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl).booleanValue();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory23.get();
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDreamLogBufferProvider;
                    return new DreamOverlayStateController(executor9, booleanValue, featureFlags, (LogBuffer) provider92.get(), new WeakReferenceFactoryImpl());
                case 337:
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideDreamLogBufferFactory.provideDreamLogBuffer((LogBufferFactory) provider93.get());
                case 338:
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider94.get();
                    CommunalColors communalColors = (CommunalColors) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalColorsImplProvider.get();
                    GlanceableHubToLockscreenTransitionViewModel glanceableHubToLockscreenTransitionViewModel = (GlanceableHubToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToLockscreenTransitionViewModelProvider.get();
                    LockscreenToGlanceableHubTransitionViewModel lockscreenToGlanceableHubTransitionViewModel = (LockscreenToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGlanceableHubTransitionViewModelProvider.get();
                    DreamingToGlanceableHubTransitionViewModel dreamingToGlanceableHubTransitionViewModel = (DreamingToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToGlanceableHubTransitionViewModelProvider.get();
                    GlanceableHubToDreamingTransitionViewModel glanceableHubToDreamingTransitionViewModel = (GlanceableHubToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToDreamingTransitionViewModelProvider.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider95.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor2 = (CommunalSceneInteractor) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new CommunalTransitionViewModel(coroutineScope7, communalColors, glanceableHubToLockscreenTransitionViewModel, lockscreenToGlanceableHubTransitionViewModel, dreamingToGlanceableHubTransitionViewModel, glanceableHubToDreamingTransitionViewModel, communalInteractor, communalSceneInteractor2, (KeyguardTransitionInteractor) provider97.get());
                case 339:
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider98.get();
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new CommunalColorsImpl(coroutineScope8, context8, (ConfigurationInteractor) provider99.get());
                case 340:
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GlanceableHubToLockscreenTransitionViewModel(configurationInteractor, (KeyguardTransitionAnimationFlow) provider101.get());
                case 341:
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new KeyguardTransitionAnimationFlow((KeyguardTransitionInteractor) provider102.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1586$$Nest$mkeyguardTransitionAnimationLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 342:
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardTransitionAnimationLogBufferFactory.provideKeyguardTransitionAnimationLogBuffer((LogBufferFactory) provider103.get());
                case 343:
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor2 = (ConfigurationInteractor) provider104.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToGlanceableHubTransitionViewModel(configurationInteractor2, (KeyguardTransitionAnimationFlow) provider105.get());
                case 344:
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    KeyguardTransitionAnimationFlow keyguardTransitionAnimationFlow = (KeyguardTransitionAnimationFlow) provider106.get();
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new DreamingToGlanceableHubTransitionViewModel((ConfigurationInteractor) provider107.get(), keyguardTransitionAnimationFlow);
                case 345:
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    KeyguardTransitionAnimationFlow keyguardTransitionAnimationFlow2 = (KeyguardTransitionAnimationFlow) provider108.get();
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new GlanceableHubToDreamingTransitionViewModel((ConfigurationInteractor) provider109.get(), keyguardTransitionAnimationFlow2);
                case 346:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    IWallpaperManager asInterface = IWallpaperManager.Stub.asInterface(ServiceManager.getService("wallpaper"));
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock4 = (SystemClock) provider110.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new WakefulnessLifecycle(context9, asInterface, systemClock4, (DumpManager) provider111.get());
                case 347:
                    List m1612$$Nest$mnamedListOfString = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1612$$Nest$mnamedListOfString(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalStatsLogProxyImplProvider;
                    return new CommunalMetricsLogger(m1612$$Nest$mnamedListOfString, (CommunalStatsLogProxyImpl) provider112.get());
                case 348:
                    return new CommunalStatsLogProxyImpl();
                case 349:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.legacyLockIconViewControllerProvider);
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.emptyLockIconViewControllerProvider;
                    return DeviceEntryModule_Companion_ProvideLockIconViewControllerFactory.provideLockIconViewController(DoubleCheck.lazy(provider113));
                case 350:
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory24.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory25.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager2 = (StatusBarKeyguardViewManager) delegateFactory26.get();
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory27.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager3 = (FalsingManager) provider114.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController = (AuthController) delegateFactory28.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider115.get();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider116.get();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController4 = (ConfigurationController) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor4 = (DelayableExecutor) provider118.get();
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider119.get();
                    AuthRippleController authRippleController = (AuthRippleController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authRippleControllerProvider.get();
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider120.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor3 = (KeyguardInteractor) delegateFactory29.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags2 = (FeatureFlags) delegateFactory30.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider121.get();
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    return new LegacyLockIconViewController(statusBarStateController, keyguardUpdateMonitor2, statusBarKeyguardViewManager2, keyguardStateController4, falsingManager3, authController, dumpManager3, accessibilityManager, configurationController4, delayableExecutor4, vibratorHelper, authRippleController, m977$$Nest$mmainResources, keyguardTransitionInteractor2, keyguardInteractor3, featureFlags2, primaryBouncerInteractor, context10, DoubleCheck.lazy(delegateFactory31));
                case 351:
                    return new VibratorHelper((Vibrator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideVibratorProvider.get());
                case 352:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController2 = (AuthController) delegateFactory32.get();
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController5 = (ConfigurationController) provider122.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor3 = (KeyguardUpdateMonitor) delegateFactory33.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController5 = (KeyguardStateController) delegateFactory34.get();
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle2 = (WakefulnessLifecycle) provider123.get();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry = (CommandRegistry) provider124.get();
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory35.get();
                    DelegateFactory delegateFactory102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsControllerProvider;
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) delegateFactory36.get();
                    DisplayMetrics m976$$Nest$mdisplayMetrics = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    KeyguardLogger m1581$$Nest$mkeyguardLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1581$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider;
                    BiometricUnlockController biometricUnlockController = (BiometricUnlockController) delegateFactory37.get();
                    LightRevealScrim lightRevealScrim = (LightRevealScrim) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLightRevealScrimProvider.get();
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authRippleInteractorProvider;
                    AuthRippleInteractor authRippleInteractor = (AuthRippleInteractor) provider125.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider;
                    FacePropertyRepositoryImpl facePropertyRepositoryImpl = (FacePropertyRepositoryImpl) provider126.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesAuthRippleViewProvider;
                    return new AuthRippleController(context11, authController2, configurationController5, keyguardUpdateMonitor3, keyguardStateController5, wakefulnessLifecycle2, commandRegistry, notificationShadeWindowController, delegateFactory102, statusBarStateController2, m976$$Nest$mdisplayMetrics, m1581$$Nest$mkeyguardLogger, biometricUnlockController, lightRevealScrim, authRippleInteractor, facePropertyRepositoryImpl, (AuthRippleView) provider127.get());
                case 353:
                    DozeScrimController dozeScrimController = (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get();
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator = (KeyguardViewMediator) delegateFactory38.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController2 = (NotificationShadeWindowController) delegateFactory39.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController6 = (KeyguardStateController) delegateFactory40.get();
                    Handler provideHandler = GlobalConcurrencyModule_ProvideHandlerFactory.provideHandler();
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor4 = (KeyguardUpdateMonitor) delegateFactory41.get();
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController2 = (KeyguardBypassController) delegateFactory42.get();
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider128.get();
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider129.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider130.get();
                    BiometricUnlockLogger biometricUnlockLogger = (BiometricUnlockLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockLoggerProvider.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle3 = (WakefulnessLifecycle) provider131.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController3 = (AuthController) delegateFactory43.get();
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController3 = (StatusBarStateController) delegateFactory44.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider;
                    SessionTracker sessionTracker = (SessionTracker) provider132.get();
                    LatencyTracker latencyTracker = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController = (ScreenOffAnimationController) delegateFactory45.get();
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper2 = (VibratorHelper) provider133.get();
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock5 = (SystemClock) provider134.get();
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    Lazy lazy3 = DoubleCheck.lazy(provider135);
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockInteractorProvider;
                    BiometricUnlockInteractor biometricUnlockInteractor = (BiometricUnlockInteractor) provider136.get();
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter = (JavaAdapter) provider137.get();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new BiometricUnlockController(dozeScrimController, keyguardViewMediator, notificationShadeWindowController2, keyguardStateController6, provideHandler, keyguardUpdateMonitor4, m977$$Nest$mmainResources2, keyguardBypassController2, metricsLogger, dumpManager4, powerManager, biometricUnlockLogger, wakefulnessLifecycle3, authController3, statusBarStateController3, sessionTracker, latencyTracker, screenOffAnimationController, vibratorHelper2, systemClock5, lazy3, biometricUnlockInteractor, javaAdapter, (KeyguardTransitionInteractor) provider138.get());
                case 354:
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters = (DozeParameters) delegateFactory46.get();
                    DozeLog dozeLog = (DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new DozeScrimController(dozeParameters, dozeLog, (StatusBarStateController) delegateFactory47.get());
                case 355:
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor5 = (KeyguardUpdateMonitor) delegateFactory48.get();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new DozeLog(keyguardUpdateMonitor5, (DumpManager) provider139.get(), new DozeLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDozeLogBufferProvider.get()));
                case 356:
                    return new BiometricUnlockLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBiometricLogBufferProvider.get());
                case 357:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider;
                    NotificationVisibilityProvider notificationVisibilityProvider = (NotificationVisibilityProvider) provider140.get();
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    NotifPipeline notifPipeline = (NotifPipeline) provider141.get();
                    NotifCollection notifCollection = (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get();
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager4 = (MediaDataManager) provider142.get();
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager5 = (DumpManager) provider143.get();
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor10 = (Executor) provider144.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return CentralSurfacesDependenciesModule_ProvideNotificationMediaManagerFactory.provideNotificationMediaManager(context12, notificationVisibilityProvider, notifPipeline, notifCollection, mediaDataManager4, dumpManager5, executor10, (Handler) switchingProvider9.get());
                case 358:
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider;
                    Optional optional = (Optional) provider145.get();
                    UnlockedScreenOffAnimationController unlockedScreenOffAnimationController = (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get();
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    return new ScreenOffAnimationController(optional, unlockedScreenOffAnimationController, (WakefulnessLifecycle) provider146.get());
                case 359:
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUIUnfoldComponentProvider;
                    return CommonSystemUIUnfoldModule_Companion_SysUiUnfoldComponentFactory.sysUiUnfoldComponent(Optional.of((Optional) provider147.get()));
                case 360:
                    sysUIUnfoldModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIUnfoldModule;
                    Optional optional2 = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNaturalRotationProgressProvider;
                    Optional optional3 = (Optional) provider148.get();
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStatusBarScopedTransitionProvider;
                    Optional optional4 = (Optional) provider149.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldBgTransitionProgressProvider;
                    Optional optional5 = (Optional) provider150.get();
                    sysUIUnfoldModule.getClass();
                    UnfoldTransitionProgressProvider unfoldTransitionProgressProvider = (UnfoldTransitionProgressProvider) optional2.orElse(null);
                    NaturalRotationUnfoldProgressProvider naturalRotationUnfoldProgressProvider = (NaturalRotationUnfoldProgressProvider) optional3.orElse(null);
                    ScopedUnfoldTransitionProgressProvider scopedUnfoldTransitionProgressProvider = (ScopedUnfoldTransitionProgressProvider) optional4.orElse(null);
                    UnfoldTransitionProgressProvider unfoldTransitionProgressProvider2 = (UnfoldTransitionProgressProvider) optional5.orElse(null);
                    if (unfoldTransitionProgressProvider == null || naturalRotationUnfoldProgressProvider == null || scopedUnfoldTransitionProgressProvider == null || unfoldTransitionProgressProvider2 == null) {
                        Optional empty = Optional.empty();
                        Intrinsics.checkNotNull(empty);
                        return empty;
                    }
                    Optional of2 = Optional.of(new DaggerSysUIGoogleGlobalRootComponent$SysUIUnfoldComponentImpl(this.sysUIGoogleGlobalRootComponentImpl, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl, unfoldTransitionProgressProvider, naturalRotationUnfoldProgressProvider, scopedUnfoldTransitionProgressProvider, unfoldTransitionProgressProvider2));
                    Intrinsics.checkNotNull(of2);
                    return of2;
                case 361:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle4 = (WakefulnessLifecycle) provider151.get();
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateControllerImpl statusBarStateControllerImpl = (StatusBarStateControllerImpl) delegateFactory49.get();
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    Lazy lazy4 = DoubleCheck.lazy(delegateFactory50);
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController7 = (KeyguardStateController) delegateFactory51.get();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    Lazy lazy5 = DoubleCheck.lazy(delegateFactory52);
                    globalSettingsImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    Lazy lazy6 = DoubleCheck.lazy(delegateFactory53);
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor2 = (InteractionJankMonitor) provider152.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager2 = (PowerManager) provider153.get();
                    Lazy lazy7 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeLockscreenInteractorProvider);
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    return new UnlockedScreenOffAnimationController(context13, wakefulnessLifecycle4, statusBarStateControllerImpl, lazy4, keyguardStateController7, lazy5, globalSettingsImpl4, lazy6, interactionJankMonitor2, powerManager2, lazy7, DoubleCheck.lazy(provider154), GlobalConcurrencyModule_ProvideHandlerFactory.provideHandler());
                case 362:
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeLockscreenInteractorImplProvider;
                    return ShadeModule_Companion_ProvideShadeLockscreenInteractorFactory.provideShadeLockscreenInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider);
                case 363:
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider155.get();
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider156.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor2 = (ShadeInteractor) delegateFactory54.get();
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory55.get();
                    LockIconViewController lockIconViewController = (LockIconViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLockIconViewControllerProvider.get();
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    return new ShadeLockscreenInteractorImpl(coroutineDispatcher7, coroutineScope9, shadeInteractor2, sceneInteractor, lockIconViewController);
                case 364:
                    NotificationPanelView notificationPanelView = (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider10.get();
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    LayoutInflater layoutInflater = (LayoutInflater) provider158.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags3 = (FeatureFlags) delegateFactory56.get();
                    NotificationWakeUpCoordinator notificationWakeUpCoordinator = (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get();
                    PulseExpansionHandler pulseExpansionHandler = (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get();
                    DynamicPrivacyController dynamicPrivacyController = (DynamicPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dynamicPrivacyControllerProvider.get();
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController3 = (KeyguardBypassController) delegateFactory57.get();
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager4 = (FalsingManager) provider159.get();
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector = (FalsingCollector) provider160.get();
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController8 = (KeyguardStateController) delegateFactory58.get();
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController4 = (StatusBarStateController) delegateFactory59.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController3 = (NotificationShadeWindowController) delegateFactory60.get();
                    DozeLog dozeLog2 = (DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get();
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters2 = (DozeParameters) delegateFactory61.get();
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider161.get();
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper3 = (VibratorHelper) provider162.get();
                    LatencyTracker latencyTracker2 = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get();
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager2 = (AccessibilityManager) provider163.get();
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor6 = (KeyguardUpdateMonitor) delegateFactory62.get();
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger2 = (MetricsLogger) provider164.get();
                    ShadeLogger m1673$$Nest$mshadeLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController6 = (ConfigurationController) provider165.get();
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.builderProvider;
                    StatusBarTouchableRegionManager statusBarTouchableRegionManager = (StatusBarTouchableRegionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarTouchableRegionManagerProvider.get();
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.conversationNotificationManagerProvider;
                    ConversationNotificationManager conversationNotificationManager = (ConversationNotificationManager) provider166.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager2 = (MediaHierarchyManager) provider167.get();
                    delegateFactory63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager3 = (StatusBarKeyguardViewManager) delegateFactory63.get();
                    NotificationGutsManager notificationGutsManager = (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get();
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsQSContainerControllerProvider;
                    NotificationsQSContainerController notificationsQSContainerController = (NotificationsQSContainerController) provider168.get();
                    delegateFactory64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory64.get();
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory3 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory4 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController = (LockscreenShadeTransitionController) provider169.get();
                    delegateFactory65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider;
                    AuthController authController4 = (AuthController) delegateFactory65.get();
                    ScrimController scrimController = (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get();
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager2 = (UserManager) provider170.get();
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager5 = (MediaDataManager) provider171.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider;
                    NotificationShadeDepthController notificationShadeDepthController = (NotificationShadeDepthController) provider172.get();
                    AmbientState ambientState = (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get();
                    LockIconViewController lockIconViewController2 = (LockIconViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLockIconViewControllerProvider.get();
                    KeyguardMediaController keyguardMediaController = (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get();
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tapAgainViewControllerProvider;
                    TapAgainViewController tapAgainViewController = (TapAgainViewController) provider173.get();
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController = (NavigationModeController) provider174.get();
                    delegateFactory66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    NavigationBarControllerImpl navigationBarControllerImpl = (NavigationBarControllerImpl) delegateFactory66.get();
                    QuickSettingsControllerImpl quickSettingsControllerImpl = (QuickSettingsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerImplProvider.get();
                    FragmentService fragmentService = (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get();
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService = (IStatusBarService) provider175.get();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver = (ContentResolver) provider176.get();
                    ShadeHeaderController shadeHeaderController = (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get();
                    delegateFactory67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController2 = (ScreenOffAnimationController) delegateFactory67.get();
                    LockscreenGestureLogger lockscreenGestureLogger = (LockscreenGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenGestureLoggerProvider.get();
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    ShadeRepository shadeRepository = (ShadeRepository) provider177.get();
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUiUnfoldComponentProvider;
                    Optional optional6 = (Optional) provider178.get();
                    delegateFactory68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState = (SysUiState) delegateFactory68.get();
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaViewControllerProvider;
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    KeyguardUnlockAnimationController keyguardUnlockAnimationController = (KeyguardUnlockAnimationController) provider179.get();
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider;
                    KeyguardIndicationController keyguardIndicationController = (KeyguardIndicationController) provider180.get();
                    NotificationStackScrollLayoutController.NotificationListContainerImpl notificationListContainerImpl = (NotificationStackScrollLayoutController.NotificationListContainerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideListContainerProvider.get();
                    NotificationStackSizeCalculator notificationStackSizeCalculator = (NotificationStackSizeCalculator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackSizeCalculatorProvider.get();
                    UnlockedScreenOffAnimationController unlockedScreenOffAnimationController2 = (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get();
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock6 = (SystemClock) provider181.get();
                    keyguardBottomAreaViewModel = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaViewModel();
                    KeyguardBottomAreaInteractor keyguardBottomAreaInteractor = (KeyguardBottomAreaInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaInteractorProvider.get();
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider;
                    KeyguardClockInteractor keyguardClockInteractor = (KeyguardClockInteractor) provider182.get();
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider183.get();
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider;
                    DreamingToLockscreenTransitionViewModel dreamingToLockscreenTransitionViewModel = (DreamingToLockscreenTransitionViewModel) provider184.get();
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider;
                    OccludedToLockscreenTransitionViewModel occludedToLockscreenTransitionViewModel = (OccludedToLockscreenTransitionViewModel) provider185.get();
                    LockscreenToDreamingTransitionViewModel lockscreenToDreamingTransitionViewModel = (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get();
                    GoneToDreamingTransitionViewModel goneToDreamingTransitionViewModel = (GoneToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingTransitionViewModelProvider.get();
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingLockscreenHostedTransitionViewModelProvider;
                    GoneToDreamingLockscreenHostedTransitionViewModel goneToDreamingLockscreenHostedTransitionViewModel = (GoneToDreamingLockscreenHostedTransitionViewModel) provider186.get();
                    LockscreenToOccludedTransitionViewModel lockscreenToOccludedTransitionViewModel = (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get();
                    PrimaryBouncerToGoneTransitionViewModel primaryBouncerToGoneTransitionViewModel = (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get();
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider187.get();
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) provider188.get();
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager6 = (DumpManager) provider189.get();
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTouchHandlingViewModelProvider;
                    KeyguardTouchHandlingViewModel keyguardTouchHandlingViewModel = (KeyguardTouchHandlingViewModel) provider190.get();
                    delegateFactory69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor4 = (KeyguardInteractor) delegateFactory69.get();
                    delegateFactory70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory70.get();
                    SharedNotificationContainerInteractor sharedNotificationContainerInteractor = (SharedNotificationContainerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerInteractorProvider.get();
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor = (ActiveNotificationsInteractor) provider191.get();
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider;
                    ShadeAnimationInteractor shadeAnimationInteractor = (ShadeAnimationInteractor) provider192.get();
                    delegateFactory71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardViewConfiguratorProvider;
                    KeyguardViewConfigurator keyguardViewConfigurator = (KeyguardViewConfigurator) delegateFactory71.get();
                    delegateFactory72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor = (DeviceEntryFaceAuthInteractor) delegateFactory72.get();
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    SplitShadeStateControllerImpl splitShadeStateControllerImpl = (SplitShadeStateControllerImpl) provider193.get();
                    delegateFactory73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new NotificationPanelViewController(notificationPanelView, handler2, layoutInflater, featureFlags3, notificationWakeUpCoordinator, pulseExpansionHandler, dynamicPrivacyController, keyguardBypassController3, falsingManager4, falsingCollector, keyguardStateController8, statusBarStateController4, notificationShadeWindowController3, dozeLog2, dozeParameters2, commandQueue2, vibratorHelper3, latencyTracker2, accessibilityManager2, displayId, keyguardUpdateMonitor6, metricsLogger2, m1673$$Nest$mshadeLogger, configurationController6, switchingProvider11, statusBarTouchableRegionManager, conversationNotificationManager, mediaHierarchyManager2, statusBarKeyguardViewManager3, notificationGutsManager, notificationsQSContainerController, notificationStackScrollLayoutController, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory3, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory4, lockscreenShadeTransitionController, authController4, scrimController, userManager2, mediaDataManager5, notificationShadeDepthController, ambientState, lockIconViewController2, keyguardMediaController, tapAgainViewController, navigationModeController, navigationBarControllerImpl, quickSettingsControllerImpl, fragmentService, iStatusBarService, contentResolver, shadeHeaderController, screenOffAnimationController2, lockscreenGestureLogger, shadeExpansionStateManager, shadeRepository, optional6, sysUiState, switchingProvider12, keyguardUnlockAnimationController, keyguardIndicationController, notificationListContainerImpl, notificationStackSizeCalculator, unlockedScreenOffAnimationController2, systemClock6, keyguardBottomAreaViewModel, keyguardBottomAreaInteractor, keyguardClockInteractor, alternateBouncerInteractor, dreamingToLockscreenTransitionViewModel, occludedToLockscreenTransitionViewModel, lockscreenToDreamingTransitionViewModel, goneToDreamingTransitionViewModel, goneToDreamingLockscreenHostedTransitionViewModel, lockscreenToOccludedTransitionViewModel, primaryBouncerToGoneTransitionViewModel, coroutineDispatcher8, keyguardTransitionInteractor3, dumpManager6, keyguardTouchHandlingViewModel, keyguardInteractor4, activityStarter3, sharedNotificationContainerInteractor, activeNotificationsInteractor, shadeAnimationInteractor, keyguardViewConfigurator, deviceEntryFaceAuthInteractor, splitShadeStateControllerImpl, (PowerInteractor) delegateFactory73.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1579$$Nest$mkeyguardClockPositionAlgorithm(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NaturalScrollingSettingObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.naturalScrollingSettingObserverProvider.get());
                case 365:
                    delegateFactory74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    return ShadeViewProviderModule_Companion_ProvidesNotificationPanelViewFactory.providesNotificationPanelView((NotificationShadeWindowView) delegateFactory74.get());
                case 366:
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider194.get();
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager7 = (DumpManager) provider195.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider196.get();
                    delegateFactory75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController5 = (StatusBarStateController) delegateFactory75.get();
                    delegateFactory76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController4 = (KeyguardBypassController) delegateFactory76.get();
                    delegateFactory77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters3 = (DozeParameters) delegateFactory77.get();
                    delegateFactory78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController3 = (ScreenOffAnimationController) delegateFactory78.get();
                    NotificationWakeUpCoordinatorLogger m1633$$Nest$mnotificationWakeUpCoordinatorLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1633$$Nest$mnotificationWakeUpCoordinatorLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    NotificationsKeyguardInteractor notificationsKeyguardInteractor = new NotificationsKeyguardInteractor((NotificationsKeyguardViewStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsKeyguardViewStateRepositoryProvider.get());
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    return new NotificationWakeUpCoordinator(coroutineScope10, dumpManager7, headsUpManager, statusBarStateController5, keyguardBypassController4, dozeParameters3, screenOffAnimationController3, m1633$$Nest$mnotificationWakeUpCoordinatorLogger, notificationsKeyguardInteractor, (CommunalInteractor) provider197.get());
                case 367:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    HeadsUpManagerLogger headsUpManagerLogger = new HeadsUpManagerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationHeadsUpLogBufferProvider.get());
                    delegateFactory79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController6 = (StatusBarStateController) delegateFactory79.get();
                    delegateFactory80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController5 = (KeyguardBypassController) delegateFactory80.get();
                    GroupMembershipManagerImpl groupMembershipManagerImpl = (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get();
                    VisualStabilityProvider visualStabilityProvider3 = (VisualStabilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityProvider.get();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController7 = (ConfigurationController) provider198.get();
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider13.get();
                    globalSettingsImpl5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock7 = (SystemClock) provider199.get();
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor5 = (DelayableExecutor) provider200.get();
                    AccessibilityManagerWrapper accessibilityManagerWrapper = (AccessibilityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityManagerWrapperProvider.get();
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider201.get();
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter2 = (JavaAdapter) provider202.get();
                    delegateFactory81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    return new HeadsUpManagerPhone(context14, headsUpManagerLogger, statusBarStateController6, keyguardBypassController5, groupMembershipManagerImpl, visualStabilityProvider3, configurationController7, handler3, globalSettingsImpl5, systemClock7, delayableExecutor5, accessibilityManagerWrapper, uiEventLogger, javaAdapter2, (ShadeInteractor) delegateFactory81.get(), (AvalancheController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.avalancheControllerProvider.get());
                case 368:
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideNotificationHeadsUpLogBufferFactory.provideNotificationHeadsUpLogBuffer((LogBufferFactory) provider203.get());
                case 369:
                    return new GroupMembershipManagerImpl();
                case 370:
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    return new AccessibilityManagerWrapper((AccessibilityManager) provider204.get());
                case 371:
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager8 = (DumpManager) provider205.get();
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider206.get();
                    HeadsUpManagerLogger headsUpManagerLogger2 = new HeadsUpManagerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationHeadsUpLogBufferProvider.get());
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return new AvalancheController(dumpManager8, uiEventLogger2, headsUpManagerLogger2, (Handler) switchingProvider14.get());
                case 372:
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideNotificationLockScreenLogBufferFactory.provideNotificationLockScreenLogBuffer((LogBufferFactory) provider207.get());
                case 373:
                    return new NotificationsKeyguardViewStateRepository();
                case 374:
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    NotificationWakeUpCoordinator notificationWakeUpCoordinator2 = (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get();
                    delegateFactory82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController6 = (KeyguardBypassController) delegateFactory82.get();
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager2 = (HeadsUpManager) provider208.get();
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController8 = (ConfigurationController) provider209.get();
                    delegateFactory83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController7 = (StatusBarStateController) delegateFactory83.get();
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager5 = (FalsingManager) provider210.get();
                    delegateFactory84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor3 = (ShadeInteractor) delegateFactory84.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController2 = (LockscreenShadeTransitionController) provider211.get();
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new PulseExpansionHandler(context15, notificationWakeUpCoordinator2, keyguardBypassController6, headsUpManager2, configurationController8, statusBarStateController7, falsingManager5, shadeInteractor3, lockscreenShadeTransitionController2, (DumpManager) provider212.get());
                case 375:
                    delegateFactory85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController2 = (SysuiStatusBarStateController) delegateFactory85.get();
                    LSShadeTransitionLogger m1587$$Nest$mlSShadeTransitionLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1587$$Nest$mlSShadeTransitionLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController7 = (KeyguardBypassController) delegateFactory86.get();
                    delegateFactory87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager2 = (NotificationLockscreenUserManager) delegateFactory87.get();
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector2 = (FalsingCollector) provider213.get();
                    AmbientState ambientState2 = (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get();
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager3 = (MediaHierarchyManager) provider214.get();
                    LockscreenShadeScrimTransitionController m1592$$Nest$mlockscreenShadeScrimTransitionController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1592$$Nest$mlockscreenShadeScrimTransitionController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider19;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$18 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$18 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$18) provider215.get();
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider;
                    NotificationShadeDepthController notificationShadeDepthController2 = (NotificationShadeDepthController) provider216.get();
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider20;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19) provider217.get();
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider21;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20) provider218.get();
                    delegateFactory88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter4 = (ActivityStarter) delegateFactory88.get();
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle5 = (WakefulnessLifecycle) provider219.get();
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController9 = (ConfigurationController) provider220.get();
                    provider221 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager6 = (FalsingManager) provider221.get();
                    provider222 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager9 = (DumpManager) provider222.get();
                    provider223 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider22;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21) provider223.get();
                    provider224 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    ShadeRepository shadeRepository2 = (ShadeRepository) provider224.get();
                    delegateFactory89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor4 = (ShadeInteractor) delegateFactory89.get();
                    provider225 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    return new LockscreenShadeTransitionController(sysuiStatusBarStateController2, m1587$$Nest$mlSShadeTransitionLogger, keyguardBypassController7, notificationLockscreenUserManager2, falsingCollector2, ambientState2, mediaHierarchyManager3, m1592$$Nest$mlockscreenShadeScrimTransitionController, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$18, notificationShadeDepthController2, context16, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20, activityStarter4, wakefulnessLifecycle5, configurationController9, falsingManager6, dumpManager9, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21, shadeRepository2, shadeInteractor4, (SplitShadeStateControllerImpl) provider225.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeLockscreenInteractorProvider), (NaturalScrollingSettingObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.naturalScrollingSettingObserverProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSceneAdapterImplProvider));
                case 376:
                    provider226 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideLSShadeTransitionControllerBufferFactory.provideLSShadeTransitionControllerBuffer((LogBufferFactory) provider226.get());
                case 377:
                    provider227 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    return new LockscreenGestureLogger((MetricsLogger) provider227.get());
                case 378:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider228 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager10 = (DumpManager) provider228.get();
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionsManagerProvider;
                    NotificationSectionsManager notificationSectionsManager = (NotificationSectionsManager) switchingProvider15.get();
                    delegateFactory90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController8 = (KeyguardBypassController) delegateFactory90.get();
                    delegateFactory91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    return new AmbientState(context17, dumpManager10, notificationSectionsManager, keyguardBypassController8, (StatusBarKeyguardViewManager) delegateFactory91.get(), (LargeScreenShadeInterpolator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenShadeInterpolatorImplProvider.get(), (AvalancheController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.avalancheControllerProvider.get());
                case 379:
                    provider229 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController10 = (ConfigurationController) provider229.get();
                    KeyguardMediaController keyguardMediaController2 = (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get();
                    provider230 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionsFeatureManagerProvider;
                    NotificationSectionsFeatureManager notificationSectionsFeatureManager = (NotificationSectionsFeatureManager) provider230.get();
                    provider231 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaContainerControllerProvider;
                    MediaContainerController mediaContainerController = (MediaContainerController) provider231.get();
                    NotificationRoundnessManager notificationRoundnessManager = (NotificationRoundnessManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRoundnessManagerProvider.get();
                    SectionHeaderNodeControllerImpl m1569$$Nest$mincomingHeaderSectionHeaderController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1569$$Nest$mincomingHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SectionHeaderNodeControllerImpl m1639$$Nest$mpeopleHeaderSectionHeaderController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1639$$Nest$mpeopleHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SectionHeaderNodeControllerImpl m1497$$Nest$malertingHeaderSectionHeaderController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1497$$Nest$malertingHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SectionHeaderNodeControllerImpl headerController = ((DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSilentHeaderSubcomponentProvider.get()).getHeaderController();
                    Preconditions.checkNotNullFromProvides(headerController);
                    return new NotificationSectionsManager(configurationController10, keyguardMediaController2, notificationSectionsFeatureManager, mediaContainerController, notificationRoundnessManager, m1569$$Nest$mincomingHeaderSectionHeaderController, m1639$$Nest$mpeopleHeaderSectionHeaderController, m1497$$Nest$malertingHeaderSectionHeaderController, headerController, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1622$$Nest$mnewsHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1678$$Nest$msocialHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1653$$Nest$mrecsHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1643$$Nest$mpromoHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 380:
                    provider232 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardMediaHostProvider;
                    MediaHost mediaHost = (MediaHost) provider232.get();
                    delegateFactory92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController9 = (KeyguardBypassController) delegateFactory92.get();
                    delegateFactory93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController3 = (SysuiStatusBarStateController) delegateFactory93.get();
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider233 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController11 = (ConfigurationController) provider233.get();
                    provider234 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    SplitShadeStateControllerImpl splitShadeStateControllerImpl2 = (SplitShadeStateControllerImpl) provider234.get();
                    KeyguardMediaControllerLogger m1582$$Nest$mkeyguardMediaControllerLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1582$$Nest$mkeyguardMediaControllerLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider235 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new KeyguardMediaController(mediaHost, keyguardBypassController9, sysuiStatusBarStateController3, context18, configurationController11, splitShadeStateControllerImpl2, m1582$$Nest$mkeyguardMediaControllerLogger, (DumpManager) provider235.get());
                case 381:
                    MediaHost.MediaHostStateHolder mediaHostStateHolder2 = new MediaHost.MediaHostStateHolder();
                    provider236 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager4 = (MediaHierarchyManager) provider236.get();
                    provider237 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager6 = (MediaDataManager) provider237.get();
                    provider238 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider;
                    MediaHostStatesManager mediaHostStatesManager4 = (MediaHostStatesManager) provider238.get();
                    delegateFactory94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider;
                    return MediaModule_ProvidesKeyguardMediaHostFactory.providesKeyguardMediaHost(mediaHostStateHolder2, mediaHierarchyManager4, mediaDataManager6, mediaHostStatesManager4, (MediaCarouselController) delegateFactory94.get());
                case 382:
                    provider239 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardMediaControllerLogBufferFactory.provideKeyguardMediaControllerLogBuffer((LogBufferFactory) provider239.get());
                case 383:
                    provider240 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider240.get();
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new NotificationSectionsFeatureManager(deviceConfigProxy, context19);
                case 384:
                    provider241 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    return new MediaContainerController((LayoutInflater) provider241.get());
                case 385:
                    provider242 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return NotificationRoundnessManager_Factory.newInstance((DumpManager) provider242.get());
                case 386:
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesIncomingHeaderSubcomponentFactory.providesIncomingHeaderSubcomponent(switchingProvider16);
                case 387:
                    return new DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                case 388:
                    switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesPeopleHeaderSubcomponentFactory.providesPeopleHeaderSubcomponent(switchingProvider17);
                case 389:
                    switchingProvider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesAlertingHeaderSubcomponentFactory.providesAlertingHeaderSubcomponent(switchingProvider18);
                case 390:
                    switchingProvider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesSilentHeaderSubcomponentFactory.providesSilentHeaderSubcomponent(switchingProvider19);
                case 391:
                    switchingProvider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesNewsHeaderSubcomponentFactory.providesNewsHeaderSubcomponent(switchingProvider20);
                case 392:
                    switchingProvider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesSocialHeaderSubcomponentFactory.providesSocialHeaderSubcomponent(switchingProvider21);
                case 393:
                    switchingProvider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesRecsHeaderSubcomponentFactory.providesRecsHeaderSubcomponent(switchingProvider22);
                case 394:
                    switchingProvider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider;
                    return NotificationSectionHeadersModule_ProvidesPromoHeaderSubcomponentFactory.providesPromoHeaderSubcomponent(switchingProvider23);
                case 395:
                    provider243 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController12 = (ConfigurationController) provider243.get();
                    context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    SplitShadeInterpolator splitShadeInterpolator = new SplitShadeInterpolator();
                    LargeScreenPortraitShadeInterpolator largeScreenPortraitShadeInterpolator = new LargeScreenPortraitShadeInterpolator();
                    provider244 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    return new LargeScreenShadeInterpolatorImpl(configurationController12, context20, splitShadeInterpolator, largeScreenPortraitShadeInterpolator, (SplitShadeStateControllerImpl) provider244.get());
                case 396:
                    LightBarController lightBarController = (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get();
                    delegateFactory95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters4 = (DozeParameters) delegateFactory95.get();
                    provider245 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager = (AlarmManager) provider245.get();
                    delegateFactory96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController9 = (KeyguardStateController) delegateFactory96.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider18.get();
                    Handler provideHandler2 = GlobalConcurrencyModule_ProvideHandlerFactory.provideHandler();
                    delegateFactory97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor7 = (KeyguardUpdateMonitor) delegateFactory97.get();
                    delegateFactory98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockManager dockManager = (DockManager) delegateFactory98.get();
                    provider246 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController13 = (ConfigurationController) provider246.get();
                    provider247 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    provider248 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter3 = (JavaAdapter) provider248.get();
                    delegateFactory99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController4 = (ScreenOffAnimationController) delegateFactory99.get();
                    provider249 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider;
                    KeyguardUnlockAnimationController keyguardUnlockAnimationController2 = (KeyguardUnlockAnimationController) provider249.get();
                    delegateFactory100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager4 = (StatusBarKeyguardViewManager) delegateFactory100.get();
                    PrimaryBouncerToGoneTransitionViewModel primaryBouncerToGoneTransitionViewModel2 = (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get();
                    AlternateBouncerToGoneTransitionViewModel alternateBouncerToGoneTransitionViewModel = (AlternateBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToGoneTransitionViewModelProvider.get();
                    provider250 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor4 = (KeyguardTransitionInteractor) provider250.get();
                    delegateFactory101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor5 = (KeyguardInteractor) delegateFactory101.get();
                    WallpaperRepositoryImpl wallpaperRepositoryImpl = (WallpaperRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperRepositoryImplProvider.get();
                    provider251 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new ScrimController(lightBarController, dozeParameters4, alarmManager, keyguardStateController9, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17, provideHandler2, keyguardUpdateMonitor7, dockManager, configurationController13, javaAdapter3, screenOffAnimationController4, keyguardUnlockAnimationController2, statusBarKeyguardViewManager4, primaryBouncerToGoneTransitionViewModel2, alternateBouncerToGoneTransitionViewModel, keyguardTransitionInteractor4, keyguardInteractor5, wallpaperRepositoryImpl, (CoroutineDispatcher) provider251.get(), (LargeScreenShadeInterpolator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenShadeInterpolatorImplProvider.get());
                case 397:
                    context21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider252 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter4 = (JavaAdapter) provider252.get();
                    DarkIconDispatcher darkIconDispatcher = (DarkIconDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get();
                    provider253 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController = (BatteryController) provider253.get();
                    provider254 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController2 = (NavigationModeController) provider254.get();
                    StatusBarModeRepositoryImpl statusBarModeRepositoryImpl = (StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get();
                    provider255 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager11 = (DumpManager) provider255.get();
                    provider256 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new LightBarController(context21, javaAdapter4, darkIconDispatcher, batteryController, navigationModeController2, statusBarModeRepositoryImpl, dumpManager11, (DisplayTracker) provider256.get());
                case 398:
                    context22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider17.get();
                    provider257 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new DarkIconDispatcherImpl(context22, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15, (DumpManager) provider257.get());
                case 399:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15(this);
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get4() {
            int displayId;
            Provider provider;
            Context context;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            Provider provider6;
            Provider provider7;
            DelegateFactory delegateFactory;
            DelegateFactory delegateFactory2;
            DelegateFactory delegateFactory3;
            DelegateFactory delegateFactory4;
            DelegateFactory delegateFactory5;
            DelegateFactory delegateFactory6;
            DelegateFactory delegateFactory7;
            Provider provider8;
            DelegateFactory delegateFactory8;
            Provider provider9;
            Provider provider10;
            DelegateFactory delegateFactory9;
            Provider provider11;
            Provider provider12;
            DelegateFactory delegateFactory10;
            DelegateFactory delegateFactory11;
            Provider provider13;
            DelegateFactory delegateFactory12;
            DelegateFactory delegateFactory13;
            Provider provider14;
            Provider provider15;
            DelegateFactory delegateFactory14;
            Provider provider16;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            DelegateFactory delegateFactory15;
            Provider provider20;
            DelegateFactory delegateFactory16;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Provider provider24;
            Context context2;
            DelegateFactory delegateFactory17;
            DelegateFactory delegateFactory18;
            DelegateFactory delegateFactory19;
            DelegateFactory delegateFactory20;
            DelegateFactory delegateFactory21;
            Context context3;
            Provider provider25;
            Provider provider26;
            Provider provider27;
            Provider provider28;
            Provider provider29;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            Context context4;
            DelegateFactory delegateFactory22;
            Provider provider30;
            Provider provider31;
            Provider provider32;
            Provider provider33;
            Provider provider34;
            DelegateFactory delegateFactory23;
            Provider provider35;
            DelegateFactory delegateFactory24;
            Provider provider36;
            QSLogger qSLogger;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            Provider provider40;
            Provider provider41;
            DelegateFactory delegateFactory25;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            DelegateFactory delegateFactory26;
            Provider provider45;
            Provider provider46;
            Provider provider47;
            Provider provider48;
            Provider provider49;
            Provider provider50;
            Provider provider51;
            Provider provider52;
            Provider provider53;
            DelegateFactory delegateFactory27;
            Provider provider54;
            Provider provider55;
            Provider provider56;
            Provider provider57;
            DelegateFactory delegateFactory28;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider3;
            Provider provider58;
            Provider provider59;
            DelegateFactory delegateFactory29;
            Provider provider60;
            DelegateFactory delegateFactory30;
            Provider provider61;
            Provider provider62;
            Provider provider63;
            Provider provider64;
            Provider provider65;
            Provider provider66;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider70;
            DelegateFactory delegateFactory31;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            DelegateFactory delegateFactory32;
            Provider provider71;
            Provider provider72;
            Context context5;
            DelegateFactory delegateFactory33;
            SwitchingProvider switchingProvider6;
            Provider provider73;
            Provider provider74;
            Provider provider75;
            Provider provider76;
            Provider provider77;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider7;
            SwitchingProvider switchingProvider8;
            Provider provider78;
            Provider provider79;
            GlobalSettingsImpl globalSettingsImpl;
            Provider provider80;
            Context context6;
            Provider provider81;
            DelegateFactory delegateFactory34;
            Context context7;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            Provider provider85;
            Provider provider86;
            Provider provider87;
            GlobalSettingsImpl globalSettingsImpl2;
            SwitchingProvider switchingProvider9;
            Provider provider88;
            Provider provider89;
            DelegateFactory delegateFactory35;
            DelegateFactory delegateFactory36;
            DelegateFactory delegateFactory37;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            Provider provider93;
            Provider provider94;
            DelegateFactory delegateFactory38;
            Provider provider95;
            Provider provider96;
            Provider provider97;
            Provider provider98;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider10;
            Provider provider99;
            DelegateFactory delegateFactory39;
            DelegateFactory delegateFactory40;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            SwitchingProvider switchingProvider11;
            DelegateFactory delegateFactory41;
            Context context8;
            Provider provider103;
            DelegateFactory delegateFactory42;
            Provider provider104;
            Context context9;
            Provider provider105;
            DelegateFactory delegateFactory43;
            Provider provider106;
            Context context10;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Context context11;
            Provider provider110;
            Provider provider111;
            Context context12;
            Provider provider112;
            Provider provider113;
            Provider provider114;
            Provider provider115;
            Context context13;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            DelegateFactory delegateFactory44;
            GlobalSettingsImpl globalSettingsImpl3;
            DelegateFactory delegateFactory45;
            DelegateFactory delegateFactory46;
            DelegateFactory delegateFactory47;
            Provider provider123;
            Context context14;
            DelegateFactory delegateFactory48;
            Provider provider124;
            Provider provider125;
            DelegateFactory delegateFactory49;
            Provider provider126;
            Provider provider127;
            Provider provider128;
            Context context15;
            Provider provider129;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider12;
            Context context16;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider13;
            SwitchingProvider switchingProvider14;
            Provider provider130;
            Provider provider131;
            Provider provider132;
            Provider provider133;
            Provider provider134;
            DelegateFactory delegateFactory50;
            Provider provider135;
            Provider provider136;
            DelegateFactory delegateFactory51;
            Provider provider137;
            DelegateFactory delegateFactory52;
            DelegateFactory delegateFactory53;
            Provider provider138;
            Provider provider139;
            Provider provider140;
            Provider provider141;
            DelegateFactory delegateFactory54;
            Provider provider142;
            Provider provider143;
            Context context17;
            Provider provider144;
            Provider provider145;
            Optional optional;
            Provider provider146;
            Provider provider147;
            Provider provider148;
            Provider provider149;
            Provider provider150;
            DelegateFactory delegateFactory55;
            DelegateFactory delegateFactory56;
            Context context18;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider15;
            Provider provider151;
            Context context19;
            Optional optional2;
            DelegateFactory delegateFactory57;
            DelegateFactory delegateFactory58;
            DelegateFactory delegateFactory59;
            Provider provider152;
            Provider provider153;
            Provider provider154;
            DelegateFactory delegateFactory60;
            Provider provider155;
            Provider provider156;
            DelegateFactory delegateFactory61;
            DelegateFactory delegateFactory62;
            NotifPipelineFlags notifPipelineFlags;
            Provider provider157;
            Provider provider158;
            SwitchingProvider switchingProvider16;
            Provider provider159;
            Provider provider160;
            DelegateFactory delegateFactory63;
            DelegateFactory delegateFactory64;
            Provider provider161;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider17;
            Provider provider162;
            DelegateFactory delegateFactory65;
            Provider provider163;
            Provider provider164;
            GlobalSettingsImpl globalSettingsImpl4;
            Optional optional3;
            Provider provider165;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider18;
            DelegateFactory delegateFactory66;
            DelegateFactory delegateFactory67;
            DelegateFactory delegateFactory68;
            DelegateFactory delegateFactory69;
            DelegateFactory delegateFactory70;
            SwitchingProvider switchingProvider19;
            GlobalSettingsImpl globalSettingsImpl5;
            DelegateFactory delegateFactory71;
            Provider provider166;
            Provider provider167;
            GlobalSettingsImpl globalSettingsImpl6;
            Provider provider168;
            DelegateFactory delegateFactory72;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider20;
            Provider provider169;
            DelegateFactory delegateFactory73;
            Provider provider170;
            Provider provider171;
            DelegateFactory delegateFactory74;
            Provider provider172;
            Provider provider173;
            Optional optional4;
            Context context20;
            Provider provider174;
            Provider provider175;
            Provider provider176;
            Provider provider177;
            Provider provider178;
            Provider provider179;
            Provider provider180;
            Provider provider181;
            Provider provider182;
            Provider provider183;
            Provider provider184;
            Context context21;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider21;
            SwitchingProvider switchingProvider22;
            Provider provider185;
            Provider provider186;
            GlobalSettingsImpl globalSettingsImpl7;
            DelegateFactory delegateFactory75;
            Context context22;
            GlobalSettingsImpl globalSettingsImpl8;
            Provider provider187;
            Provider provider188;
            Provider provider189;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider23;
            Provider provider190;
            Provider provider191;
            Provider provider192;
            Provider provider193;
            DelegateFactory delegateFactory76;
            Provider provider194;
            Provider provider195;
            Provider provider196;
            Provider provider197;
            Provider provider198;
            Provider provider199;
            DelegateFactory delegateFactory77;
            Provider provider200;
            Provider provider201;
            DelegateFactory delegateFactory78;
            Provider provider202;
            Provider provider203;
            Provider provider204;
            DelegateFactory delegateFactory79;
            Provider provider205;
            Provider provider206;
            SwitchingProvider switchingProvider24;
            Provider provider207;
            Provider provider208;
            Provider provider209;
            DelegateFactory delegateFactory80;
            Provider provider210;
            DelegateFactory delegateFactory81;
            Provider provider211;
            Provider provider212;
            Provider provider213;
            Provider provider214;
            Provider provider215;
            DelegateFactory delegateFactory82;
            DelegateFactory delegateFactory83;
            Provider provider216;
            DelegateFactory delegateFactory84;
            Provider provider217;
            DelegateFactory delegateFactory85;
            Provider provider218;
            Provider provider219;
            Provider provider220;
            Provider provider221;
            Provider provider222;
            Provider provider223;
            DelegateFactory delegateFactory86;
            DelegateFactory delegateFactory87;
            Context context23;
            Provider provider224;
            Provider provider225;
            Provider provider226;
            DelegateFactory delegateFactory88;
            Provider provider227;
            Provider provider228;
            Provider provider229;
            Context context24;
            DelegateFactory unused;
            Provider unused2;
            Provider unused3;
            Context unused4;
            DelegateFactory unused5;
            Context unused6;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 400:
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModePerDisplayRepositoryFactoryProvider;
                    return new StatusBarModeRepositoryImpl(displayId, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$16) provider.get());
                case 401:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$16(this);
                case 402:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider2.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.letterboxBackgroundProvider;
                    return new LetterboxAppearanceCalculator(context, dumpManager, (LetterboxBackgroundProvider) provider3.get());
                case 403:
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager = (IWindowManager) provider4.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor = (Executor) provider5.get();
                    WallpaperManager m979$$Nest$mwallpaperManager = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m979$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return new LetterboxBackgroundProvider(iWindowManager, executor, m979$$Nest$mwallpaperManager, (Handler) switchingProvider.get());
                case 404:
                    return new OngoingCallRepository((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideOngoingCallLogBufferProvider.get());
                case 405:
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarModule_Companion_ProvideOngoingCallLogBufferFactory.provideOngoingCallLogBuffer((LogBufferFactory) provider6.get());
                case 406:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17(this);
                case 407:
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider;
                    WindowManager windowManager = (WindowManager) provider7.get();
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    Lazy lazy = DoubleCheck.lazy(delegateFactory2);
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory3.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory4.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider;
                    Lazy lazy2 = DoubleCheck.lazy(delegateFactory5);
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory6.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory7.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider8.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m979$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    return new KeyguardUnlockAnimationController(windowManager, m977$$Nest$mmainResources, keyguardStateController, lazy, statusBarKeyguardViewManager, featureFlags, lazy2, sysuiStatusBarStateController, notificationShadeWindowController, powerManager);
                case 408:
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController2 = (SysuiStatusBarStateController) delegateFactory8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider9.get();
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissActionInteractorProvider);
                    BouncerToGoneFlows m1509$$Nest$mbouncerToGoneFlows = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1509$$Nest$mbouncerToGoneFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new PrimaryBouncerToGoneTransitionViewModel(sysuiStatusBarStateController2, primaryBouncerInteractor, m1509$$Nest$mbouncerToGoneFlows, (KeyguardTransitionAnimationFlow) provider10.get());
                case 409:
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl = (KeyguardRepositoryImpl) delegateFactory9.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider11.get();
                    KeyguardDismissInteractor keyguardDismissInteractor = (KeyguardDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissInteractorProvider.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider12.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    DoubleCheck.lazy(delegateFactory10);
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider);
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory11.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider13.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    DoubleCheck.lazy(delegateFactory12);
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    DoubleCheck.lazy(delegateFactory13);
                    return new KeyguardDismissActionInteractor(keyguardRepositoryImpl, keyguardTransitionInteractor, keyguardDismissInteractor, coroutineScope, powerInteractor, alternateBouncerInteractor);
                case 410:
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider14.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider15.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl2 = (KeyguardRepositoryImpl) delegateFactory14.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor2 = (PrimaryBouncerInteractor) provider16.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider;
                    DismissCallbackRegistry dismissCallbackRegistry = (DismissCallbackRegistry) provider18.get();
                    TrustRepositoryImpl trustRepositoryImpl = (TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor2 = (AlternateBouncerInteractor) provider19.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new KeyguardDismissInteractor(coroutineDispatcher, coroutineScope2, keyguardRepositoryImpl2, primaryBouncerInteractor2, selectedUserInteractor, dismissCallbackRegistry, trustRepositoryImpl, alternateBouncerInteractor2, (PowerInteractor) delegateFactory15.get());
                case 411:
                    BouncerToGoneFlows m1509$$Nest$mbouncerToGoneFlows2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1509$$Nest$mbouncerToGoneFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    KeyguardTransitionAnimationFlow keyguardTransitionAnimationFlow = (KeyguardTransitionAnimationFlow) provider20.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new AlternateBouncerToGoneTransitionViewModel(m1509$$Nest$mbouncerToGoneFlows2, keyguardTransitionAnimationFlow, (SysuiStatusBarStateController) delegateFactory16.get());
                case 412:
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider22.get();
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider23.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider24.get();
                    WallpaperManager m979$$Nest$mwallpaperManager2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m979$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new WallpaperRepositoryImpl(coroutineScope3, coroutineDispatcher2, broadcastDispatcher, userRepositoryImpl, m979$$Nest$mwallpaperManager2, context2);
                case 413:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$18(this);
                case 414:
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory17.get();
                    BlurUtils blurUtils = (BlurUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.blurUtilsProvider.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider;
                    BiometricUnlockController biometricUnlockController = (BiometricUnlockController) delegateFactory18.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory19.get();
                    Choreographer choreographer = (Choreographer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesChoreographerProvider.get();
                    WallpaperController wallpaperController = (WallpaperController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperControllerProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController2 = (NotificationShadeWindowController) delegateFactory20.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters = (DozeParameters) delegateFactory21.get();
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    SplitShadeStateControllerImpl splitShadeStateControllerImpl = (SplitShadeStateControllerImpl) provider25.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider26.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    return new NotificationShadeDepthController(statusBarStateController, blurUtils, biometricUnlockController, keyguardStateController2, choreographer, wallpaperController, notificationShadeWindowController2, dozeParameters, context3, splitShadeStateControllerImpl, dumpManager2, (ConfigurationController) provider27.get());
                case 415:
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideCrossWindowBlurListenersProvider;
                    CrossWindowBlurListeners crossWindowBlurListeners = (CrossWindowBlurListeners) provider28.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new BlurUtils(m977$$Nest$mmainResources2, crossWindowBlurListeners, (DumpManager) provider29.get());
                case 416:
                    return new WallpaperController(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m979$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (WallpaperRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperRepositoryImplProvider.get());
                case 417:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19(this);
                case 418:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20(this);
                case 419:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21(this);
                case 420:
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider2.get();
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new NaturalScrollingSettingObserver(context4, handler);
                case 421:
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SwitchingProvider switchingProvider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSImplProvider;
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory22.get();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider;
                    DisplayStateInteractor displayStateInteractor = (DisplayStateInteractor) provider30.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider31.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider32.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider33.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new QSSceneAdapterImpl(daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, switchingProvider25, shadeInteractor, displayStateInteractor, dumpManager3, coroutineDispatcher3, coroutineScope4, (ConfigurationInteractor) provider34.get());
                case 422:
                    RemoteInputQuickSettingsDisabler remoteInputQuickSettingsDisabler = (RemoteInputQuickSettingsDisabler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputQuickSettingsDisablerProvider.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController3 = (SysuiStatusBarStateController) delegateFactory23.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider35.get();
                    MediaHost mediaHost = (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQSMediaHostProvider.get();
                    MediaHost mediaHost2 = (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQuickQSMediaHostProvider.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory24.get();
                    QSDisableFlagsLogger m1647$$Nest$mqSDisableFlagsLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1647$$Nest$mqSDisableFlagsLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider36.get();
                    qSLogger = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.footerActionsControllerProvider;
                    FooterActionsController footerActionsController = (FooterActionsController) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider25;
                    return new QSImpl(remoteInputQuickSettingsDisabler, sysuiStatusBarStateController3, commandQueue, mediaHost, mediaHost2, keyguardBypassController, m1647$$Nest$mqSDisableFlagsLogger, dumpManager4, qSLogger, footerActionsController, (FooterActionsViewModel.Factory) provider38.get(), (LargeScreenShadeInterpolator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenShadeInterpolatorImplProvider.get());
                case 423:
                    MediaHost.MediaHostStateHolder mediaHostStateHolder = new MediaHost.MediaHostStateHolder();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager = (MediaHierarchyManager) provider39.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager = (MediaDataManager) provider40.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider;
                    MediaHostStatesManager mediaHostStatesManager = (MediaHostStatesManager) provider41.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider;
                    return MediaModule_ProvidesQSMediaHostFactory.providesQSMediaHost(mediaHostStateHolder, mediaHierarchyManager, mediaDataManager, mediaHostStatesManager, (MediaCarouselController) delegateFactory25.get());
                case 424:
                    MediaHost.MediaHostStateHolder mediaHostStateHolder2 = new MediaHost.MediaHostStateHolder();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager2 = (MediaHierarchyManager) provider42.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager2 = (MediaDataManager) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider;
                    MediaHostStatesManager mediaHostStatesManager2 = (MediaHostStatesManager) provider44.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider;
                    return MediaModule_ProvidesQuickQSMediaHostFactory.providesQuickQSMediaHost(mediaHostStateHolder2, mediaHierarchyManager2, mediaDataManager2, mediaHostStatesManager2, (MediaCarouselController) delegateFactory26.get());
                case 425:
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideQSFragmentDisableLogBufferFactory.provideQSFragmentDisableLogBuffer((LogBufferFactory) provider45.get());
                case 426:
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideQuickSettingsLogBufferFactory.provideQuickSettingsLogBuffer((LogBufferFactory) provider46.get(), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get());
                case 427:
                    return new QSPipelineFlagsRepository();
                case 428:
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideQSConfigLogBufferFactory.provideQSConfigLogBuffer((LogBufferFactory) provider47.get());
                case 429:
                    return new FooterActionsController((FgsManagerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fgsManagerControllerImplProvider.get());
                case 430:
                    unused6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor2 = (Executor) provider48.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor3 = (Executor) provider49.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider50.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    IActivityManager iActivityManager = (IActivityManager) provider51.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideJobSchedulerProvider;
                    JobScheduler jobScheduler = (JobScheduler) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider53.get();
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory27.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider54.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider55.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider56.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager5 = (DumpManager) provider57.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    return new FgsManagerControllerImpl(executor2, executor3, systemClock, iActivityManager, jobScheduler, packageManager, userTracker, deviceConfigProxy, dialogTransitionAnimator, broadcastDispatcher2, dumpManager5, (SystemUIDialog.Factory) delegateFactory28.get());
                case 431:
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context25 = (Context) switchingProvider3.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.footerActionsInteractorImplProvider;
                    FooterActionsInteractor footerActionsInteractor = (FooterActionsInteractor) provider59.get();
                    DelegateFactory delegateFactory89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsDialogLiteProvider;
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory29.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isPMLiteEnabledProvider;
                    return new FooterActionsViewModel.Factory(context25, falsingManager, footerActionsInteractor, delegateFactory89, activityStarter, ((Boolean) provider60.get()).booleanValue());
                case 432:
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory30.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider61.get();
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider62.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSecurityFooterUtilsProvider;
                    QSSecurityFooterUtils qSSecurityFooterUtils = (QSSecurityFooterUtils) provider64.get();
                    FgsManagerController fgsManagerController = (FgsManagerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fgsManagerControllerImplProvider.get();
                    UserSwitcherInteractor userSwitcherInteractor = (UserSwitcherInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityRepositoryImplProvider;
                    SecurityRepositoryImpl securityRepositoryImpl = (SecurityRepositoryImpl) provider65.get();
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.foregroundServicesRepositoryImplProvider;
                    ForegroundServicesRepositoryImpl foregroundServicesRepositoryImpl = (ForegroundServicesRepositoryImpl) provider66.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherRepositoryImplProvider;
                    UserSwitcherRepositoryImpl userSwitcherRepositoryImpl = (UserSwitcherRepositoryImpl) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new FooterActionsInteractorImpl(activityStarter2, metricsLogger, uiEventLogger, deviceProvisionedController, qSSecurityFooterUtils, fgsManagerController, userSwitcherInteractor, securityRepositoryImpl, foregroundServicesRepositoryImpl, userSwitcherRepositoryImpl, broadcastDispatcher3, (CoroutineDispatcher) provider69.get());
                case 433:
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context26 = (Context) switchingProvider4.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) provider70.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory31.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider5.get();
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory32.get();
                    SecurityController securityController = (SecurityController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityControllerImplProvider.get();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper = (Looper) provider71.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    return QSSecurityFooterUtils_Factory.newInstance(context26, devicePolicyManager, userTracker2, handler2, activityStarter3, securityController, looper, (DialogTransitionAnimator) provider72.get());
                case 434:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory33.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider6.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor4 = (Executor) provider74.get();
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor5 = (Executor) provider75.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new SecurityControllerImpl(context5, userTracker3, handler3, broadcastDispatcher4, executor4, executor5, (DumpManager) provider76.get());
                case 435:
                    SecurityController securityController2 = (SecurityController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityControllerImplProvider.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new SecurityRepositoryImpl(securityController2, (CoroutineDispatcher) provider77.get());
                case 436:
                    return new ForegroundServicesRepositoryImpl((FgsManagerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fgsManagerControllerImplProvider.get());
                case 437:
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context27 = (Context) switchingProvider7.get();
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler4 = (Handler) switchingProvider8.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider78.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider79.get();
                    UserSwitcherController userSwitcherController = (UserSwitcherController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherControllerProvider.get();
                    UserInfoControllerImpl userInfoControllerImpl = (UserInfoControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userInfoControllerImplProvider.get();
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    return new UserSwitcherRepositoryImpl(context27, handler4, coroutineDispatcher4, userManager, userSwitcherController, userInfoControllerImpl, globalSettingsImpl, (UserRepositoryImpl) provider80.get());
                case 438:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor6 = (Executor) provider81.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new UserInfoControllerImpl(context6, (UserTracker) delegateFactory34.get(), executor6);
                case 439:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsComponentProvider;
                    GlobalActions.GlobalActionsManager globalActionsManager = (GlobalActions.GlobalActionsManager) provider82.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider;
                    AudioManager audioManager = (AudioManager) provider83.get();
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager2 = (DevicePolicyManager) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider85.get();
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider;
                    TelephonyListenerManager telephonyListenerManager = (TelephonyListenerManager) provider87.get();
                    globalSettingsImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider9.get();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider88.get();
                    Resources m977$$Nest$mmainResources3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider89.get();
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter4 = (ActivityStarter) delegateFactory35.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory36.get();
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory37.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager2 = (UserManager) provider90.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider;
                    TrustManager trustManager = (TrustManager) provider91.get();
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    IActivityManager iActivityManager2 = (IActivityManager) provider92.get();
                    TelecomManager telecomManager = (TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get();
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger2 = (MetricsLogger) provider93.get();
                    SysuiColorExtractor sysuiColorExtractor = (SysuiColorExtractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysuiColorExtractorProvider.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService = (IStatusBarService) provider94.get();
                    LightBarController lightBarController = (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get();
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController3 = (NotificationShadeWindowController) delegateFactory38.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider;
                    StatusBarWindowControllerImpl statusBarWindowControllerImpl = (StatusBarWindowControllerImpl) provider95.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager2 = (IWindowManager) provider96.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor7 = (Executor) provider97.get();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider98.get();
                    RingerModeTrackerImpl ringerModeTrackerImpl = (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get();
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler5 = (Handler) switchingProvider10.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager2 = (PackageManager) provider99.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory39.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory40.get();
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator2 = (DialogTransitionAnimator) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new GlobalActionsDialogLite(context7, globalActionsManager, audioManager, devicePolicyManager2, lockPatternUtils, broadcastDispatcher5, telephonyListenerManager, globalSettingsImpl2, secureSettings, vibratorHelper, m977$$Nest$mmainResources3, configurationController, activityStarter4, userTracker4, keyguardStateController3, userManager2, trustManager, iActivityManager2, telecomManager, metricsLogger2, sysuiColorExtractor, iStatusBarService, lightBarController, notificationShadeWindowController3, statusBarWindowControllerImpl, iWindowManager2, executor7, uiEventLogger2, ringerModeTrackerImpl, handler5, packageManager2, shadeController, keyguardUpdateMonitor, dialogTransitionAnimator2, (SelectedUserInteractor) provider101.get(), (GlobalActionsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsInteractorProvider.get());
                case 440:
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider102.get();
                    ExtensionControllerImpl extensionControllerImpl = (ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get();
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsImplProvider;
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    return new GlobalActionsComponent(commandQueue2, extensionControllerImpl, switchingProvider11, (StatusBarKeyguardViewManager) delegateFactory41.get());
                case 441:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    LeakDetector leakDetector = (LeakDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLeakDetectorProvider.get();
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    PluginManager pluginManager = (PluginManager) provider103.get();
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    return new ExtensionControllerImpl(context8, leakDetector, pluginManager);
                case 442:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue3 = (CommandQueue) provider105.get();
                    GlobalActionsDialogLite globalActionsDialogLite = (GlobalActionsDialogLite) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsDialogLiteProvider.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory43.get();
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    return new GlobalActionsImpl(context9, commandQueue3, globalActionsDialogLite, keyguardStateController4, (DeviceProvisionedController) provider106.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1676$$Nest$mshutdownUi(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 443:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController2 = (ConfigurationController) provider107.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager6 = (DumpManager) provider108.get();
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    return new SysuiColorExtractor(context10, configurationController2, dumpManager6, DoubleCheck.lazy(provider109));
                case 444:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider110.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider24;
                    return StatusBarModule_Companion_StatusBarWindowControllerFactory.statusBarWindowController(context11, viewCaptureAwareWindowManager, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$22) provider111.get());
                case 445:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$22(this);
                case 446:
                    return new StatusBarWindowViewInflaterImpl();
                case 447:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController3 = (ConfigurationController) provider112.get();
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager7 = (DumpManager) provider113.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry = (CommandRegistry) provider114.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICutoutProvider;
                    return new StatusBarContentInsetsProvider(context12, configurationController3, dumpManager7, commandRegistry, (SysUICutoutProvider) provider115.get());
                case 448:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new SysUICutoutProvider(context13, new CameraProtectionLoaderImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context));
                case 449:
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider23;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23) provider116.get();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController4 = (ConfigurationController) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new FragmentService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23, configurationController4, (DumpManager) provider118.get());
                case 450:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23(this);
                case 451:
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider;
                    AudioManager audioManager2 = (AudioManager) provider119.get();
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher6 = (BroadcastDispatcher) provider120.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new RingerModeTrackerImpl(audioManager2, broadcastDispatcher6, (Executor) provider121.get());
                case 452:
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsRepositoryProvider;
                    return new GlobalActionsInteractor((GlobalActionsRepository) provider122.get());
                case 453:
                    return new GlobalActionsRepository();
                case 454:
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags2 = (FeatureFlags) delegateFactory44.get();
                    globalSettingsImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    return Boolean.valueOf(QSFlagsModule.isPMLiteEnabled(featureFlags2, globalSettingsImpl3));
                case 455:
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) delegateFactory45.get();
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController5 = (KeyguardStateController) delegateFactory46.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return DynamicPrivacyController_Factory.newInstance(notificationLockscreenUserManager, keyguardStateController5, (StatusBarStateController) delegateFactory47.get());
                case 456:
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideShadeLogBufferFactory.provideShadeLogBuffer((LogBufferFactory) provider123.get());
                case 457:
                    return new FlingAnimationUtils.Builder(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 458:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController4 = (NotificationShadeWindowController) delegateFactory48.get();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController5 = (ConfigurationController) provider124.get();
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider125.get();
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor2 = (ShadeInteractor) delegateFactory49.get();
                    unused5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter = (JavaAdapter) provider126.get();
                    UnlockedScreenOffAnimationController unlockedScreenOffAnimationController = (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor3 = (PrimaryBouncerInteractor) provider127.get();
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    return new StatusBarTouchableRegionManager(context14, notificationShadeWindowController4, configurationController5, headsUpManager, shadeInteractor2, javaAdapter, unlockedScreenOffAnimationController, primaryBouncerInteractor3, (AlternateBouncerInteractor) provider128.get());
                case 459:
                    BindEventManagerImpl bindEventManagerImpl = (BindEventManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventManagerImplProvider.get();
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    CommonNotifCollection commonNotifCollection = (CommonNotifCollection) provider129.get();
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return new ConversationNotificationManager(bindEventManagerImpl, context15, commonNotifCollection, (Handler) switchingProvider12.get());
                case 460:
                    return new BindEventManagerImpl();
                case 461:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler6 = (Handler) switchingProvider13.get();
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler7 = (Handler) switchingProvider14.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter2 = (JavaAdapter) provider130.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider131.get();
                    HighPriorityProvider highPriorityProvider = (HighPriorityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.highPriorityProvider.get();
                    INotificationManager iNotificationManager = (INotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideINotificationManagerProvider.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager3 = (UserManager) provider132.get();
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider;
                    PeopleSpaceWidgetManager peopleSpaceWidgetManager = (PeopleSpaceWidgetManager) provider133.get();
                    LauncherApps launcherApps = (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get();
                    ShortcutManager shortcutManager = (ShortcutManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShortcutManagerProvider.get();
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.channelEditorDialogControllerProvider;
                    ChannelEditorDialogController channelEditorDialogController = (ChannelEditorDialogController) provider134.get();
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserContextProvider userContextProvider = (UserContextProvider) delegateFactory50.get();
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantFeedbackControllerProvider;
                    AssistantFeedbackController assistantFeedbackController = (AssistantFeedbackController) provider135.get();
                    Optional optional5 = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBubblesManagerProvider.get();
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger3 = (UiEventLogger) provider136.get();
                    OnUserInteractionCallbackImpl onUserInteractionCallbackImpl = (OnUserInteractionCallbackImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.onUserInteractionCallbackImplProvider.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController2 = (ShadeController) delegateFactory51.get();
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider;
                    WindowRootViewVisibilityInteractor windowRootViewVisibilityInteractor = (WindowRootViewVisibilityInteractor) provider137.get();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager2 = (NotificationLockscreenUserManager) delegateFactory52.get();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) delegateFactory53.get();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService2 = (IStatusBarService) provider138.get();
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController2 = (DeviceProvisionedController) provider139.get();
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger3 = (MetricsLogger) provider140.get();
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager2 = (HeadsUpManager) provider141.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    return new NotificationGutsManager(context16, handler6, handler7, javaAdapter2, accessibilityManager, highPriorityProvider, iNotificationManager, userManager3, peopleSpaceWidgetManager, launcherApps, shortcutManager, channelEditorDialogController, userContextProvider, assistantFeedbackController, optional5, uiEventLogger3, onUserInteractionCallbackImpl, shadeController2, windowRootViewVisibilityInteractor, notificationLockscreenUserManager2, statusBarStateController2, iStatusBarService2, deviceProvisionedController2, metricsLogger3, headsUpManager2, (ActivityStarter) delegateFactory54.get());
                case 462:
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleNotificationIdentifierImplProvider;
                    return new HighPriorityProvider((PeopleNotificationIdentifierImpl) provider142.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get());
                case 463:
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPersonExtractorPluginBoundaryProvider;
                    return new PeopleNotificationIdentifierImpl((NotificationPersonExtractorPluginBoundary) provider143.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get());
                case 464:
                    return new NotificationPersonExtractorPluginBoundary((ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get());
                case 465:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Optional optional6 = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAppWidgetManagerProvider.get();
                    LauncherApps launcherApps2 = (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get();
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    CommonNotifCollection commonNotifCollection2 = (CommonNotifCollection) provider144.get();
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager3 = (PackageManager) provider145.get();
                    optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager4 = (UserManager) provider146.get();
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager = (NotificationManager) provider147.get();
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher7 = (BroadcastDispatcher) provider148.get();
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor8 = (Executor) provider149.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager8 = (DumpManager) provider150.get();
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker5 = (UserTracker) delegateFactory55.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    return new PeopleSpaceWidgetManager(context17, optional6, launcherApps2, commonNotifCollection2, packageManager3, optional, userManager4, notificationManager, broadcastDispatcher7, executor8, dumpManager8, userTracker5, (KeyguardUpdateMonitor) delegateFactory56.get());
                case 466:
                    context18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new ChannelEditorDialogController(context18, (INotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideINotificationManagerProvider.get(), new ChannelEditorDialog.Builder());
                case 467:
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler8 = (Handler) switchingProvider15.get();
                    unused4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    return new AssistantFeedbackController(handler8, (DeviceConfigProxy) provider151.get());
                case 468:
                    context19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    optional2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController5 = (NotificationShadeWindowController) delegateFactory57.get();
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController6 = (KeyguardStateController) delegateFactory58.get();
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController3 = (ShadeController) delegateFactory59.get();
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService3 = (IStatusBarService) provider152.get();
                    INotificationManager iNotificationManager2 = (INotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideINotificationManagerProvider.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider;
                    IDreamManager iDreamManager = (IDreamManager) provider153.get();
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider;
                    NotificationVisibilityProvider notificationVisibilityProvider = (NotificationVisibilityProvider) provider154.get();
                    VisualInterruptionDecisionProvider visualInterruptionDecisionProvider = (VisualInterruptionDecisionProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVisualInterruptionDecisionProvider.get();
                    ZenModeController zenModeController = (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager3 = (NotificationLockscreenUserManager) delegateFactory60.get();
                    SensitiveNotificationProtectionController sensitiveNotificationProtectionController = (SensitiveNotificationProtectionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensitiveNotificationProtectionControllerImplProvider.get();
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    CommonNotifCollection commonNotifCollection3 = (CommonNotifCollection) provider155.get();
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    NotifPipeline notifPipeline = (NotifPipeline) provider156.get();
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    SysUiState sysUiState = (SysUiState) delegateFactory61.get();
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags3 = (FeatureFlags) delegateFactory62.get();
                    notifPipelineFlags = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor9 = (Executor) provider157.get();
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    return SystemUIModule_ProvideBubblesManagerFactory.provideBubblesManager(context19, optional2, notificationShadeWindowController5, keyguardStateController6, shadeController3, iStatusBarService3, iNotificationManager2, iDreamManager, notificationVisibilityProvider, visualInterruptionDecisionProvider, zenModeController, notificationLockscreenUserManager3, sensitiveNotificationProtectionController, commonNotifCollection3, notifPipeline, sysUiState, featureFlags3, notifPipelineFlags, executor9, (Executor) provider158.get());
                case 469:
                    unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInterruptStateProviderImplProvider;
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualInterruptionDecisionProviderImplProvider;
                    return NotificationsModule_ProvideVisualInterruptionDecisionProviderFactory.provideVisualInterruptionDecisionProvider(switchingProvider16);
                case 470:
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager2 = (PowerManager) provider159.get();
                    AmbientDisplayConfiguration m973$$Nest$mambientDisplayConfiguration = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m973$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController = (BatteryController) provider160.get();
                    delegateFactory63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController3 = (StatusBarStateController) delegateFactory63.get();
                    delegateFactory64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController7 = (KeyguardStateController) delegateFactory64.get();
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager3 = (HeadsUpManager) provider161.get();
                    NotificationInterruptLogger m1631$$Nest$mnotificationInterruptLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1631$$Nest$mnotificationInterruptLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler9 = (Handler) switchingProvider17.get();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    KeyguardNotificationVisibilityProviderImpl keyguardNotificationVisibilityProviderImpl = (KeyguardNotificationVisibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardNotificationVisibilityProviderImplProvider.get();
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger4 = (UiEventLogger) provider162.get();
                    delegateFactory65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker6 = (UserTracker) delegateFactory65.get();
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController3 = (DeviceProvisionedController) provider163.get();
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock2 = (SystemClock) provider164.get();
                    globalSettingsImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    EventLogImpl eventLogImpl = (EventLogImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventLogProvider.get();
                    optional3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    return new NotificationInterruptStateProviderImpl(powerManager2, m973$$Nest$mambientDisplayConfiguration, batteryController, statusBarStateController3, keyguardStateController7, headsUpManager3, m1631$$Nest$mnotificationInterruptLogger, handler9, keyguardNotificationVisibilityProviderImpl, uiEventLogger4, userTracker6, deviceProvisionedController3, systemClock2, globalSettingsImpl4, eventLogImpl, optional3);
                case 471:
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideNotificationInterruptLogBufferFactory.provideNotificationInterruptLogBuffer((LogBufferFactory) provider165.get());
                case 472:
                    switchingProvider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler10 = (Handler) switchingProvider18.get();
                    delegateFactory66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController8 = (KeyguardStateController) delegateFactory66.get();
                    delegateFactory67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager4 = (NotificationLockscreenUserManager) delegateFactory67.get();
                    delegateFactory68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor2 = (KeyguardUpdateMonitor) delegateFactory68.get();
                    HighPriorityProvider highPriorityProvider2 = (HighPriorityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.highPriorityProvider.get();
                    delegateFactory69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController4 = (SysuiStatusBarStateController) delegateFactory69.get();
                    delegateFactory70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker7 = (UserTracker) delegateFactory70.get();
                    switchingProvider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider19.get();
                    globalSettingsImpl5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    delegateFactory71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new KeyguardNotificationVisibilityProviderImpl(handler10, keyguardStateController8, notificationLockscreenUserManager4, keyguardUpdateMonitor2, highPriorityProvider2, sysuiStatusBarStateController4, userTracker7, secureSettings2, globalSettingsImpl5);
                case 473:
                    return new EventLogImpl();
                case 474:
                    AmbientDisplayConfiguration m973$$Nest$mambientDisplayConfiguration2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m973$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    BatteryController batteryController2 = (BatteryController) provider166.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController4 = (DeviceProvisionedController) provider167.get();
                    EventLogImpl eventLogImpl2 = (EventLogImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventLogProvider.get();
                    globalSettingsImpl6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager4 = (HeadsUpManager) provider168.get();
                    KeyguardNotificationVisibilityProviderImpl keyguardNotificationVisibilityProviderImpl2 = (KeyguardNotificationVisibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardNotificationVisibilityProviderImplProvider.get();
                    delegateFactory72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController9 = (KeyguardStateController) delegateFactory72.get();
                    VisualInterruptionDecisionLogger visualInterruptionDecisionLogger = new VisualInterruptionDecisionLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationInterruptLogBufferProvider.get());
                    switchingProvider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler11 = (Handler) switchingProvider20.get();
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager3 = (PowerManager) provider169.get();
                    delegateFactory73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController4 = (StatusBarStateController) delegateFactory73.get();
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock3 = (SystemClock) provider170.get();
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger5 = (UiEventLogger) provider171.get();
                    delegateFactory74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker8 = (UserTracker) delegateFactory74.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.avalancheProvider;
                    AvalancheProvider avalancheProvider = (AvalancheProvider) provider172.get();
                    SystemSettingsImpl m1700$$Nest$msystemSettingsImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1700$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager4 = (PackageManager) provider173.get();
                    optional4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    context20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    return new VisualInterruptionDecisionProviderImpl(m973$$Nest$mambientDisplayConfiguration2, batteryController2, deviceProvisionedController4, eventLogImpl2, globalSettingsImpl6, headsUpManager4, keyguardNotificationVisibilityProviderImpl2, keyguardStateController9, visualInterruptionDecisionLogger, handler11, powerManager3, statusBarStateController4, systemClock3, uiEventLogger5, userTracker8, avalancheProvider, m1700$$Nest$msystemSettingsImpl, packageManager4, optional4, context20, (NotificationManager) provider174.get(), (NotificationSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationSettingsInteractorProvider.get());
                case 475:
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher8 = (BroadcastDispatcher) provider175.get();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new AvalancheProvider(broadcastDispatcher8, (UiEventLogger) provider176.get());
                case 476:
                    return NotificationSettingsInteractorModule_ProvideNotificationSettingsInteractorFactory.provideNotificationSettingsInteractor((NotificationSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationSettingsRepositoryProvider.get());
                case 477:
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider177.get();
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider178.get();
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSecureSettingsRepositoryProvider;
                    SecureSettingsRepositoryImpl secureSettingsRepositoryImpl = (SecureSettingsRepositoryImpl) provider179.get();
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemSettingsRepositoryProvider;
                    return NotificationSettingsRepositoryModule_ProvideNotificationSettingsRepositoryFactory.provideNotificationSettingsRepository(coroutineScope5, coroutineDispatcher5, secureSettingsRepositoryImpl, (SystemSettingsRepositoryImpl) provider180.get());
                case 478:
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver = (ContentResolver) provider181.get();
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return SecureSettingsRepositoryModule_ProvideSecureSettingsRepositoryFactory.provideSecureSettingsRepository(contentResolver, (CoroutineDispatcher) provider182.get());
                case 479:
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver2 = (ContentResolver) provider183.get();
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return SystemSettingsRepositoryModule_ProvideSystemSettingsRepositoryFactory.provideSystemSettingsRepository(contentResolver2, (CoroutineDispatcher) provider184.get());
                case 480:
                    context21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    switchingProvider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler12 = (Handler) switchingProvider21.get();
                    switchingProvider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler13 = (Handler) switchingProvider22.get();
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher9 = (BroadcastDispatcher) provider185.get();
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager9 = (DumpManager) provider186.get();
                    globalSettingsImpl7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    delegateFactory75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ZenModeControllerImpl(context21, handler12, handler13, broadcastDispatcher9, dumpManager9, globalSettingsImpl7, (UserTracker) delegateFactory75.get());
                case 481:
                    context22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    globalSettingsImpl8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    MediaProjectionManager mediaProjectionManager = (MediaProjectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getSystemService(MediaProjectionManager.class);
                    Preconditions.checkNotNullFromProvides(mediaProjectionManager);
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider;
                    IActivityManager iActivityManager3 = (IActivityManager) provider187.get();
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager5 = (PackageManager) provider188.get();
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager = (TelephonyManager) provider189.get();
                    switchingProvider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler14 = (Handler) switchingProvider23.get();
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return new SensitiveNotificationProtectionControllerImpl(context22, globalSettingsImpl8, mediaProjectionManager, iActivityManager3, packageManager5, telephonyManager, handler14, (Executor) provider190.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1661$$Nest$msensitiveNotificationProtectionControllerLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 482:
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideSensitiveNotificationProtectionLogBufferFactory.provideSensitiveNotificationProtectionLogBuffer((LogBufferFactory) provider191.get());
                case 483:
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider;
                    NotificationVisibilityProvider notificationVisibilityProvider2 = (NotificationVisibilityProvider) provider192.get();
                    NotifCollection notifCollection = (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get();
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager5 = (HeadsUpManager) provider193.get();
                    delegateFactory76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController5 = (StatusBarStateController) delegateFactory76.get();
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityCoordinatorProvider;
                    return new OnUserInteractionCallbackImpl(notificationVisibilityProvider2, notifCollection, headsUpManager5, statusBarStateController5, (VisualStabilityCoordinator) provider194.get());
                case 484:
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider195.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager10 = (DumpManager) provider196.get();
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager6 = (HeadsUpManager) provider197.get();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider;
                    ShadeAnimationInteractor shadeAnimationInteractor = (ShadeAnimationInteractor) provider198.get();
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter3 = (JavaAdapter) provider199.get();
                    SeenNotificationsInteractor seenNotificationsInteractor = (SeenNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.seenNotificationsInteractorProvider.get();
                    delegateFactory77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController6 = (StatusBarStateController) delegateFactory77.get();
                    VisibilityLocationProvider visibilityLocationProvider = (VisibilityLocationProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visibilityLocationProviderDelegatorProvider.get();
                    VisualStabilityProvider visualStabilityProvider = (VisualStabilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityProvider.get();
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider;
                    WakefulnessLifecycle wakefulnessLifecycle = (WakefulnessLifecycle) provider200.get();
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider201.get();
                    delegateFactory78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor3 = (ShadeInteractor) delegateFactory78.get();
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new VisualStabilityCoordinator(delayableExecutor, dumpManager10, headsUpManager6, shadeAnimationInteractor, javaAdapter3, seenNotificationsInteractor, statusBarStateController6, visibilityLocationProvider, visualStabilityProvider, wakefulnessLifecycle, communalSceneInteractor, shadeInteractor3, (KeyguardTransitionInteractor) provider202.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1708$$Nest$mvisualStabilityCoordinatorLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 485:
                    unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationInteractorSceneContainerImplProvider;
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationInteractorLegacyImplProvider;
                    return ShadeModule_Companion_ProvideShadeAnimationInteractorFactory.provideShadeAnimationInteractor(provider203);
                case 486:
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider204.get();
                    ShadeAnimationRepository shadeAnimationRepository = (ShadeAnimationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationRepositoryProvider.get();
                    delegateFactory79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new ShadeAnimationInteractorSceneContainerImpl(coroutineScope6, shadeAnimationRepository, (SceneInteractor) delegateFactory79.get());
                case 487:
                    return new ShadeAnimationRepository();
                case 488:
                    ShadeAnimationRepository shadeAnimationRepository2 = (ShadeAnimationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationRepositoryProvider.get();
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    return new ShadeAnimationInteractorLegacyImpl(shadeAnimationRepository2, (ShadeRepository) provider205.get());
                case 489:
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider206.get();
                    ActiveNotificationListRepository activeNotificationListRepository = (ActiveNotificationListRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationListRepositoryProvider.get();
                    switchingProvider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new SeenNotificationsInteractor(coroutineDispatcher6, activeNotificationListRepository, (SecureSettings) switchingProvider24.get());
                case 490:
                    return new VisibilityLocationProviderDelegator();
                case 491:
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideVisualStabilityLogBufferFactory.provideVisualStabilityLogBuffer((LogBufferFactory) provider207.get());
                case 492:
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider208.get();
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityRepositoryProvider;
                    WindowRootViewVisibilityRepository windowRootViewVisibilityRepository = (WindowRootViewVisibilityRepository) provider209.get();
                    delegateFactory80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl3 = (KeyguardRepositoryImpl) delegateFactory80.get();
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager7 = (HeadsUpManager) provider210.get();
                    delegateFactory81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory81.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor = (ActiveNotificationsInteractor) provider211.get();
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new WindowRootViewVisibilityInteractor(coroutineScope7, windowRootViewVisibilityRepository, keyguardRepositoryImpl3, headsUpManager7, powerInteractor2, activeNotificationsInteractor);
                case 493:
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    IStatusBarService iStatusBarService4 = (IStatusBarService) provider212.get();
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    return new WindowRootViewVisibilityRepository(iStatusBarService4, (Executor) provider213.get());
                case 494:
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationsQuickSettingsContainerProvider;
                    NotificationsQuickSettingsContainer notificationsQuickSettingsContainer = (NotificationsQuickSettingsContainer) provider214.get();
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController = (NavigationModeController) provider215.get();
                    delegateFactory82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService = (OverviewProxyService) delegateFactory82.get();
                    ShadeHeaderController shadeHeaderController = (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get();
                    delegateFactory83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor4 = (ShadeInteractor) delegateFactory83.get();
                    FragmentService fragmentService = (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get();
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider216.get();
                    delegateFactory84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory84.get();
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    return new NotificationsQSContainerController(notificationsQuickSettingsContainer, navigationModeController, overviewProxyService, shadeHeaderController, shadeInteractor4, fragmentService, delayableExecutor2, notificationStackScrollLayoutController, (SplitShadeStateControllerImpl) provider217.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenHeaderHelperProvider));
                case 495:
                    delegateFactory85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    return ShadeViewProviderModule_Companion_ProvidesNotificationsQuickSettingsContainerFactory.providesNotificationsQuickSettingsContainer((NotificationShadeWindowView) delegateFactory85.get());
                case 496:
                    MotionLayout motionLayout = (MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get();
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController = (StatusBarIconController) provider218.get();
                    TintedIconManager.Factory factory = (TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider27.get();
                    HeaderPrivacyIconsController m1564$$Nest$mheaderPrivacyIconsController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1564$$Nest$mheaderPrivacyIconsController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    StatusBarContentInsetsProvider statusBarContentInsetsProvider = (StatusBarContentInsetsProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarContentInsetsProvider.get();
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController6 = (ConfigurationController) provider219.get();
                    VariableDateViewController.Factory m1706$$Nest$mvariableDateViewControllerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1706$$Nest$mvariableDateViewControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBatteryMeterViewControllerProvider;
                    BatteryMeterViewController batteryMeterViewController = (BatteryMeterViewController) provider220.get();
                    provider221 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager11 = (DumpManager) provider221.get();
                    ShadeCarrierGroupController.Builder m1670$$Nest$mshadeCarrierGroupControllerBuilder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1670$$Nest$mshadeCarrierGroupControllerBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider222 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCombinedShadeHeadersConstraintManagerProvider;
                    CombinedShadeHeadersConstraintManagerImpl combinedShadeHeadersConstraintManagerImpl = (CombinedShadeHeadersConstraintManagerImpl) provider222.get();
                    provider223 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController = (DemoModeController) provider223.get();
                    QsBatteryModeController m1651$$Nest$mqsBatteryModeController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1651$$Nest$mqsBatteryModeController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    NextAlarmController nextAlarmController = (NextAlarmController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nextAlarmControllerImplProvider.get();
                    delegateFactory86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    return new ShadeHeaderController(motionLayout, statusBarIconController, factory, m1564$$Nest$mheaderPrivacyIconsController, statusBarContentInsetsProvider, configurationController6, m1706$$Nest$mvariableDateViewControllerFactory, batteryMeterViewController, dumpManager11, m1670$$Nest$mshadeCarrierGroupControllerBuilder, combinedShadeHeadersConstraintManagerImpl, demoModeController, m1651$$Nest$mqsBatteryModeController, nextAlarmController, (ActivityStarter) delegateFactory86.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1695$$Nest$mstatusOverlayHoverListenerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 497:
                    delegateFactory87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    return ShadeViewProviderModule_Companion_ProvidesShadeHeaderViewFactory.providesShadeHeaderView((NotificationShadeWindowView) delegateFactory87.get());
                case 498:
                    context23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider224 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue4 = (CommandQueue) provider224.get();
                    provider225 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController2 = (DemoModeController) provider225.get();
                    provider226 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController7 = (ConfigurationController) provider226.get();
                    delegateFactory88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService = (TunerService) delegateFactory88.get();
                    provider227 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager12 = (DumpManager) provider227.get();
                    provider228 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideStatusBarIconListProvider;
                    StatusBarIconList statusBarIconList = (StatusBarIconList) provider228.get();
                    StatusBarPipelineFlags statusBarPipelineFlags = (StatusBarPipelineFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarPipelineFlagsProvider.get();
                    provider229 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindableIconsRegistryImplProvider;
                    return new StatusBarIconControllerImpl(context23, commandQueue4, demoModeController2, configurationController7, tunerService, dumpManager12, statusBarIconList, statusBarPipelineFlags, (BindableIconsRegistryImpl) provider229.get());
                case 499:
                    context24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return CentralSurfacesDependenciesModule_ProvideStatusBarIconListFactory.provideStatusBarIconList(context24);
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get5() {
            Context context;
            DelegateFactory delegateFactory;
            Provider provider;
            Context context2;
            Provider provider2;
            Context context3;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            Provider provider6;
            Provider provider7;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Provider provider24;
            Provider provider25;
            Context context4;
            DelegateFactory delegateFactory2;
            Provider provider26;
            Provider provider27;
            Provider provider28;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            Provider provider32;
            Provider provider33;
            Context context5;
            Provider provider34;
            Provider provider35;
            Provider provider36;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            DelegateFactory delegateFactory3;
            Provider provider40;
            Provider provider41;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            Provider provider45;
            Context context6;
            Provider provider46;
            Provider provider47;
            Context context7;
            Provider provider48;
            Provider provider49;
            Provider provider50;
            Provider provider51;
            Provider provider52;
            Context context8;
            Provider provider53;
            Provider provider54;
            Provider provider55;
            Provider provider56;
            DelegateFactory delegateFactory4;
            Provider provider57;
            Provider provider58;
            Provider provider59;
            Provider provider60;
            Provider provider61;
            Provider provider62;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            DelegateFactory delegateFactory5;
            Provider provider63;
            Provider provider64;
            Provider provider65;
            DelegateFactory delegateFactory6;
            Provider provider66;
            Context context9;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            Context context10;
            Provider provider71;
            SwitchingProvider switchingProvider2;
            Provider provider72;
            DelegateFactory delegateFactory7;
            Provider provider73;
            Provider provider74;
            SwitchingProvider switchingProvider3;
            Context context11;
            Provider provider75;
            Provider provider76;
            Provider provider77;
            Provider provider78;
            Provider provider79;
            Provider provider80;
            DelegateFactory delegateFactory8;
            Provider provider81;
            Provider provider82;
            Provider provider83;
            Provider provider84;
            Provider provider85;
            Provider provider86;
            Provider provider87;
            Provider provider88;
            Provider provider89;
            Provider provider90;
            DelegateFactory delegateFactory9;
            Provider provider91;
            Provider provider92;
            Provider provider93;
            DelegateFactory delegateFactory10;
            DelegateFactory delegateFactory11;
            Provider provider94;
            Provider provider95;
            DelegateFactory delegateFactory12;
            Provider provider96;
            Provider provider97;
            DelegateFactory delegateFactory13;
            DelegateFactory delegateFactory14;
            Provider provider98;
            Provider provider99;
            DelegateFactory delegateFactory15;
            Provider provider100;
            Provider provider101;
            DelegateFactory delegateFactory16;
            Provider provider102;
            DelegateFactory delegateFactory17;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider103;
            DelegateFactory delegateFactory18;
            Provider provider104;
            Provider provider105;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Provider provider110;
            DelegateFactory delegateFactory19;
            DelegateFactory delegateFactory20;
            Provider provider111;
            Provider provider112;
            DelegateFactory delegateFactory21;
            DelegateFactory delegateFactory22;
            DelegateFactory delegateFactory23;
            Provider provider113;
            Provider provider114;
            DelegateFactory delegateFactory24;
            Provider provider115;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            Provider provider119;
            Provider provider120;
            Provider provider121;
            Provider provider122;
            DelegateFactory delegateFactory25;
            Provider provider123;
            SwitchingProvider switchingProvider5;
            DelegateFactory delegateFactory26;
            Provider provider124;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 500:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new StatusBarPipelineFlags(context, (FeatureFlags) delegateFactory.get());
                case 501:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceBasedSatelliteBindableIconProvider;
                    return new BindableIconsRegistryImpl((DeviceBasedSatelliteBindableIcon) provider.get());
                case 502:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceBasedSatelliteViewModelImplProvider;
                    return new DeviceBasedSatelliteBindableIcon(context2, (DeviceBasedSatelliteViewModel) provider2.get());
                case 503:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceBasedSatelliteInteractorProvider;
                    DeviceBasedSatelliteInteractor deviceBasedSatelliteInteractor = (DeviceBasedSatelliteInteractor) provider3.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DeviceBasedSatelliteViewModelImpl(context3, deviceBasedSatelliteInteractor, (CoroutineScope) provider4.get(), (AirplaneModeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeRepositoryImplProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceBasedSatelliteInputLogProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceBasedSatelliteTableLogProvider.get());
                case 504:
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceBasedSatelliteRepositorySwitcherProvider;
                    DeviceBasedSatelliteRepository deviceBasedSatelliteRepository = (DeviceBasedSatelliteRepository) provider5.get();
                    MobileIconsInteractorImpl mobileIconsInteractorImpl = (MobileIconsInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsInteractorImplProvider.get();
                    WifiInteractorImpl wifiInteractorImpl = (WifiInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiInteractorImplProvider.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DeviceBasedSatelliteInteractor(deviceBasedSatelliteRepository, mobileIconsInteractorImpl, wifiInteractorImpl, (CoroutineScope) provider6.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceBasedSatelliteInputLogProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceBasedSatelliteTableLogProvider.get());
                case 505:
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceBasedSatelliteRepositoryImplProvider;
                    DeviceBasedSatelliteRepositoryImpl deviceBasedSatelliteRepositoryImpl = (DeviceBasedSatelliteRepositoryImpl) provider7.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.demoDeviceBasedSatelliteRepositoryProvider;
                    DemoDeviceBasedSatelliteRepository demoDeviceBasedSatelliteRepository = (DemoDeviceBasedSatelliteRepository) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController = (DemoModeController) provider9.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DeviceBasedSatelliteRepositorySwitcher(deviceBasedSatelliteRepositoryImpl, demoDeviceBasedSatelliteRepository, demoModeController, (CoroutineScope) provider10.get());
                case 506:
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSatelliteManagerProvider;
                    Optional optional = (Optional) provider11.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager = (TelephonyManager) provider12.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider13.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider14.get();
                    LogBuffer logBuffer = (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceBasedSatelliteInputLogProvider.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVerboseDeviceBasedSatelliteInputLogProvider;
                    LogBuffer logBuffer2 = (LogBuffer) provider15.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new DeviceBasedSatelliteRepositoryImpl(optional, telephonyManager, coroutineDispatcher, coroutineScope, logBuffer, logBuffer2, (SystemClock) provider16.get());
                case 507:
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideDeviceBasedSatelliteInputLogFactory.provideDeviceBasedSatelliteInputLog((LogBufferFactory) provider17.get());
                case 508:
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideVerboseDeviceBasedSatelliteInputLogFactory.provideVerboseDeviceBasedSatelliteInputLog((LogBufferFactory) provider18.get());
                case 509:
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.demoDeviceBasedSatelliteDataSourceProvider;
                    DemoDeviceBasedSatelliteDataSource demoDeviceBasedSatelliteDataSource = (DemoDeviceBasedSatelliteDataSource) provider19.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DemoDeviceBasedSatelliteRepository(demoDeviceBasedSatelliteDataSource, (CoroutineScope) provider20.get());
                case 510:
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController2 = (DemoModeController) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DemoDeviceBasedSatelliteDataSource(demoModeController2, (CoroutineScope) provider22.get());
                case 511:
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider;
                    MobileConnectionsRepository mobileConnectionsRepository = (MobileConnectionsRepository) provider23.get();
                    CarrierConfigTracker carrierConfigTracker = (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get();
                    TableLogBuffer tableLogBuffer = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMobileSummaryLogBufferProvider.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider;
                    ConnectivityRepositoryImpl connectivityRepositoryImpl = (ConnectivityRepositoryImpl) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider25.get();
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new MobileIconsInteractorImpl(mobileConnectionsRepository, carrierConfigTracker, tableLogBuffer, connectivityRepositoryImpl, coroutineScope2, context4, (FeatureFlagsClassic) delegateFactory2.get());
                case 512:
                    CarrierConfigManager carrierConfigManager = (CarrierConfigManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideCarrierConfigManagerProvider.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new CarrierConfigTracker(carrierConfigManager, (BroadcastDispatcher) provider26.get());
                case 513:
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider;
                    ConnectivityRepositoryImpl connectivityRepositoryImpl2 = (ConnectivityRepositoryImpl) provider27.get();
                    WifiRepository wifiRepository = (WifiRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiRepositorySwitcherProvider.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new WifiInteractorImpl(connectivityRepositoryImpl2, wifiRepository, (CoroutineScope) provider28.get());
                case 514:
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideDeviceBasedSatelliteTableLogFactory.provideDeviceBasedSatelliteTableLog((TableLogBufferFactory) provider29.get());
                case 515:
                    return new TintedIconManager.Factory((WifiUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiUiAdapterProvider.get(), (MobileUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileUiAdapterProvider.get(), (MobileContextProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileContextProvider.get());
                case 516:
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController = (StatusBarIconController) provider30.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiViewModelProvider;
                    return new WifiUiAdapter(statusBarIconController, (WifiViewModel) provider31.get());
                case 517:
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeViewModelImplProvider;
                    AirplaneModeViewModelImpl airplaneModeViewModelImpl = (AirplaneModeViewModelImpl) provider32.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFirstMobileSubShowingNetworkTypeIconProvider;
                    Supplier supplier = (Supplier) provider33.get();
                    ConnectivityConstants connectivityConstants = (ConnectivityConstants) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityConstantsProvider.get();
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    TableLogBuffer tableLogBuffer2 = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWifiTableLogBufferProvider.get();
                    WifiInteractorImpl wifiInteractorImpl2 = (WifiInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiInteractorImplProvider.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiConstantsProvider;
                    return new WifiViewModel(airplaneModeViewModelImpl, supplier, connectivityConstants, context5, tableLogBuffer2, wifiInteractorImpl2, coroutineScope3, (WifiConstants) provider35.get());
                case 518:
                    AirplaneModeInteractor airplaneModeInteractor = (AirplaneModeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeInteractorProvider.get();
                    TableLogBuffer tableLogBuffer3 = (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAirplaneTableLogBufferProvider.get();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new AirplaneModeViewModelImpl(airplaneModeInteractor, tableLogBuffer3, (CoroutineScope) provider36.get());
                case 519:
                    AirplaneModeRepository airplaneModeRepository = (AirplaneModeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeRepositoryImplProvider.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider;
                    ConnectivityRepositoryImpl connectivityRepositoryImpl3 = (ConnectivityRepositoryImpl) provider37.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider;
                    return new AirplaneModeInteractor(airplaneModeRepository, connectivityRepositoryImpl3, (MobileConnectionsRepository) provider38.get());
                case 520:
                    return StatusBarPipelineModule_Companion_ProvideFirstMobileSubShowingNetworkTypeIconProviderFactory.provideFirstMobileSubShowingNetworkTypeIconProvider((MobileIconsViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsViewModelProvider.get());
                case 521:
                    MobileViewLogger mobileViewLogger = (MobileViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileViewLoggerProvider.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.verboseMobileViewLoggerProvider;
                    VerboseMobileViewLogger verboseMobileViewLogger = (VerboseMobileViewLogger) provider39.get();
                    MobileIconsInteractorImpl mobileIconsInteractorImpl2 = (MobileIconsInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsInteractorImplProvider.get();
                    AirplaneModeInteractor airplaneModeInteractor2 = (AirplaneModeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeInteractorProvider.get();
                    ConnectivityConstants connectivityConstants2 = (ConnectivityConstants) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityConstantsProvider.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) delegateFactory3.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new MobileIconsViewModel(mobileViewLogger, verboseMobileViewLogger, mobileIconsInteractorImpl2, airplaneModeInteractor2, connectivityConstants2, featureFlagsClassic, (CoroutineScope) provider40.get());
                case 522:
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMobileViewLogBufferProvider;
                    LogBuffer logBuffer3 = (LogBuffer) provider41.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new MobileViewLogger(logBuffer3, (DumpManager) provider42.get());
                case 523:
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideMobileViewLogBufferFactory.provideMobileViewLogBuffer((LogBufferFactory) provider43.get());
                case 524:
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVerboseMobileViewLogBufferProvider;
                    return new VerboseMobileViewLogger((LogBuffer) provider44.get());
                case 525:
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return StatusBarPipelineModule_Companion_ProvideVerboseMobileViewLogBufferFactory.provideVerboseMobileViewLogBuffer((LogBufferFactory) provider45.get());
                case 526:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider46.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    return new ConnectivityConstants(context6, dumpManager, (TelephonyManager) provider47.get());
                case 527:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new WifiConstants(context7, (DumpManager) provider48.get());
                case 528:
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider;
                    StatusBarIconController statusBarIconController2 = (StatusBarIconController) provider49.get();
                    MobileIconsViewModel mobileIconsViewModel = (MobileIconsViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsViewModelProvider.get();
                    MobileViewLogger mobileViewLogger2 = (MobileViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileViewLoggerProvider.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new MobileUiAdapter(statusBarIconController2, mobileIconsViewModel, mobileViewLogger2, (CoroutineScope) provider50.get());
                case 529:
                    NetworkController networkController = (NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider51.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    return new MobileContextProvider(networkController, dumpManager2, (DemoModeController) provider52.get());
                case 530:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper = (Looper) provider53.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor = (Executor) provider54.get();
                    SubscriptionManager subscriptionManager = (SubscriptionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSubscriptionManagerProvider.get();
                    CallbackHandler callbackHandler = (CallbackHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.callbackHandlerProvider.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider55.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider56.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory4.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider;
                    ConnectivityManager connectivityManager = (ConnectivityManager) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider;
                    TelephonyManager telephonyManager2 = (TelephonyManager) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider;
                    TelephonyListenerManager telephonyListenerManager = (TelephonyListenerManager) provider59.get();
                    WifiManager wifiManager = (WifiManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWifiManagerProvider.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAccessPointControllerImplProvider;
                    AccessPointControllerImpl accessPointControllerImpl = (AccessPointControllerImpl) provider60.get();
                    StatusBarPipelineFlags statusBarPipelineFlags = (StatusBarPipelineFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarPipelineFlagsProvider.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider;
                    DemoModeController demoModeController3 = (DemoModeController) provider61.get();
                    CarrierConfigTracker carrierConfigTracker2 = (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get();
                    WifiStatusTrackerFactory m1715$$Nest$mwifiStatusTrackerFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1715$$Nest$mwifiStatusTrackerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileSignalControllerFactoryProvider;
                    MobileSignalControllerFactory mobileSignalControllerFactory = (MobileSignalControllerFactory) provider62.get();
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internetDialogManagerProvider;
                    InternetDialogManager internetDialogManager = (InternetDialogManager) delegateFactory5.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager3 = (DumpManager) provider63.get();
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideStatusBarNetworkControllerBufferProvider;
                    return new NetworkControllerImpl(context8, looper, executor, subscriptionManager, callbackHandler, deviceProvisionedController, broadcastDispatcher, userTracker, connectivityManager, telephonyManager2, telephonyListenerManager, wifiManager, accessPointControllerImpl, statusBarPipelineFlags, demoModeController3, carrierConfigTracker2, m1715$$Nest$mwifiStatusTrackerFactory, mobileSignalControllerFactory, handler, internetDialogManager, dumpManager3, (LogBuffer) provider64.get());
                case 531:
                    return new CallbackHandler(GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper());
                case 532:
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider65.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory6.get();
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return StatusBarPolicyModule_ProvideAccessPointControllerImplFactory.provideAccessPointControllerImpl(userManager, userTracker2, (Executor) provider66.get(), (WifiPickerTrackerFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiPickerTrackerFactoryProvider.get());
                case 533:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new MobileSignalControllerFactory(context9, (CallbackHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.callbackHandlerProvider.get(), (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get(), new MobileMappingsProxyImpl());
                case 534:
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider67.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider26.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new InternetDialogManager(dialogTransitionAnimator, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24, (CoroutineDispatcher) provider68.get());
                case 535:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24(this);
                case 536:
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    PluginManager pluginManager = (PluginManager) provider69.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager4 = (DumpManager) provider70.get();
                    final ToastFactory toastFactory = new ToastFactory();
                    dumpManager4.getClass();
                    DumpManager.registerDumpable$default(dumpManager4, "ToastFactory", toastFactory);
                    pluginManager.addPluginListener(new PluginListener() { // from class: com.android.systemui.toast.ToastFactory.1
                        public AnonymousClass1() {
                        }

                        @Override // com.android.systemui.plugins.PluginListener
                        public final void onPluginConnected(Plugin plugin, Context context12) {
                            ToastFactory.this.mPlugin = (ToastPlugin) plugin;
                        }

                        @Override // com.android.systemui.plugins.PluginListener
                        public final void onPluginDisconnected(Plugin plugin) {
                            ToastFactory toastFactory2 = ToastFactory.this;
                            if (((ToastPlugin) plugin).equals(toastFactory2.mPlugin)) {
                                toastFactory2.mPlugin = null;
                            }
                        }
                    }, ToastPlugin.class, false);
                    return toastFactory;
                case 537:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    AppOpsController appOpsController = (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider71.get();
                    Looper provideMainLooper = GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider2.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) provider72.get();
                    BootCompleteCacheImpl bootCompleteCacheImpl = (BootCompleteCacheImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bootCompleteCacheImplProvider.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory7.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider74.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new LocationControllerImpl(context10, appOpsController, deviceConfigProxy, provideMainLooper, handler2, broadcastDispatcher2, bootCompleteCacheImpl, userTracker3, packageManager, uiEventLogger, (SecureSettings) switchingProvider3.get());
                case 538:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    Looper looper2 = (Looper) provider75.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor2 = (Executor) provider76.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager5 = (DumpManager) provider77.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider;
                    AudioManager audioManager = (AudioManager) provider78.get();
                    IndividualSensorPrivacyController individualSensorPrivacyController = (IndividualSensorPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher3 = (BroadcastDispatcher) provider79.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new AppOpsControllerImpl(context11, looper2, executor2, dumpManager5, audioManager, individualSensorPrivacyController, broadcastDispatcher3, (SystemClock) provider80.get());
                case 539:
                    SensorPrivacyManager sensorPrivacyManager = (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    final IndividualSensorPrivacyControllerImpl individualSensorPrivacyControllerImpl = new IndividualSensorPrivacyControllerImpl(sensorPrivacyManager, (UserTracker) delegateFactory8.get());
                    individualSensorPrivacyControllerImpl.mSensorPrivacyManager.addSensorPrivacyListener(new SensorPrivacyManager.OnSensorPrivacyChangedListener() { // from class: com.android.systemui.statusbar.policy.IndividualSensorPrivacyControllerImpl.1
                        public final void onSensorPrivacyChanged(int i2, boolean z) {
                        }

                        public final void onSensorPrivacyChanged(SensorPrivacyManager.OnSensorPrivacyChangedListener.SensorPrivacyChangedParams sensorPrivacyChangedParams) {
                            IndividualSensorPrivacyControllerImpl individualSensorPrivacyControllerImpl2 = IndividualSensorPrivacyControllerImpl.this;
                            int sensor = sensorPrivacyChangedParams.getSensor();
                            int toggleType = sensorPrivacyChangedParams.getToggleType();
                            boolean isEnabled = sensorPrivacyChangedParams.isEnabled();
                            if (toggleType == 1) {
                                individualSensorPrivacyControllerImpl2.mSoftwareToggleState.put(sensor, isEnabled);
                            } else if (toggleType == 2) {
                                individualSensorPrivacyControllerImpl2.mHardwareToggleState.put(sensor, isEnabled);
                            }
                            Iterator it = new ArraySet(individualSensorPrivacyControllerImpl2.mCallbacks).iterator();
                            while (it.hasNext()) {
                                ((IndividualSensorPrivacyController.Callback) it.next()).onSensorBlockedChanged(sensor, individualSensorPrivacyControllerImpl2.isSensorBlocked(sensor));
                            }
                        }
                    });
                    int[] iArr = IndividualSensorPrivacyControllerImpl.SENSORS;
                    for (int i2 = 0; i2 < 2; i2++) {
                        int i3 = iArr[i2];
                        boolean isSensorPrivacyEnabled = individualSensorPrivacyControllerImpl.mSensorPrivacyManager.isSensorPrivacyEnabled(1, i3);
                        boolean isSensorPrivacyEnabled2 = individualSensorPrivacyControllerImpl.mSensorPrivacyManager.isSensorPrivacyEnabled(2, i3);
                        individualSensorPrivacyControllerImpl.mSoftwareToggleState.put(i3, isSensorPrivacyEnabled);
                        individualSensorPrivacyControllerImpl.mHardwareToggleState.put(i3, isSensorPrivacyEnabled2);
                    }
                    return individualSensorPrivacyControllerImpl;
                case 540:
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher4 = (BroadcastDispatcher) provider81.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    return new WifiStateWorker(broadcastDispatcher4, (DelayableExecutor) provider82.get(), (WifiManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWifiManagerProvider.get());
                case 541:
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider83.get()).create(20, "StatusBarNetworkControllerLog");
                case 542:
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider84.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider85.get();
                    PrivacyConfig privacyConfig = (PrivacyConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyConfigProvider.get();
                    Set singleton = Collections.singleton((PrivacyItemMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsPrivacyItemMonitorProvider.get());
                    PrivacyLogger privacyLogger = new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get());
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider86.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new PrivacyItemController(delayableExecutor, delayableExecutor2, privacyConfig, singleton, privacyLogger, systemClock, (DumpManager) provider87.get());
                case 543:
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor3 = (DelayableExecutor) provider88.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy2 = (DeviceConfigProxy) provider89.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new PrivacyConfig(delayableExecutor3, deviceConfigProxy2, (DumpManager) provider90.get());
                case 544:
                    AppOpsController appOpsController2 = (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory9.get();
                    PrivacyConfig privacyConfig2 = (PrivacyConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyConfigProvider.get();
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    return new AppOpsPrivacyItemMonitor(appOpsController2, userTracker4, privacyConfig2, (DelayableExecutor) provider91.get(), new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get()));
                case 545:
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider92.get()).create(100, "PrivacyLog");
                case 546:
                    return (OngoingPrivacyChip) ((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get()).requireViewById(R.id.privacy_chip);
                case 547:
                    PermissionManager permissionManager = (PermissionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePermissionManagerProvider.get();
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager2 = (PackageManager) provider93.get();
                    LocationManager locationManager = (LocationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLocationManagerProvider.get();
                    PrivacyItemController privacyItemController = (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker5 = (UserTracker) delegateFactory10.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory11.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor3 = (Executor) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor4 = (Executor) provider95.get();
                    PrivacyLogger privacyLogger2 = new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get());
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory12.get();
                    AppOpsController appOpsController3 = (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new PrivacyDialogController(permissionManager, packageManager2, locationManager, privacyItemController, userTracker5, activityStarter, executor3, executor4, privacyLogger2, keyguardStateController, appOpsController3, (UiEventLogger) provider96.get(), PrivacyDialogControllerKt.defaultDialogProvider);
                case 548:
                    PermissionManager permissionManager2 = (PermissionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePermissionManagerProvider.get();
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager3 = (PackageManager) provider97.get();
                    LocationManager locationManager2 = (LocationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLocationManagerProvider.get();
                    PrivacyItemController privacyItemController2 = (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker6 = (UserTracker) delegateFactory13.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory14.get();
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor5 = (Executor) provider98.get();
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor6 = (Executor) provider99.get();
                    PrivacyLogger privacyLogger3 = new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get());
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory15.get();
                    AppOpsController appOpsController4 = (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get();
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger2 = (UiEventLogger) provider100.get();
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    return new PrivacyDialogControllerV2(permissionManager2, packageManager3, locationManager2, privacyItemController2, userTracker6, activityStarter2, executor5, executor6, privacyLogger3, keyguardStateController2, appOpsController4, uiEventLogger2, (DialogTransitionAnimator) provider101.get());
                case 549:
                    return (StatusIconContainer) ((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get()).requireViewById(R.id.statusIcons);
                case 550:
                    HandlerThread handlerThread = new HandlerThread("TimeTick");
                    handlerThread.start();
                    return new Handler(handlerThread.getLooper());
                case 551:
                    BatteryMeterView batteryMeterView = (BatteryMeterView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBatteryMeterViewProvider.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker7 = (UserTracker) delegateFactory16.get();
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider102.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService = (TunerService) delegateFactory17.get();
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler3 = (Handler) switchingProvider4.get();
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver = (ContentResolver) provider103.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory18.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider;
                    return new BatteryMeterViewController(batteryMeterView, StatusBarLocation.QS, userTracker7, configurationController, tunerService, handler3, contentResolver, featureFlags, (BatteryController) provider104.get());
                case 552:
                    return (BatteryMeterView) ((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get()).requireViewById(R.id.batteryRemainingIcon);
                case 553:
                    return new ShadeCarrierGroupControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeCarrierLogProvider.get());
                case 554:
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogBufferFactory.create$default((LogBufferFactory) provider105.get(), "ShadeCarrierGroupControllerLog", 400, false, 12);
                case 555:
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider106.get()).create(400, "CarrierTextManagerLog");
                case 556:
                    return new ShadeCarrierGroupController.SubscriptionManagerSlotIndexResolver();
                case 557:
                    return CombinedShadeHeadersConstraintManagerImpl.INSTANCE;
                case 558:
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor7 = (Executor) provider107.get();
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider;
                    AlarmManager alarmManager = (AlarmManager) provider108.get();
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher5 = (BroadcastDispatcher) provider109.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager6 = (DumpManager) provider110.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new NextAlarmControllerImpl(executor7, alarmManager, broadcastDispatcher5, dumpManager6, (UserTracker) delegateFactory19.get());
                case 559:
                    NotificationStackScrollLayout notificationStackScrollLayout = (NotificationStackScrollLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider.get();
                    boolean booleanValue = ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAllowNotificationLongPressProvider.get()).booleanValue();
                    NotificationGutsManager notificationGutsManager = (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get();
                    NotificationsController notificationsController = (NotificationsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsControllerProvider.get();
                    NotificationVisibilityProvider notificationVisibilityProvider = (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get();
                    NotificationWakeUpCoordinator notificationWakeUpCoordinator = (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get();
                    HeadsUpManager headsUpManager = (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get();
                    Provider provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    NotificationRoundnessManager notificationRoundnessManager = (NotificationRoundnessManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRoundnessManagerProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService2 = (TunerService) delegateFactory20.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController2 = (DeviceProvisionedController) provider111.get();
                    DynamicPrivacyController dynamicPrivacyController = (DynamicPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dynamicPrivacyControllerProvider.get();
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController2 = (ConfigurationController) provider112.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory21.get();
                    KeyguardMediaController keyguardMediaController = (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider;
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) delegateFactory22.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory23.get();
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider113.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider;
                    KeyguardTransitionRepositoryImpl keyguardTransitionRepositoryImpl = (KeyguardTransitionRepositoryImpl) provider114.get();
                    ZenModeController zenModeController = (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) delegateFactory24.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider115.get();
                    ColorUpdateLogger colorUpdateLogger = (ColorUpdateLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.colorUpdateLoggerProvider.get();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager7 = (DumpManager) provider116.get();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector = (FalsingCollector) provider117.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider118.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    NotificationSwipeHelper.Builder builder = new NotificationSwipeHelper.Builder(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2), (ViewConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideViewConfigurationProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.dumpManagerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (NotificationRoundnessManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRoundnessManagerProvider.get());
                    GroupExpansionManagerImpl groupExpansionManagerImpl = (GroupExpansionManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupExpansionManagerImplProvider.get();
                    SectionHeaderNodeControllerImpl headerController = ((DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSilentHeaderSubcomponentProvider.get()).getHeaderController();
                    Preconditions.checkNotNullFromProvides(headerController);
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    NotifPipeline notifPipeline = (NotifPipeline) provider119.get();
                    NotifCollection notifCollection = (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get();
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController = (LockscreenShadeTransitionController) provider120.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger3 = (UiEventLogger) provider121.get();
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    NotificationRemoteInputManager notificationRemoteInputManager = (NotificationRemoteInputManager) provider122.get();
                    VisibilityLocationProviderDelegator visibilityLocationProviderDelegator = (VisibilityLocationProviderDelegator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visibilityLocationProviderDelegatorProvider.get();
                    SeenNotificationsInteractor seenNotificationsInteractor = (SeenNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.seenNotificationsInteractorProvider.get();
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    ShadeInteractor shadeInteractor = (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    DisplaySwitchNotificationsHiderTracker displaySwitchNotificationsHiderTracker = new DisplaySwitchNotificationsHiderTracker(shadeInteractor, (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideLatencyTrackerProvider.get());
                    ConfigurationState configurationState = (ConfigurationState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationStateProvider.get();
                    FalsingManager falsingManager2 = (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get();
                    HeadsUpNotificationViewBinder headsUpNotificationViewBinder = new HeadsUpNotificationViewBinder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListViewModel());
                    Optional empty = Optional.empty();
                    Intrinsics.checkNotNull(empty);
                    MetricsLogger metricsLogger2 = (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMetricsLoggerProvider.get();
                    NotificationIconContainerShelfViewBinder notificationIconContainerShelfViewBinder = new NotificationIconContainerShelfViewBinder(new NotificationIconContainerShelfViewModel((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationIconsInteractor()), (ConfigurationState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationStateProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemBarUtilsState(), (StatusBarIconViewBindingFailureTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconViewBindingFailureTrackerProvider.get(), new ShelfNotificationIconViewStore((NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get()));
                    Provider provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarNotificationActivityStarterProvider;
                    SectionHeaderNodeControllerImpl headerController2 = ((DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSilentHeaderSubcomponentProvider.get()).getHeaderController();
                    Preconditions.checkNotNullFromProvides(headerController2);
                    NotificationListViewBinder notificationListViewBinder = new NotificationListViewBinder(coroutineDispatcher2, displaySwitchNotificationsHiderTracker, configurationState, falsingManager2, headsUpNotificationViewBinder, empty, metricsLogger2, notificationIconContainerShelfViewBinder, provider126, headerController2, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListViewModel());
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory25.get();
                    DelegateFactory delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesWindowRootViewProvider;
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) provider123.get();
                    StackStateLogger stackStateLogger = new StackStateLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationHeadsUpLogBufferProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationRenderLogBufferProvider.get());
                    NotificationStackScrollLogger notificationStackScrollLogger = new NotificationStackScrollLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationHeadsUpLogBufferProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationRenderLogBufferProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeLogBufferProvider.get());
                    NotificationStackSizeCalculator notificationStackSizeCalculator = (NotificationStackSizeCalculator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackSizeCalculatorProvider.get();
                    NotificationTargetsHelper notificationTargetsHelper = (NotificationTargetsHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationTargetsHelperProvider.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider5.get();
                    NotificationDismissibilityProviderImpl notificationDismissibilityProviderImpl = (NotificationDismissibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationDismissibilityProviderImplProvider.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory26.get();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    return new NotificationStackScrollLayoutController(notificationStackScrollLayout, booleanValue, notificationGutsManager, notificationsController, notificationVisibilityProvider, notificationWakeUpCoordinator, headsUpManager, notificationRoundnessManager, tunerService2, deviceProvisionedController2, dynamicPrivacyController, configurationController2, sysuiStatusBarStateController, keyguardMediaController, keyguardBypassController, powerInteractor, primaryBouncerInteractor, keyguardTransitionRepositoryImpl, zenModeController, notificationLockscreenUserManager, metricsLogger, colorUpdateLogger, dumpManager7, falsingCollector, falsingManager, builder, groupExpansionManagerImpl, headerController, notifPipeline, notifCollection, lockscreenShadeTransitionController, uiEventLogger3, notificationRemoteInputManager, visibilityLocationProviderDelegator, seenNotificationsInteractor, notificationListViewBinder, shadeController, delegateFactory27, interactionJankMonitor, stackStateLogger, notificationStackScrollLogger, notificationStackSizeCalculator, notificationTargetsHelper, secureSettings, notificationDismissibilityProviderImpl, activityStarter3, (SplitShadeStateControllerImpl) provider124.get(), (SensitiveNotificationProtectionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensitiveNotificationProtectionControllerImplProvider.get());
                case 560:
                    return Boolean.TRUE;
                case 561:
                    NotificationsController notificationsController2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getResources().getBoolean(R.bool.config_renderNotifications) ? (NotificationsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsControllerImplProvider.get() : (NotificationsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsControllerStubProvider.get();
                    Preconditions.checkNotNullFromProvides(notificationsController2);
                    return notificationsController2;
                case 562:
                    NotificationListener notificationListener = (NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get();
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider);
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider);
                    NotifLiveDataStoreImpl notifLiveDataStoreImpl = (NotifLiveDataStoreImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifLiveDataStoreImplProvider.get();
                    TargetSdkResolver targetSdkResolver = (TargetSdkResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.targetSdkResolverProvider.get();
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineInitializerProvider);
                    NotifBindPipeline notifBindPipeline = (NotifBindPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifBindPipelineProvider.get();
                    RowContentBindStage rowContentBindStage = (RowContentBindStage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowContentBindStageProvider.get();
                    NotifBindPipelineInitializer notifBindPipelineInitializer = new NotifBindPipelineInitializer();
                    notifBindPipelineInitializer.mNotifBindPipeline = notifBindPipeline;
                    notifBindPipelineInitializer.mRowContentBindStage = rowContentBindStage;
                    return new NotificationsControllerImpl(notificationListener, lazy, lazy2, notifLiveDataStoreImpl, targetSdkResolver, lazy3, notifBindPipelineInitializer, (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLegacyLoggerOptionalProvider.get(), (NotificationRowBinderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRowBinderImplProvider.get(), (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get(), (HeadsUpViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpViewBinderProvider.get(), new NotificationClicker.Builder(new NotificationClickerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInteractionLogBufferProvider.get()), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get()), (AnimatedImageNotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.animatedImageNotificationManagerProvider.get(), (PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles);
                case 563:
                    return new NotificationListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), new SilentNotificationStatusIconsVisibilityInteractor((NotificationListenerSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerSettingsRepositoryProvider.get()), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get());
                case 564:
                    return new NotificationListenerSettingsRepository();
                case 565:
                    return new TargetSdkResolver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 566:
                    return new NotifPipelineInitializer((NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), new GroupCoalescer((DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), new GroupCoalescerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsLogBufferProvider.get())), (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (ShadeListBuilder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeListBuilderProvider.get(), (RenderStageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.renderStageManagerProvider.get(), (NotifCoordinatorsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCoordinatorsProvider.get(), (NotifInflaterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifInflaterImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$25) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeViewManagerFactoryProvider.get());
                case 567:
                    NotifCoordinatorsImpl notifCoordinatorsImpl = (NotifCoordinatorsImpl) new DaggerSysUIGoogleGlobalRootComponent$CoordinatorsSubcomponentImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl).notifCoordinatorsImplProvider.get();
                    Preconditions.checkNotNullFromProvides(notifCoordinatorsImpl);
                    return notifCoordinatorsImpl;
                case 568:
                    return new NotifInflaterImpl((NotifInflationErrorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifInflationErrorManagerProvider.get(), new NotifInflaterLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationLogBufferProvider.get()));
                case 569:
                    NotifInflationErrorManager notifInflationErrorManager = new NotifInflationErrorManager();
                    notifInflationErrorManager.mErroredNotifs = new androidx.collection.ArraySet(0);
                    notifInflationErrorManager.mListeners = new ArrayList();
                    return notifInflationErrorManager;
                case 570:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(250, "NotifInflationLog");
                case 571:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$25(this);
                case 572:
                    return new SectionHeaderVisibilityProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 573:
                    return new NotifViewBarn();
                case 574:
                    return new NotifBindPipeline((CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), new NotifBindPipelineLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsLogBufferProvider.get()), new NotificationEntryProcessorFactoryLooperImpl(GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper()));
                case 575:
                    return new RowContentBindStage((NotificationRowContentBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationRowContentBinderProvider.get(), (NotifInflationErrorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifInflationErrorManagerProvider.get(), new RowContentBindStageLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationLogBufferProvider.get()));
                case 576:
                    NotificationRowContentBinder notificationRowContentBinder = (NotificationRowContentBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationContentInflaterProvider.get();
                    Preconditions.checkNotNullFromProvides(notificationRowContentBinder);
                    return notificationRowContentBinder;
                case 577:
                    NotifRemoteViewCache notifRemoteViewCache = (NotifRemoteViewCache) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifRemoteViewCacheProvider.get();
                    NotificationRemoteInputManager notificationRemoteInputManager2 = (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new NotificationContentInflater(notifRemoteViewCache, notificationRemoteInputManager2, new ConversationNotificationProcessor((LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideLauncherAppsProvider.get(), (ConversationNotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.conversationNotificationManagerProvider.get()), new MediaFeatureFlag(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.context), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1677$$Nest$msmartReplyStateInflaterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$26) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providerProvider.get(), (HeadsUpStyleProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideHeadsUpStyleManagerProvider.get(), new NotificationRowContentBinderLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationLogBufferProvider.get()));
                case 578:
                    return new NotifRemoteViewCacheImpl((CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get());
                case 579:
                    Context context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    return new NotificationRemoteInputManager(context12, (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (SmartReplyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSmartReplyControllerProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (RemoteInputUriController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputUriControllerProvider.get(), (RemoteInputControllerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputControllerLoggerProvider.get(), (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get(), new ActionClickLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInteractionLogBufferProvider.get()), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 580:
                    return new SmartReplyController((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get());
                case 581:
                    return new RemoteInputUriController((IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get());
                case 582:
                    return new RemoteInputControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationRemoteInputLogBufferProvider.get());
                case 583:
                    LogBufferFactory logBufferFactory = (LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get();
                    logBufferFactory.getClass();
                    return LogBufferFactory.create$default(logBufferFactory, "NotifRemoteInputLog", 50, false, 8);
                case 584:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "NotifInteractionLog");
                case 585:
                    return new ExecutorImpl((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationLooperProvider.get());
                case 586:
                    HandlerThread handlerThread2 = new HandlerThread("NotifInflation", 10);
                    handlerThread2.start();
                    Looper looper3 = handlerThread2.getLooper();
                    looper3.setSlowLogThresholdMs(1000L, 1000L);
                    return looper3;
                case 587:
                    return new SmartReplyConstants((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get());
                case 588:
                    SharedLibraryModule sharedLibraryModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedLibraryModule;
                    ActivityManagerWrapper activityManagerWrapper = ActivityManagerWrapper.sInstance;
                    Preconditions.checkNotNullFromProvides(activityManagerWrapper);
                    return activityManagerWrapper;
                case 589:
                    SharedLibraryModule sharedLibraryModule2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedLibraryModule;
                    return DevicePolicyManagerWrapper.sInstance;
                case 590:
                    return new KeyguardDismissUtil((KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 591:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$26(this);
                case 592:
                    return new NotifRemoteViewsFactoryContainerImpl(new PrecomputedTextViewFactory(), new NotificationOptimizedLinearLayoutFactory(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationViewFlipperFactoryProvider);
                case 593:
                    return new NotificationViewFlipperFactory((NotificationViewFlipperViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationViewFlipperViewModelProvider.get());
                case 594:
                    return new NotificationViewFlipperViewModel((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotificationStackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackInteractorProvider.get());
                case 595:
                    return new NotificationStackInteractor((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 596:
                    return new HeadsUpStyleProviderImpl((StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get());
                case 597:
                    return new NotificationRowContentBinderImpl((NotifRemoteViewCache) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifRemoteViewCacheProvider.get(), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), new ConversationNotificationProcessor((LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get(), (ConversationNotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.conversationNotificationManagerProvider.get()), (RichOngoingNotificationContentExtractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideRonContentExtractorProvider.get(), (RichOngoingNotificationViewInflaterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.richOngoingNotificationViewInflaterImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1677$$Nest$msmartReplyStateInflaterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$26) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providerProvider.get(), (HeadsUpStyleProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideHeadsUpStyleManagerProvider.get(), new NotificationRowContentBinderLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationLogBufferProvider.get()));
                case 598:
                    Provider provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.richOngoingNotificationContentExtractorImplProvider;
                    return new NoOpRichOngoingNotificationContentExtractor();
                case 599:
                    RichOngoingNotificationContentExtractorImpl richOngoingNotificationContentExtractorImpl = new RichOngoingNotificationContentExtractorImpl();
                    if (Log.isLoggable("RefactorFlagAssert", 7)) {
                        Log.wtf("RefactorFlagAssert", "New code path expects android.app.api_rich_ongoing to be enabled.", Build.isDebuggable() ? new IllegalStateException("New code path expects android.app.api_rich_ongoing to be enabled.") : null);
                    } else if (Log.isLoggable("RefactorFlag", 5)) {
                        Log.w("RefactorFlag", "New code path expects android.app.api_rich_ongoing to be enabled.");
                    }
                    return richOngoingNotificationContentExtractorImpl;
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARN: Type inference failed for: r1v1, types: [com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$RichOngoingViewModelComponentFactory] */
        /* JADX WARN: Type inference failed for: r1v362, types: [com.google.android.systemui.smartspace.DateSmartspaceDataProvider$1] */
        public Object get6() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            DelegateFactory delegateFactory;
            Provider provider4;
            Provider provider5;
            Context context;
            Provider provider6;
            DelegateFactory delegateFactory2;
            SwitchingProvider switchingProvider;
            Provider provider7;
            DelegateFactory delegateFactory3;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            DelegateFactory delegateFactory4;
            DelegateFactory delegateFactory5;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            DelegateFactory delegateFactory6;
            DelegateFactory delegateFactory7;
            Provider provider17;
            Provider provider18;
            DelegateFactory delegateFactory8;
            Provider provider19;
            Provider provider20;
            DelegateFactory delegateFactory9;
            Provider provider21;
            DelegateFactory delegateFactory10;
            Provider provider22;
            Provider provider23;
            Context context2;
            Provider provider24;
            Provider provider25;
            Provider provider26;
            SwitchingProvider switchingProvider3;
            Provider provider27;
            Provider provider28;
            Provider provider29;
            Context context3;
            int displayId;
            Provider provider30;
            Provider provider31;
            Provider provider32;
            DelegateFactory delegateFactory11;
            Provider provider33;
            DelegateFactory delegateFactory12;
            Provider provider34;
            Provider provider35;
            DelegateFactory delegateFactory13;
            Provider provider36;
            DelegateFactory delegateFactory14;
            DelegateFactory delegateFactory15;
            DelegateFactory delegateFactory16;
            Provider provider37;
            Provider provider38;
            Provider provider39;
            Provider provider40;
            DelegateFactory delegateFactory17;
            Provider provider41;
            Provider provider42;
            DelegateFactory delegateFactory18;
            DelegateFactory delegateFactory19;
            Provider provider43;
            Context context4;
            Provider provider44;
            DelegateFactory delegateFactory20;
            DelegateFactory delegateFactory21;
            Provider provider45;
            DelegateFactory delegateFactory22;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider46;
            Provider provider47;
            DelegateFactory delegateFactory23;
            SwitchingProvider switchingProvider5;
            Provider provider48;
            Provider provider49;
            Provider provider50;
            Context context5;
            Context context6;
            DelegateFactory delegateFactory24;
            DelegateFactory delegateFactory25;
            DelegateFactory delegateFactory26;
            Context context7;
            DelegateFactory delegateFactory27;
            Provider provider51;
            Context context8;
            Provider provider52;
            DelegateFactory delegateFactory28;
            Context context9;
            Provider provider53;
            DelegateFactory delegateFactory29;
            Context context10;
            Provider provider54;
            DelegateFactory delegateFactory30;
            DelegateFactory delegateFactory31;
            DelegateFactory delegateFactory32;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            DelegateFactory delegateFactory33;
            Context context11;
            Provider provider55;
            Provider provider56;
            SwitchingProvider switchingProvider7;
            Provider provider57;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            Context context12;
            Context context13;
            Provider provider58;
            Provider provider59;
            DelegateFactory delegateFactory34;
            DelegateFactory delegateFactory35;
            Context context14;
            Provider provider60;
            Provider provider61;
            DelegateFactory delegateFactory36;
            DelegateFactory delegateFactory37;
            NavigationBarControllerImpl navigationBarControllerImpl;
            NavigationBar defaultNavigationBar;
            Context context15;
            DelegateFactory delegateFactory38;
            DelegateFactory delegateFactory39;
            DelegateFactory delegateFactory40;
            DelegateFactory delegateFactory41;
            DelegateFactory delegateFactory42;
            DelegateFactory delegateFactory43;
            Provider provider62;
            Provider provider63;
            Context context16;
            Provider provider64;
            Provider provider65;
            DelegateFactory delegateFactory44;
            DelegateFactory delegateFactory45;
            DelegateFactory delegateFactory46;
            DelegateFactory delegateFactory47;
            DelegateFactory delegateFactory48;
            Provider provider66;
            DelegateFactory delegateFactory49;
            Provider provider67;
            DelegateFactory delegateFactory50;
            DelegateFactory delegateFactory51;
            Provider provider68;
            DelegateFactory delegateFactory52;
            DelegateFactory delegateFactory53;
            Provider provider69;
            DelegateFactory delegateFactory54;
            DelegateFactory delegateFactory55;
            Provider provider70;
            Provider provider71;
            Provider provider72;
            Provider provider73;
            Provider provider74;
            Provider provider75;
            Provider provider76;
            Provider provider77;
            DelegateFactory delegateFactory56;
            Provider provider78;
            DelegateFactory delegateFactory57;
            Provider provider79;
            Provider provider80;
            Provider provider81;
            Object obj;
            final DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            final DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 600:
                    return new RichOngoingNotificationViewInflaterImpl(new Object(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$RichOngoingViewModelComponentFactory
                    });
                case 601:
                    NotificationListener notificationListener = (NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get();
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider;
                    Executor executor = (Executor) provider.get();
                    NotifLiveDataStoreImpl notifLiveDataStoreImpl = (NotifLiveDataStoreImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifLiveDataStoreImplProvider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider;
                    NotificationVisibilityProvider notificationVisibilityProvider = (NotificationVisibilityProvider) provider2.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    NotifPipeline notifPipeline = (NotifPipeline) provider3.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory.get();
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider;
                    WindowRootViewVisibilityInteractor windowRootViewVisibilityInteractor = (WindowRootViewVisibilityInteractor) provider4.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    return NotificationStatsLoggerModule_Companion_ProvideLegacyLoggerOptionalFactory.provideLegacyLoggerOptional(notificationListener, executor, notifLiveDataStoreImpl, notificationVisibilityProvider, notifPipeline, statusBarStateController, windowRootViewVisibilityInteractor, (JavaAdapter) provider5.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1552$$Nest$mexpansionStateLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotificationPanelLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationPanelLoggerProvider.get());
                case 602:
                    return NotificationsModule_ProvideNotificationPanelLoggerFactory.provideNotificationPanelLogger();
                case 603:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    NotificationMessagingUtil notificationMessagingUtil = new NotificationMessagingUtil(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Object) null);
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    NotificationRemoteInputManager notificationRemoteInputManager = (NotificationRemoteInputManager) provider6.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager = (NotificationLockscreenUserManager) delegateFactory2.get();
                    NotifBindPipeline notifBindPipeline = (NotifBindPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifBindPipelineProvider.get();
                    RowContentBindStage rowContentBindStage = (RowContentBindStage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowContentBindStageProvider.get();
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowInflaterTaskProvider;
                    DaggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl daggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl = new DaggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconManagerProvider;
                    IconManager iconManager = (IconManager) provider7.get();
                    NotificationRowBinderLogger m1632$$Nest$mnotificationRowBinderLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1632$$Nest$mnotificationRowBinderLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new NotificationRowBinderImpl(context, notificationMessagingUtil, notificationRemoteInputManager, notificationLockscreenUserManager, notifBindPipeline, rowContentBindStage, switchingProvider, daggerSysUIGoogleGlobalRootComponent$AmbientTouchComponentImpl, iconManager, m1632$$Nest$mnotificationRowBinderLogger, (FeatureFlags) delegateFactory3.get());
                case 604:
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new RowInflaterTask((SystemClock) provider8.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1655$$Nest$mrowInflaterTaskLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 605:
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    CommonNotifCollection commonNotifCollection = (CommonNotifCollection) provider9.get();
                    LauncherApps launcherApps = (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get();
                    IconBuilder m1568$$Nest$miconBuilder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1568$$Nest$miconBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    return new IconManager(commonNotifCollection, launcherApps, m1568$$Nest$miconBuilder, coroutineScope, (CoroutineContext) provider11.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainCoroutineContextProvider.get());
                case 606:
                    return HeadsUpViewBinder_Factory.newInstance(new NotificationMessagingUtil(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Object) null), (RowContentBindStage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowContentBindStageProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1566$$Nest$mheadsUpViewBinderLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 607:
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider;
                    CommonNotifCollection commonNotifCollection2 = (CommonNotifCollection) provider12.get();
                    BindEventManagerImpl bindEventManagerImpl = (BindEventManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventManagerImplProvider.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager = (HeadsUpManager) provider13.get();
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new AnimatedImageNotificationManager(commonNotifCollection2, bindEventManagerImpl, headsUpManager, (StatusBarStateController) delegateFactory4.get());
                case 608:
                    return new NotificationsControllerStub((NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get());
                case 609:
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new ColorUpdateLogger((DumpManager) provider14.get());
                case 610:
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new GroupExpansionManagerImpl((DumpManager) provider15.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get());
                case 611:
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider16.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return ConfigurationStateModule_Companion_ProvideGlobalConfigurationStateFactory.provideGlobalConfigurationState((Context) switchingProvider2.get(), configurationController);
                case 612:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$27();
                case 613:
                    return new NotificationShelfViewModel((NotificationShelfInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShelfInteractorProvider.get(), new ActivatableNotificationViewModelImpl((AccessibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityInteractorProvider.get()));
                case 614:
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl = (KeyguardRepositoryImpl) delegateFactory6.get();
                    DeviceEntryFaceAuthRepositoryImpl deviceEntryFaceAuthRepositoryImpl = (DeviceEntryFaceAuthRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthRepositoryImplProvider.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory7.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    return new NotificationShelfInteractor(keyguardRepositoryImpl, deviceEntryFaceAuthRepositoryImpl, powerInteractor, (LockscreenShadeTransitionController) provider17.get());
                case 615:
                    return new AccessibilityInteractor(new AccessibilityRepositoryImpl((AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get()));
                case 616:
                    return new HideListViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hideNotificationsInteractorProvider);
                case 617:
                    UnfoldTransitionInteractor unfoldTransitionInteractor = (UnfoldTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unfoldTransitionInteractorProvider.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider18.get();
                    AnimationStatusRepositoryImpl m1502$$Nest$manimationStatusRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1502$$Nest$manimationStatusRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    return new HideNotificationsInteractor(unfoldTransitionInteractor, configurationInteractor, m1502$$Nest$manimationStatusRepositoryImpl, (PowerInteractor) delegateFactory8.get());
                case 618:
                    UnfoldTransitionRepositoryImpl unfoldTransitionRepositoryImpl = new UnfoldTransitionRepositoryImpl((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get());
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new UnfoldTransitionInteractor(unfoldTransitionRepositoryImpl, (ConfigurationInteractor) provider19.get());
                case 619:
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    Provider provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationSettingsInteractorProvider;
                    Provider provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.seenNotificationsInteractorProvider;
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    Optional of = Optional.of(new FooterViewModel((ActiveNotificationsInteractor) provider20.get(), (NotificationSettingsInteractor) provider82.get(), (SeenNotificationsInteractor) provider83.get(), (ShadeInteractor) delegateFactory9.get()));
                    Intrinsics.checkNotNull(of);
                    return of;
                case 620:
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor = (ActiveNotificationsInteractor) provider21.get();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory10.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider;
                    return new NotificationLoggerViewModel(activeNotificationsInteractor, keyguardInteractor, (WindowRootViewVisibilityInteractor) provider22.get());
                case 621:
                    return new RemoteInputInteractor((RemoteInputRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputRepositoryImplProvider.get());
                case 622:
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    return new RemoteInputRepositoryImpl((NotificationRemoteInputManager) provider23.get());
                case 623:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider;
                    NotificationManager notificationManager = (NotificationManager) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider25.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext = (CoroutineContext) provider26.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler = (Handler) switchingProvider3.get();
                    if (ZenModesBackend.sInstance == null) {
                        ZenModesBackend.sInstance = new ZenModesBackend(context2.getApplicationContext());
                    }
                    return new ZenModeRepositoryImpl(context2, notificationManager, ZenModesBackend.sInstance, context2.getContentResolver(), coroutineScope2, coroutineContext, handler);
                case 624:
                    return new ZenIconLoader((ExecutorService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorServiceProvider.get());
                case 625:
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider28.get();
                    NotificationListenerService notificationListenerService = (NotificationListenerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get();
                    NotificationPanelLoggerImpl notificationPanelLoggerImpl = (NotificationPanelLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationPanelLoggerProvider.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider;
                    return new NotificationStatsLoggerImpl(coroutineScope3, coroutineDispatcher, notificationListenerService, notificationPanelLoggerImpl, (IStatusBarService) provider29.get());
                case 626:
                    return new HeadsUpNotificationIconViewStateRepository();
                case 627:
                    StatusBarIconViewBindingFailureTracker statusBarIconViewBindingFailureTracker = new StatusBarIconViewBindingFailureTracker();
                    EmptyList emptyList = EmptyList.INSTANCE;
                    statusBarIconViewBindingFailureTracker.aodFailures = emptyList;
                    statusBarIconViewBindingFailureTracker.statusBarFailures = emptyList;
                    statusBarIconViewBindingFailureTracker.shelfFailures = emptyList;
                    return statusBarIconViewBindingFailureTracker;
                case 628:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    displayId = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId();
                    Handler provideHandler = GlobalConcurrencyModule_ProvideHandlerFactory.provideHandler();
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor2 = (Executor) provider30.get();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider;
                    NotificationVisibilityProvider notificationVisibilityProvider2 = (NotificationVisibilityProvider) provider31.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager2 = (HeadsUpManager) provider32.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory11.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider33.get();
                    NotificationClickNotifier notificationClickNotifier = (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory12.get();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider;
                    KeyguardManager keyguardManager = (KeyguardManager) provider34.get();
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider;
                    IDreamManager iDreamManager = (IDreamManager) provider35.get();
                    Optional optional = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBubblesManagerProvider.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy = DoubleCheck.lazy(delegateFactory13);
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    NotificationRemoteInputManager notificationRemoteInputManager2 = (NotificationRemoteInputManager) provider36.get();
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager2 = (NotificationLockscreenUserManager) delegateFactory14.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController = (ShadeController) delegateFactory15.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory16.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider37.get();
                    StatusBarRemoteInputCallback statusBarRemoteInputCallback = (StatusBarRemoteInputCallback) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarRemoteInputCallbackProvider.get();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider;
                    ActivityIntentHelper activityIntentHelper = (ActivityIntentHelper) provider38.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger = (MetricsLogger) provider39.get();
                    StatusBarNotificationActivityStarterLogger statusBarNotificationActivityStarterLogger = new StatusBarNotificationActivityStarterLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInteractionLogBufferProvider.get());
                    OnUserInteractionCallbackImpl onUserInteractionCallbackImpl = (OnUserInteractionCallbackImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.onUserInteractionCallbackImplProvider.get();
                    StatusBarNotificationPresenter statusBarNotificationPresenter = (StatusBarNotificationPresenter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarNotificationPresenterProvider.get();
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    PanelExpansionInteractor panelExpansionInteractor = (PanelExpansionInteractor) provider40.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController = (NotificationShadeWindowController) delegateFactory17.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider;
                    ActivityTransitionAnimator activityTransitionAnimator = (ActivityTransitionAnimator) provider41.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider;
                    ShadeAnimationInteractor shadeAnimationInteractor = (ShadeAnimationInteractor) provider42.get();
                    NotificationLaunchAnimatorControllerProvider notificationLaunchAnimatorControllerProvider = (NotificationLaunchAnimatorControllerProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationTransitionAnimatorControllerProvider.get();
                    LaunchFullScreenIntentProvider launchFullScreenIntentProvider = (LaunchFullScreenIntentProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchFullScreenIntentProvider.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory18.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new StatusBarNotificationActivityStarter(context3, displayId, provideHandler, executor2, notificationVisibilityProvider2, headsUpManager2, activityStarter, commandQueue, notificationClickNotifier, statusBarKeyguardViewManager, keyguardManager, iDreamManager, optional, lazy, notificationRemoteInputManager2, notificationLockscreenUserManager2, shadeController, keyguardStateController, lockPatternUtils, statusBarRemoteInputCallback, activityIntentHelper, metricsLogger, statusBarNotificationActivityStarterLogger, onUserInteractionCallbackImpl, statusBarNotificationPresenter, panelExpansionInteractor, notificationShadeWindowController, activityTransitionAnimator, shadeAnimationInteractor, notificationLaunchAnimatorControllerProvider, launchFullScreenIntentProvider, powerInteractor2, (UserTracker) delegateFactory19.get());
                case 629:
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider;
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) provider43.get();
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    AssistUtils assistUtils = (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get();
                    NgaUiController ngaUiController = (NgaUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ngaUiControllerProvider.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue2 = (CommandQueue) provider44.get();
                    OpaEnabledReceiver opaEnabledReceiver = (OpaEnabledReceiver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.opaEnabledReceiverProvider.get();
                    PhoneStateMonitor phoneStateMonitor = (PhoneStateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.phoneStateMonitorProvider.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService = (OverviewProxyService) delegateFactory20.get();
                    OpaEnabledDispatcher opaEnabledDispatcher = new OpaEnabledDispatcher(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider));
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider;
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) delegateFactory21.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController = (NavigationModeController) provider45.get();
                    AssistantPresenceHandler assistantPresenceHandler = (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get();
                    NgaMessageHandler ngaMessageHandler = (NgaMessageHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ngaMessageHandlerProvider.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider;
                    Lazy lazy2 = DoubleCheck.lazy(delegateFactory22);
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider4.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    GoogleDefaultUiController googleDefaultUiController = (GoogleDefaultUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleDefaultUiControllerProvider.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider;
                    IWindowManager iWindowManager = (IWindowManager) provider47.get();
                    AssistLogger assistLogger = (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory23.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider5.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider48.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider;
                    ActivityManager activityManager = (ActivityManager) provider49.get();
                    AssistInteractor assistInteractor = (AssistInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInteractorProvider.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    return new AssistManagerGoogle(deviceProvisionedController, context4, assistUtils, ngaUiController, commandQueue2, opaEnabledReceiver, phoneStateMonitor, overviewProxyService, opaEnabledDispatcher, keyguardUpdateMonitor, navigationModeController, assistantPresenceHandler, ngaMessageHandler, lazy2, handler2, googleDefaultUiController, iWindowManager, assistLogger, userTracker, secureSettings, selectedUserInteractor, activityManager, assistInteractor, (ViewCaptureAwareWindowManager) provider50.get());
                case 630:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new AssistUtils(context5);
                case 631:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Object obj2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.timeoutManagerProvider.get();
                    TouchInsideHandler touchInsideHandler = (TouchInsideHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchInsideHandlerProvider.get();
                    Object obj3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayUiHostProvider.get();
                    com.google.android.systemui.assist.uihints.ScrimController scrimController = (com.google.android.systemui.assist.uihints.ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider2.get();
                    Object obj4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightnessProvider.get();
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) delegateFactory24.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    return new NgaUiController(context6, (TimeoutManager) obj2, touchInsideHandler, (OverlayUiHost) obj3, scrimController, (LightnessProvider) obj4, statusBarStateController2, DoubleCheck.lazy(delegateFactory25), (FlingVelocityWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flingVelocityWrapperProvider.get(), (NavBarFadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navBarFadeControllerProvider.get(), (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get());
                case 632:
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    DoubleCheck.lazy(delegateFactory26);
                    TimeoutManager timeoutManager = new TimeoutManager();
                    new Handler(Looper.getMainLooper());
                    return timeoutManager;
                case 633:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new AssistantPresenceHandler(context7, (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get());
                case 634:
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy3 = DoubleCheck.lazy(delegateFactory27);
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    return new TouchInsideHandler(lazy3, (NavigationModeController) provider51.get(), (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get());
                case 635:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider52.get();
                    AssistUtils assistUtils2 = (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get();
                    PhoneStateMonitor phoneStateMonitor2 = (PhoneStateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.phoneStateMonitorProvider.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new GoogleAssistLogger(context8, uiEventLogger, assistUtils2, phoneStateMonitor2, (UserTracker) delegateFactory28.get(), (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get());
                case 636:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider53.get();
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider);
                    BootCompleteCacheImpl bootCompleteCacheImpl = (BootCompleteCacheImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bootCompleteCacheImplProvider.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new PhoneStateMonitor(context9, broadcastDispatcher, lazy4, bootCompleteCacheImpl, (StatusBarStateController) delegateFactory29.get());
                case 637:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    return new OverlayUiHost(context10, (ViewCaptureAwareWindowManager) provider54.get());
                case 638:
                    return new com.google.android.systemui.assist.uihints.ScrimController((ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideParentViewGroupProvider.get(), (OverlappedElementController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlappedElementControllerProvider.get(), (LightnessProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightnessProvider.get(), (TouchInsideHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchInsideHandlerProvider.get());
                case 639:
                    AssistUIView assistUIView = ((OverlayUiHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayUiHostProvider.get()).mRoot;
                    Preconditions.checkNotNullFromProvides(assistUIView);
                    return assistUIView;
                case 640:
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider;
                    OverviewProxyService overviewProxyService2 = (OverviewProxyService) delegateFactory30.get();
                    KeyguardBottomAreaInteractor keyguardBottomAreaInteractor = (KeyguardBottomAreaInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaInteractorProvider.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new OverlappedElementController(overviewProxyService2, keyguardBottomAreaInteractor, (KeyguardInteractor) delegateFactory31.get());
                case 641:
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    return new KeyguardBottomAreaInteractor((KeyguardRepositoryImpl) delegateFactory32.get());
                case 642:
                    return new LightnessProvider();
                case 643:
                    return new FlingVelocityWrapper();
                case 644:
                    NavBarFader navBarFader = (NavBarFader) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navBarFaderProvider.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return new NavBarFadeController(navBarFader, (Handler) switchingProvider6.get());
                case 645:
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    return new NavBarFader((NavigationBarControllerImpl) delegateFactory33.get());
                case 646:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor3 = (Executor) provider55.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor4 = (Executor) provider56.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    return new OpaEnabledReceiver(context11, executor3, executor4, (Handler) switchingProvider7.get(), (OpaEnabledSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.opaEnabledSettingsProvider.get());
                case 647:
                    NgaUiController ngaUiController2 = (NgaUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ngaUiControllerProvider.get();
                    AssistantPresenceHandler assistantPresenceHandler2 = (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get();
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider;
                    NavigationModeController navigationModeController2 = (NavigationModeController) provider57.get();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getClass();
                    ArrayList arrayList = new ArrayList(1);
                    HashSet hashSet = new HashSet(Arrays.asList((AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get(), (CapabilitiesCallbackHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.capabilitiesCallbackHandlerProvider.get()));
                    Iterator it = hashSet.iterator();
                    while (it.hasNext()) {
                        Preconditions.checkNotNull(it.next(), "Set contributions cannot be null");
                    }
                    arrayList.addAll(hashSet);
                    Set emptySet = arrayList.isEmpty() ? Collections.emptySet() : arrayList.size() == 1 ? Collections.singleton(arrayList.get(0)) : Collections.unmodifiableSet(new HashSet(arrayList));
                    Set singleton = Collections.singleton((GoBackHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goBackHandlerProvider.get());
                    Set singleton2 = Collections.singleton((SwipeHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeHandlerProvider.get());
                    Set singleton3 = Collections.singleton((NavBarFadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navBarFadeControllerProvider.get());
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    return new NgaMessageHandler(ngaUiController2, assistantPresenceHandler2, navigationModeController2, emptySet, singleton, singleton2, singleton3, (Handler) switchingProvider8.get());
                case 648:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new CapabilitiesCallbackHandler(context12);
                case 649:
                    return new GoBackHandler();
                case 650:
                    return new SwipeHandler();
                case 651:
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    AssistLogger assistLogger2 = (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider58.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger2 = (MetricsLogger) provider59.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy5 = DoubleCheck.lazy(delegateFactory34);
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    return new DefaultUiController(context13, assistLogger2, viewCaptureAwareWindowManager, metricsLogger2, lazy5, (NavigationBarControllerImpl) delegateFactory35.get());
                case 652:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    GoogleAssistLogger googleAssistLogger = (GoogleAssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager2 = (ViewCaptureAwareWindowManager) provider60.get();
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger3 = (MetricsLogger) provider61.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider;
                    Lazy lazy6 = DoubleCheck.lazy(delegateFactory36);
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider;
                    GoogleDefaultUiController googleDefaultUiController2 = new GoogleDefaultUiController(context14, googleAssistLogger, viewCaptureAwareWindowManager2, metricsLogger3, lazy6, (NavigationBarControllerImpl) delegateFactory37.get());
                    context14.getResources();
                    AssistantInvocationLightsView assistantInvocationLightsView = googleDefaultUiController2.mInvocationLightsView;
                    assistantInvocationLightsView.mUseNavBarColor = true;
                    assistantInvocationLightsView.mPaint.setStrokeCap(Paint.Cap.BUTT);
                    if (!assistantInvocationLightsView.mRegistered && (navigationBarControllerImpl = assistantInvocationLightsView.mNavigationBarController) != null && (defaultNavigationBar = navigationBarControllerImpl.getDefaultNavigationBar()) != null) {
                        NavigationBarTransitions navigationBarTransitions = defaultNavigationBar.mNavigationBarTransitions;
                        navigationBarTransitions.mDarkIntensityListeners.add(assistantInvocationLightsView);
                        assistantInvocationLightsView.updateDarkness(navigationBarTransitions.mLightTransitionsController.mDarkIntensity);
                        assistantInvocationLightsView.mRegistered = true;
                    }
                    AssistantInvocationLightsView assistantInvocationLightsView2 = (AssistantInvocationLightsView) LayoutInflater.from(context14).inflate(R.layout.invocation_lights, (ViewGroup) googleDefaultUiController2.mRoot, false);
                    googleDefaultUiController2.mInvocationLightsView = assistantInvocationLightsView2;
                    googleDefaultUiController2.mRoot.addView(assistantInvocationLightsView2);
                    return googleDefaultUiController2;
                case 653:
                    return new AssistInteractor((AssistRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistRepositoryProvider.get());
                case 654:
                    return new AssistRepository();
                case 655:
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    GroupExpansionManagerImpl groupExpansionManagerImpl = (GroupExpansionManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupExpansionManagerImplProvider.get();
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager3 = (NotificationLockscreenUserManager) delegateFactory38.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory39.get();
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController3 = (StatusBarStateController) delegateFactory40.get();
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager2 = (StatusBarKeyguardViewManager) delegateFactory41.get();
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory42.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    ShadeController shadeController2 = (ShadeController) delegateFactory43.get();
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue3 = (CommandQueue) provider62.get();
                    ActionClickLogger actionClickLogger = new ActionClickLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInteractionLogBufferProvider.get());
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    return new StatusBarRemoteInputCallback(context15, groupExpansionManagerImpl, notificationLockscreenUserManager3, keyguardStateController2, statusBarStateController3, statusBarKeyguardViewManager2, activityStarter2, shadeController2, commandQueue3, actionClickLogger, (Executor) provider63.get());
                case 656:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePanelExpansionInteractorProvider;
                    PanelExpansionInteractor panelExpansionInteractor2 = (PanelExpansionInteractor) provider64.get();
                    QuickSettingsController quickSettingsController = (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickSettingsControllerProvider.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider;
                    HeadsUpManager headsUpManager3 = (HeadsUpManager) provider65.get();
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    NotificationShadeWindowView notificationShadeWindowView = (NotificationShadeWindowView) delegateFactory44.get();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory45.get();
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider;
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) delegateFactory46.get();
                    DozeScrimController dozeScrimController = (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get();
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider;
                    NotificationShadeWindowController notificationShadeWindowController2 = (NotificationShadeWindowController) delegateFactory47.get();
                    DynamicPrivacyController dynamicPrivacyController = (DynamicPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dynamicPrivacyControllerProvider.get();
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory48.get();
                    NotificationAlertsInteractor notificationAlertsInteractor = (NotificationAlertsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationAlertsInteractorProvider.get();
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider;
                    LockscreenShadeTransitionController lockscreenShadeTransitionController = (LockscreenShadeTransitionController) provider66.get();
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor3 = (PowerInteractor) delegateFactory49.get();
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue4 = (CommandQueue) provider67.get();
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    NotificationLockscreenUserManager notificationLockscreenUserManager4 = (NotificationLockscreenUserManager) delegateFactory50.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) delegateFactory51.get();
                    ShadeEventCoordinator shadeEventCoordinator = (ShadeEventCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeEventCoordinatorProvider.get();
                    NotificationMediaManager notificationMediaManager = (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get();
                    NotificationGutsManager notificationGutsManager = (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get();
                    InitController initController = (InitController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.initControllerProvider.get();
                    VisualInterruptionDecisionProvider visualInterruptionDecisionProvider = (VisualInterruptionDecisionProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVisualInterruptionDecisionProvider.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider;
                    return new StatusBarNotificationPresenter(context16, panelExpansionInteractor2, quickSettingsController, headsUpManager3, notificationShadeWindowView, activityStarter3, notificationStackScrollLayoutController, dozeScrimController, notificationShadeWindowController2, dynamicPrivacyController, keyguardStateController3, notificationAlertsInteractor, lockscreenShadeTransitionController, powerInteractor3, commandQueue4, notificationLockscreenUserManager4, sysuiStatusBarStateController, shadeEventCoordinator, notificationMediaManager, notificationGutsManager, initController, visualInterruptionDecisionProvider, (NotificationRemoteInputManager) provider68.get(), (StatusBarRemoteInputCallback) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarRemoteInputCallbackProvider.get(), (NotificationStackScrollLayoutController.NotificationListContainerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideListContainerProvider.get());
                case 657:
                    SwitchingProvider switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeSurfaceImplProvider;
                    ShadeSurface shadeSurface = (ShadeSurface) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get();
                    Preconditions.checkNotNullFromProvides(shadeSurface);
                    return shadeSurface;
                case 658:
                    return new ShadeSurfaceImpl();
                case 659:
                    Provider provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelExpansionInteractorImplProvider;
                    Object obj5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get();
                    Intrinsics.checkNotNull(obj5);
                    return (PanelExpansionInteractor) obj5;
                case 660:
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    SceneInteractor sceneInteractor = (SceneInteractor) delegateFactory52.get();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory53.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider;
                    ShadeAnimationInteractor shadeAnimationInteractor2 = (ShadeAnimationInteractor) provider69.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new PanelExpansionInteractorImpl(sceneInteractor, shadeInteractor, shadeAnimationInteractor2, (SysuiStatusBarStateController) delegateFactory54.get());
                case 661:
                    Provider provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerSceneImplProvider;
                    Object obj6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerImplProvider.get();
                    Intrinsics.checkNotNull(obj6);
                    return (QuickSettingsController) obj6;
                case 662:
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    return new QuickSettingsControllerSceneImpl((QSSceneAdapterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSceneAdapterImplProvider.get(), (ShadeInteractor) delegateFactory55.get());
                case 663:
                    Lazy lazy7 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider);
                    NotificationPanelView notificationPanelView = (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get();
                    QsFrameTranslateImpl qsFrameTranslateImpl = (QsFrameTranslateImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsFrameTranslateImplProvider.get();
                    PulseExpansionHandler pulseExpansionHandler = (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get();
                    NotificationRemoteInputManager notificationRemoteInputManager3 = (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get();
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager3 = (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get();
                    LightBarController lightBarController = (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get();
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController2 = (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get();
                    LockscreenShadeTransitionController lockscreenShadeTransitionController2 = (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get();
                    NotificationShadeDepthController notificationShadeDepthController = (NotificationShadeDepthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider.get();
                    ShadeHeaderController shadeHeaderController = (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get();
                    StatusBarTouchableRegionManager statusBarTouchableRegionManager = (StatusBarTouchableRegionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarTouchableRegionManagerProvider.get();
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get();
                    KeyguardBypassController keyguardBypassController = (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get();
                    ScrimController scrimController2 = (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider;
                    MediaDataManager mediaDataManager = (MediaDataManager) provider70.get();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider;
                    MediaHierarchyManager mediaHierarchyManager = (MediaHierarchyManager) provider71.get();
                    AmbientState ambientState = (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider;
                    RecordingController recordingController = (RecordingController) provider72.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider73.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider74.get();
                    LockscreenGestureLogger lockscreenGestureLogger = (LockscreenGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenGestureLoggerProvider.get();
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider;
                    MetricsLogger metricsLogger4 = (MetricsLogger) provider75.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    Lazy lazy8 = DoubleCheck.lazy(provider76);
                    ShadeLogger m1673$$Nest$mshadeLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider77.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    DeviceEntryFaceAuthInteractor deviceEntryFaceAuthInteractor = (DeviceEntryFaceAuthInteractor) delegateFactory56.get();
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider;
                    ShadeRepository shadeRepository = (ShadeRepository) provider78.get();
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor2 = (ShadeInteractor) delegateFactory57.get();
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    ActiveNotificationsInteractor activeNotificationsInteractor2 = (ActiveNotificationsInteractor) provider79.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider;
                    JavaAdapter javaAdapter = (JavaAdapter) provider80.get();
                    CastControllerImpl castControllerImpl = (CastControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider;
                    return new QuickSettingsControllerImpl(lazy7, notificationPanelView, qsFrameTranslateImpl, pulseExpansionHandler, notificationRemoteInputManager3, statusBarKeyguardViewManager3, lightBarController, notificationStackScrollLayoutController2, lockscreenShadeTransitionController2, notificationShadeDepthController, shadeHeaderController, statusBarTouchableRegionManager, keyguardStateController4, keyguardBypassController, scrimController2, mediaDataManager, mediaHierarchyManager, ambientState, recordingController, falsingManager, accessibilityManager, lockscreenGestureLogger, metricsLogger4, lazy8, m1673$$Nest$mshadeLogger, dumpManager, deviceEntryFaceAuthInteractor, shadeRepository, shadeInteractor2, activeNotificationsInteractor2, javaAdapter, castControllerImpl, (SplitShadeStateControllerImpl) provider81.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTransitionViewModelProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenHeaderHelperProvider));
                case 664:
                    return new QsFrameTranslateImpl();
                case 665:
                    return new DisplayMetricsRepository((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayMetricsRepoLogBufferProvider.get());
                case 666:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "DisplayMetricsRepo");
                case 667:
                    Executor executor5 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get();
                    BroadcastDispatcher broadcastDispatcher2 = (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get();
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    Lazy lazy9 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenCaptureDevicePolicyResolverProvider);
                    UserTracker userTracker2 = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    RecordingControllerLogger recordingControllerLogger = (RecordingControllerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerLoggerProvider.get();
                    MediaProjectionMetricsLogger mediaProjectionMetricsLogger = (MediaProjectionMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionMetricsLoggerProvider.get();
                    Context context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context;
                    Resources resources = context17.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    ScreenCaptureDisabledDialogDelegate screenCaptureDisabledDialogDelegate = new ScreenCaptureDisabledDialogDelegate(context17, resources);
                    return new RecordingController(executor5, broadcastDispatcher2, featureFlags, lazy9, userTracker2, recordingControllerLogger, mediaProjectionMetricsLogger, screenCaptureDisabledDialogDelegate, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$29) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider30.get());
                case 668:
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get();
                    UserManager userManager = (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get();
                    UserHandle m1640$$Nest$mpersonalProfileUserHandle = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1640$$Nest$mpersonalProfileUserHandle(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Iterator it2 = ((UserTrackerImpl) ((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get())).getUserProfiles().iterator();
                    while (true) {
                        if (it2.hasNext()) {
                            obj = it2.next();
                            if (((UserInfo) obj).isManagedProfile()) {
                            }
                        } else {
                            obj = null;
                        }
                    }
                    UserInfo userInfo = (UserInfo) obj;
                    return new ScreenCaptureDevicePolicyResolver(devicePolicyManager, userManager, m1640$$Nest$mpersonalProfileUserHandle, userInfo != null ? userInfo.getUserHandle() : null);
                case 669:
                    return new RecordingControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideRecordingControllerLogBufferProvider.get());
                case 670:
                    return LogBufferFactory.create$default((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get(), "RecordingControllerLog", 50, false, 12);
                case 671:
                    return new MediaProjectionMetricsLogger((IMediaProjectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIMediaProjectionManagerProvider.get());
                case 672:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$28();
                case 673:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$29(this);
                case 674:
                    return new CastControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (CastControllerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerLoggerProvider.get());
                case 675:
                    return new CastControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCastControllerLogProvider.get());
                case 676:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "CastControllerLog");
                case 677:
                    return new NotificationAlertsInteractor((DisableFlagsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsRepositoryImplProvider.get());
                case 678:
                    return new ShadeEventCoordinator((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), new ShadeEventCoordinatorLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsLogBufferProvider.get()));
                case 679:
                    return new InitController();
                case 680:
                    return ((NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get()).mNotificationListContainer;
                case 681:
                    return new ActivityTransitionAnimator((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 682:
                    return new NotificationLaunchAnimatorControllerProvider((NotificationLaunchAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationInteractorProvider.get(), (NotificationStackScrollLayoutController.NotificationListContainerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideListContainerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get());
                case 683:
                    return new NotificationLaunchAnimationInteractor((NotificationLaunchAnimationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationRepositoryProvider.get());
                case 684:
                    return new NotificationLaunchAnimationRepository();
                case 685:
                    return new LaunchFullScreenIntentProvider();
                case 686:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(100, "NotifRenderLog");
                case 687:
                    return new NotificationStackSizeCalculator((SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaDataManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get());
                case 688:
                    return new NotificationTargetsHelper();
                case 689:
                    return new TapAgainViewController((TapAgainView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesTapAgainViewProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get());
                case 690:
                    return (TapAgainView) ((NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get()).requireViewById(R.id.shade_falsing_tap_again);
                case 691:
                    return new ShadeExpansionStateManager();
                case 692:
                    KeyguardBottomAreaView keyguardBottomAreaView = (KeyguardBottomAreaView) ((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get()).inflate(R.layout.keyguard_bottom_area, (ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), false);
                    KeyguardBottomAreaViewController keyguardBottomAreaViewController = new KeyguardBottomAreaViewController(keyguardBottomAreaView);
                    UnreleasedFlag unreleasedFlag = Flags.NULL_FLAG;
                    return keyguardBottomAreaViewController;
                case 693:
                    return new LockscreenSmartspaceController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (SmartspaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSmartspaceManagerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$30) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider31.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), Optional.of((BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDateSmartspaceDataPluginProvider.get()), Optional.of((BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWeatherSmartspaceDataPluginProvider.get()), Optional.of((BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBcSmartspaceDataPluginProvider.get()), Optional.of((BcSmartspaceConfigPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBcSmartspaceConfigPluginProvider.get()));
                case 694:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$30(this);
                case 695:
                    DateSmartspaceDataProvider dateSmartspaceDataProvider = new DateSmartspaceDataProvider();
                    dateSmartspaceDataProvider.mViews = new HashSet();
                    dateSmartspaceDataProvider.mAttachListeners = new HashSet();
                    dateSmartspaceDataProvider.mEventNotifier = null;
                    dateSmartspaceDataProvider.mStateChangeListener = new View.OnAttachStateChangeListener() { // from class: com.google.android.systemui.smartspace.DateSmartspaceDataProvider.1
                        public AnonymousClass1() {
                        }

                        @Override // android.view.View.OnAttachStateChangeListener
                        public final void onViewAttachedToWindow(View view) {
                            DateSmartspaceDataProvider.this.mViews.add(view);
                            Iterator it3 = ((HashSet) DateSmartspaceDataProvider.this.mAttachListeners).iterator();
                            while (it3.hasNext()) {
                                ((View.OnAttachStateChangeListener) it3.next()).onViewAttachedToWindow(view);
                            }
                        }

                        @Override // android.view.View.OnAttachStateChangeListener
                        public final void onViewDetachedFromWindow(View view) {
                            DateSmartspaceDataProvider.this.mViews.remove(view);
                            Iterator it3 = ((HashSet) DateSmartspaceDataProvider.this.mAttachListeners).iterator();
                            while (it3.hasNext()) {
                                ((View.OnAttachStateChangeListener) it3.next()).onViewDetachedFromWindow(view);
                            }
                        }
                    };
                    return dateSmartspaceDataProvider;
                case 696:
                    return new WeatherSmartspaceDataProvider();
                case 697:
                    return new BcSmartspaceDataProvider();
                case 698:
                    return new BcSmartspaceConfigProvider();
                case 699:
                    return new KeyguardQuickAffordanceInteractor((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceRepositoryProvider), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), new KeyguardQuickAffordancesLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardQuickAffordancesLogBufferProvider.get()), new KeyguardQuickAffordancesMetricsLoggerImpl(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider));
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get7() {
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            Provider provider;
            Provider provider2;
            DelegateFactory delegateFactory;
            Provider provider3;
            Provider provider4;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider2;
            Provider provider5;
            DelegateFactory delegateFactory2;
            Provider provider6;
            Provider provider7;
            DelegateFactory delegateFactory3;
            Provider provider8;
            Provider provider9;
            SwitchingProvider switchingProvider3;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider4;
            Provider provider10;
            DelegateFactory delegateFactory4;
            Provider provider11;
            Provider provider12;
            Context context;
            DelegateFactory delegateFactory5;
            DelegateFactory delegateFactory6;
            Provider provider13;
            Provider provider14;
            DelegateFactory delegateFactory7;
            Provider provider15;
            Provider provider16;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            DelegateFactory delegateFactory8;
            Context context2;
            SwitchingProvider switchingProvider5;
            DelegateFactory delegateFactory9;
            Provider provider21;
            Provider provider22;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider6;
            Provider provider23;
            Provider provider24;
            SwitchingProvider switchingProvider7;
            Provider provider25;
            Provider provider26;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider8;
            Provider provider27;
            DelegateFactory delegateFactory10;
            Provider provider28;
            DelegateFactory delegateFactory11;
            DelegateFactory delegateFactory12;
            Provider provider29;
            Provider provider30;
            Context context3;
            Provider provider31;
            Provider provider32;
            Provider provider33;
            DelegateFactory delegateFactory13;
            Provider provider34;
            DelegateFactory delegateFactory14;
            Context context4;
            Provider provider35;
            Provider provider36;
            Provider provider37;
            Provider provider38;
            DelegateFactory delegateFactory15;
            DelegateFactory delegateFactory16;
            DelegateFactory delegateFactory17;
            DelegateFactory delegateFactory18;
            Provider provider39;
            Context context5;
            Provider provider40;
            Provider provider41;
            DelegateFactory delegateFactory19;
            Provider provider42;
            DelegateFactory delegateFactory20;
            Provider provider43;
            Provider provider44;
            Provider provider45;
            Provider provider46;
            SwitchingProvider switchingProvider9;
            Provider provider47;
            DelegateFactory delegateFactory21;
            Provider provider48;
            Context context6;
            Provider provider49;
            DelegateFactory delegateFactory22;
            Provider provider50;
            DelegateFactory delegateFactory23;
            Context context7;
            DelegateFactory delegateFactory24;
            Provider provider51;
            Provider provider52;
            Provider provider53;
            Provider provider54;
            Provider provider55;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider10;
            Provider provider56;
            DelegateFactory delegateFactory25;
            Context context8;
            Provider provider57;
            Provider provider58;
            SwitchingProvider switchingProvider11;
            Provider provider59;
            Provider provider60;
            Context context9;
            Provider provider61;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider12;
            Context context10;
            Provider provider62;
            SwitchingProvider switchingProvider13;
            Provider provider63;
            DelegateFactory delegateFactory26;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider14;
            Provider provider64;
            DelegateFactory delegateFactory27;
            Provider provider65;
            Provider provider66;
            Context context11;
            Provider provider67;
            Provider provider68;
            Provider provider69;
            Provider provider70;
            boolean noteTaskEnabledKeyBoolean;
            Provider provider71;
            DelegateFactory delegateFactory28;
            SwitchingProvider switchingProvider15;
            Provider provider72;
            Provider provider73;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider16;
            Provider provider74;
            Context context12;
            Provider provider75;
            SwitchingProvider switchingProvider17;
            Provider provider76;
            DelegateFactory delegateFactory29;
            Provider provider77;
            Provider provider78;
            Provider provider79;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider18;
            Provider provider80;
            Provider provider81;
            DelegateFactory delegateFactory30;
            Provider provider82;
            DelegateFactory delegateFactory31;
            Provider provider83;
            DelegateFactory delegateFactory32;
            Provider provider84;
            DelegateFactory delegateFactory33;
            DelegateFactory delegateFactory34;
            DelegateFactory delegateFactory35;
            DelegateFactory delegateFactory36;
            DelegateFactory delegateFactory37;
            Provider provider85;
            DelegateFactory delegateFactory38;
            DelegateFactory delegateFactory39;
            Provider provider86;
            DelegateFactory delegateFactory40;
            DelegateFactory delegateFactory41;
            Provider provider87;
            Provider provider88;
            Provider provider89;
            SwitchingProvider switchingProvider19;
            Provider provider90;
            Provider provider91;
            Provider provider92;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider20;
            DelegateFactory delegateFactory42;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider21;
            Provider provider93;
            Provider provider94;
            Provider provider95;
            Provider provider96;
            DelegateFactory delegateFactory43;
            Provider provider97;
            ClockMessageBuffers clockMessageBuffers;
            Provider provider98;
            Provider provider99;
            Provider provider100;
            Provider provider101;
            Provider provider102;
            Provider provider103;
            Provider provider104;
            DelegateFactory delegateFactory44;
            Provider provider105;
            Provider provider106;
            Provider provider107;
            Provider provider108;
            Provider provider109;
            Provider provider110;
            KeyguardIndicationAreaViewModel keyguardIndicationAreaViewModel;
            DelegateFactory delegateFactory45;
            Provider provider111;
            DelegateFactory delegateFactory46;
            Provider provider112;
            Context context13;
            Provider provider113;
            DelegateFactory delegateFactory47;
            Provider provider114;
            Provider provider115;
            Provider provider116;
            Provider provider117;
            Provider provider118;
            SwitchingProvider switchingProvider22;
            Provider provider119;
            DelegateFactory delegateFactory48;
            Provider provider120;
            DelegateFactory delegateFactory49;
            Provider provider121;
            DelegateFactory delegateFactory50;
            Provider provider122;
            DelegateFactory delegateFactory51;
            DelegateFactory delegateFactory52;
            DelegateFactory delegateFactory53;
            Provider provider123;
            Provider provider124;
            Provider provider125;
            Provider provider126;
            Provider provider127;
            Provider provider128;
            Provider provider129;
            Provider provider130;
            Provider provider131;
            Provider provider132;
            DelegateFactory delegateFactory54;
            Provider provider133;
            DelegateFactory delegateFactory55;
            Provider provider134;
            DelegateFactory delegateFactory56;
            Provider provider135;
            Provider provider136;
            Provider provider137;
            DelegateFactory delegateFactory57;
            Provider provider138;
            DelegateFactory delegateFactory58;
            Provider provider139;
            Provider provider140;
            Provider provider141;
            Provider provider142;
            Provider provider143;
            DelegateFactory delegateFactory59;
            Provider provider144;
            Provider provider145;
            Provider provider146;
            Provider provider147;
            Provider provider148;
            Provider provider149;
            Provider provider150;
            Provider provider151;
            Provider provider152;
            DelegateFactory delegateFactory60;
            Provider provider153;
            Provider provider154;
            Provider provider155;
            Provider provider156;
            Provider provider157;
            DelegateFactory delegateFactory61;
            Provider provider158;
            Provider provider159;
            Provider provider160;
            Provider provider161;
            DelegateFactory delegateFactory62;
            Provider provider162;
            Provider provider163;
            Provider provider164;
            Provider provider165;
            Provider provider166;
            Provider provider167;
            Provider provider168;
            Provider provider169;
            Provider provider170;
            Provider provider171;
            Provider provider172;
            DelegateFactory delegateFactory63;
            Provider provider173;
            Provider provider174;
            Provider provider175;
            Context context14;
            Provider provider176;
            Provider provider177;
            DelegateFactory delegateFactory64;
            Provider provider178;
            Provider provider179;
            DelegateFactory delegateFactory65;
            Provider provider180;
            Provider provider181;
            DelegateFactory delegateFactory66;
            DelegateFactory delegateFactory67;
            Provider provider182;
            Provider provider183;
            DelegateFactory delegateFactory68;
            DelegateFactory delegateFactory69;
            Provider provider184;
            Provider provider185;
            Provider provider186;
            Provider provider187;
            Provider provider188;
            Provider provider189;
            Provider provider190;
            Provider provider191;
            Provider provider192;
            Provider provider193;
            Provider provider194;
            DelegateFactory delegateFactory70;
            Provider provider195;
            Provider provider196;
            Provider provider197;
            Context context15;
            DelegateFactory delegateFactory71;
            DelegateFactory delegateFactory72;
            Provider provider198;
            Provider provider199;
            Context context16;
            Provider provider200;
            Provider provider201;
            Provider provider202;
            Provider provider203;
            Provider provider204;
            Provider provider205;
            Provider provider206;
            Provider provider207;
            Provider provider208;
            Provider provider209;
            Provider provider210;
            Provider provider211;
            Provider provider212;
            Provider provider213;
            Provider provider214;
            Context context17;
            Provider provider215;
            Provider provider216;
            Provider provider217;
            Provider provider218;
            Provider provider219;
            DelegateFactory delegateFactory73;
            Provider provider220;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider23;
            Provider provider221;
            DelegateFactory delegateFactory74;
            Provider provider222;
            Provider provider223;
            DelegateFactory delegateFactory75;
            Provider provider224;
            DelegateFactory delegateFactory76;
            DelegateFactory delegateFactory77;
            Provider provider225;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 700:
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context18 = (Context) switchingProvider.get();
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider.get();
                    KeyguardQuickAffordanceLocalUserSelectionManager keyguardQuickAffordanceLocalUserSelectionManager = (KeyguardQuickAffordanceLocalUserSelectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceLocalUserSelectionManagerProvider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceRemoteUserSelectionManagerProvider;
                    KeyguardQuickAffordanceRemoteUserSelectionManager keyguardQuickAffordanceRemoteUserSelectionManager = (KeyguardQuickAffordanceRemoteUserSelectionManager) provider2.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceLegacySettingSyncerProvider;
                    KeyguardQuickAffordanceLegacySettingSyncer keyguardQuickAffordanceLegacySettingSyncer = (KeyguardQuickAffordanceLegacySettingSyncer) provider3.get();
                    Set m1666$$Nest$msetOfKeyguardQuickAffordanceConfig = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1666$$Nest$msetOfKeyguardQuickAffordanceConfig(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new KeyguardQuickAffordanceRepository(context18, coroutineScope, keyguardQuickAffordanceLocalUserSelectionManager, keyguardQuickAffordanceRemoteUserSelectionManager, userTracker, keyguardQuickAffordanceLegacySettingSyncer, m1666$$Nest$msetOfKeyguardQuickAffordanceConfig, (DumpManager) provider4.get(), new UserHandle(UserHandle.myUserId()));
                case 701:
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context19 = (Context) switchingProvider2.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager = (UserFileManager) provider5.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory2.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    return new KeyguardQuickAffordanceLocalUserSelectionManager(context19, userFileManager, userTracker2, (BroadcastDispatcher) provider6.get());
                case 702:
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider7.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new KeyguardQuickAffordanceRemoteUserSelectionManager(coroutineScope2, (UserTracker) delegateFactory3.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1584$$Nest$mkeyguardQuickAffordanceProviderClientFactoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new UserHandle(UserHandle.myUserId()));
                case 703:
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider9.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new KeyguardQuickAffordanceLegacySettingSyncer(coroutineScope3, coroutineDispatcher, (SecureSettings) switchingProvider3.get(), (KeyguardQuickAffordanceLocalUserSelectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceLocalUserSelectionManagerProvider.get());
                case 704:
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context20 = (Context) switchingProvider4.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager = (PackageManager) provider10.get();
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraGestureHelperProvider);
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory4.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) provider11.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new CameraQuickAffordanceConfig(context20, packageManager, lazy, userTracker3, devicePolicyManager, (CoroutineDispatcher) provider12.get());
                case 705:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController = (KeyguardStateController) delegateFactory5.get();
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager = (StatusBarKeyguardViewManager) delegateFactory6.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager2 = (PackageManager) provider13.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider;
                    ActivityManager activityManager = (ActivityManager) provider14.get();
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory7.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider;
                    ActivityIntentHelper activityIntentHelper = (ActivityIntentHelper) provider15.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider;
                    IActivityTaskManager iActivityTaskManager = (IActivityTaskManager) provider16.get();
                    CameraIntentsWrapper cameraIntentsWrapper = new CameraIntentsWrapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context);
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider;
                    ContentResolver contentResolver = (ContentResolver) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor = (Executor) provider18.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider;
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) provider19.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager2 = (DevicePolicyManager) provider20.get();
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider;
                    return new CameraGestureHelper(context, keyguardStateController, statusBarKeyguardViewManager, packageManager2, activityManager, activityStarter, activityIntentHelper, iActivityTaskManager, cameraIntentsWrapper, contentResolver, executor, selectedUserInteractor, devicePolicyManager2, (NotificationLockscreenUserManager) delegateFactory8.get());
                case 706:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ZenModeController zenModeController = (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get();
                    ZenModeInteractor zenModeInteractor = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeInteractor();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider5.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory9.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider21.get();
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new DoNotDisturbQuickAffordanceConfig(context2, zenModeController, zenModeInteractor, secureSettings, userTracker4, coroutineDispatcher2, (CoroutineScope) provider22.get());
                case 707:
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new FlashlightQuickAffordanceConfig((Context) switchingProvider6.get(), (FlashlightControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flashlightControllerImplProvider.get());
                case 708:
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager = (DumpManager) provider23.get();
                    CameraManager cameraManager = (CameraManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideCameraManagerProvider.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor2 = (Executor) provider24.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings2 = (SecureSettings) switchingProvider7.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    return new FlashlightControllerImpl(dumpManager, cameraManager, executor2, secureSettings2, (PackageManager) provider26.get());
                case 709:
                    switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new HomeControlsKeyguardQuickAffordanceConfig((Context) switchingProvider8.get(), (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get());
                case 710:
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesControlsFeatureEnabledProvider;
                    boolean booleanValue = ((Boolean) provider27.get()).booleanValue();
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider;
                    Lazy lazy2 = DoubleCheck.lazy(delegateFactory10);
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsUiControllerImplProvider);
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsListingControllerImplProvider);
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider;
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) provider28.get();
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController2 = (KeyguardStateController) delegateFactory11.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker5 = (UserTracker) delegateFactory12.get();
                    ControlsSettingsRepository controlsSettingsRepository = (ControlsSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsRepositoryImplProvider.get();
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleControlsTileResourceConfigurationImplProvider;
                    return new ControlsComponent(booleanValue, lazy2, lazy3, lazy4, lockPatternUtils, keyguardStateController2, userTracker5, controlsSettingsRepository, Optional.of((ControlsTileResourceConfiguration) provider29.get()));
                case 711:
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    return Boolean.valueOf(ControlsModule.providesControlsFeatureEnabled((PackageManager) provider30.get()));
                case 712:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor = (DelayableExecutor) provider31.get();
                    ControlsUiController controlsUiController = (ControlsUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsUiControllerImplProvider.get();
                    SelectedComponentRepositoryImpl selectedComponentRepositoryImpl = (SelectedComponentRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedComponentRepositoryImplProvider.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsBindingControllerImplProvider;
                    ControlsBindingController controlsBindingController = (ControlsBindingController) provider32.get();
                    ControlsListingController controlsListingController = (ControlsListingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsListingControllerImplProvider.get();
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager2 = (UserFileManager) provider33.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker6 = (UserTracker) delegateFactory13.get();
                    AuthorizedPanelsRepositoryImpl m1505$$Nest$mauthorizedPanelsRepositoryImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Optional empty = Optional.empty();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new ControlsControllerImpl(context3, delayableExecutor, controlsUiController, selectedComponentRepositoryImpl, controlsBindingController, controlsListingController, userFileManager2, userTracker6, m1505$$Nest$mauthorizedPanelsRepositoryImpl, empty, (DumpManager) provider34.get());
                case 713:
                    delegateFactory14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider;
                    Lazy lazy5 = DoubleCheck.lazy(delegateFactory14);
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    PackageManager packageManager3 = (PackageManager) provider35.get();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor2 = (DelayableExecutor) provider36.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor3 = (DelayableExecutor) provider37.get();
                    Lazy lazy6 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsListingControllerImplProvider);
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlActionCoordinatorImplProvider;
                    ControlActionCoordinatorImpl controlActionCoordinatorImpl = (ControlActionCoordinatorImpl) provider38.get();
                    delegateFactory15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory15.get();
                    CustomIconCache customIconCache = (CustomIconCache) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.customIconCacheProvider.get();
                    ControlsMetricsLoggerImpl controlsMetricsLoggerImpl = (ControlsMetricsLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsMetricsLoggerImplProvider.get();
                    delegateFactory16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController3 = (KeyguardStateController) delegateFactory16.get();
                    delegateFactory17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker7 = (UserTracker) delegateFactory17.get();
                    Optional optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setTaskViewFactory;
                    ControlsSettingsRepository controlsSettingsRepository2 = (ControlsSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsRepositoryImplProvider.get();
                    AuthorizedPanelsRepositoryImpl m1505$$Nest$mauthorizedPanelsRepositoryImpl2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SelectedComponentRepositoryImpl selectedComponentRepositoryImpl2 = (SelectedComponentRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedComponentRepositoryImplProvider.get();
                    delegateFactory18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    ControlsDialogsFactory m1529$$Nest$mcontrolsDialogsFactory = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1529$$Nest$mcontrolsDialogsFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new ControlsUiControllerImpl(lazy5, context4, packageManager3, delayableExecutor2, delayableExecutor3, lazy6, controlActionCoordinatorImpl, activityStarter2, customIconCache, controlsMetricsLoggerImpl, keyguardStateController3, userTracker7, optional, controlsSettingsRepository2, m1505$$Nest$mauthorizedPanelsRepositoryImpl2, selectedComponentRepositoryImpl2, m1529$$Nest$mcontrolsDialogsFactory, (DumpManager) provider39.get());
                case 714:
                    context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor4 = (DelayableExecutor) provider40.get();
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor5 = (DelayableExecutor) provider41.get();
                    delegateFactory19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory19.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider;
                    BroadcastSender broadcastSender = (BroadcastSender) provider42.get();
                    delegateFactory20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider;
                    KeyguardStateController keyguardStateController4 = (KeyguardStateController) delegateFactory20.get();
                    Optional optional2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setTaskViewFactory;
                    ControlsMetricsLoggerImpl controlsMetricsLoggerImpl2 = (ControlsMetricsLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsMetricsLoggerImplProvider.get();
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    return new ControlActionCoordinatorImpl(context5, delayableExecutor4, delayableExecutor5, activityStarter3, broadcastSender, keyguardStateController4, optional2, controlsMetricsLoggerImpl2, (VibratorHelper) provider43.get(), (ControlsSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsRepositoryImplProvider.get());
                case 715:
                    return new ControlsMetricsLoggerImpl();
                case 716:
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider44.get();
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider45.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider46.get();
                    switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new ControlsSettingsRepositoryImpl(coroutineScope4, coroutineDispatcher3, userRepositoryImpl, (SecureSettings) switchingProvider9.get());
                case 717:
                    return new CustomIconCache();
                case 718:
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager3 = (UserFileManager) provider47.get();
                    delegateFactory21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker8 = (UserTracker) delegateFactory21.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new SelectedComponentRepositoryImpl(userFileManager3, userTracker8, (CoroutineDispatcher) provider48.get());
                case 719:
                    context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor6 = (DelayableExecutor) provider49.get();
                    delegateFactory22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider;
                    Lazy lazy7 = DoubleCheck.lazy(delegateFactory22);
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider32;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31) provider50.get();
                    delegateFactory23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ControlsBindingControllerImpl(context6, delayableExecutor6, lazy7, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31, (UserTracker) delegateFactory23.get());
                case 720:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31(this);
                case 721:
                    return new GoogleControlsTileResourceConfigurationImpl(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider));
                case 722:
                    context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker9 = (UserTracker) delegateFactory24.get();
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    UserFileManager userFileManager4 = (UserFileManager) provider51.get();
                    RingerModeTrackerImpl ringerModeTrackerImpl = (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider;
                    AudioManager audioManager = (AudioManager) provider52.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope5 = (CoroutineScope) provider53.get();
                    provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider54.get();
                    provider55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new MuteQuickAffordanceConfig(context7, userTracker9, userFileManager4, ringerModeTrackerImpl, audioManager, coroutineScope5, coroutineDispatcher4, (CoroutineDispatcher) provider55.get());
                case 723:
                    switchingProvider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context21 = (Context) switchingProvider10.get();
                    provider56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) provider56.get();
                    QuickAccessWalletController quickAccessWalletController = (QuickAccessWalletController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickAccessWalletControllerProvider.get();
                    delegateFactory25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    return new QuickAccessWalletKeyguardQuickAffordanceConfig(context21, coroutineDispatcher5, quickAccessWalletController, (ActivityStarter) delegateFactory25.get());
                case 724:
                    context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider;
                    Executor executor3 = (Executor) provider57.get();
                    provider58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor4 = (Executor) provider58.get();
                    switchingProvider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings3 = (SecureSettings) switchingProvider11.get();
                    provider59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickAccessWalletClientProvider;
                    QuickAccessWalletClient quickAccessWalletClient = (QuickAccessWalletClient) provider59.get();
                    provider60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new QuickAccessWalletController(context8, executor3, executor4, secureSettings3, quickAccessWalletClient, (SystemClock) provider60.get(), (RoleManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideRoleManagerProvider.get());
                case 725:
                    context9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    return WalletModule_ProvideQuickAccessWalletClientFactory.provideQuickAccessWalletClient(context9, (Executor) provider61.get());
                case 726:
                    switchingProvider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    return new QrCodeScannerKeyguardQuickAffordanceConfig((Context) switchingProvider12.get(), (QRCodeScannerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qRCodeScannerControllerProvider.get());
                case 727:
                    context10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor5 = (Executor) provider62.get();
                    switchingProvider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings4 = (SecureSettings) switchingProvider13.get();
                    provider63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider;
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) provider63.get();
                    delegateFactory26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new QRCodeScannerController(context10, executor5, secureSettings4, deviceConfigProxy, (UserTracker) delegateFactory26.get());
                case 728:
                    switchingProvider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context22 = (Context) switchingProvider14.get();
                    CameraIntentsWrapper cameraIntentsWrapper2 = new CameraIntentsWrapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context);
                    provider64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider;
                    ActivityIntentHelper activityIntentHelper2 = (ActivityIntentHelper) provider64.get();
                    delegateFactory27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker10 = (UserTracker) delegateFactory27.get();
                    provider65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager3 = (DevicePolicyManager) provider65.get();
                    provider66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new VideoCameraQuickAffordanceConfig(context22, cameraIntentsWrapper2, activityIntentHelper2, userTracker10, devicePolicyManager3, (CoroutineDispatcher) provider66.get());
                case 729:
                    context11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    RoleManager roleManager = (RoleManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideRoleManagerProvider.get();
                    ShortcutManager shortcutManager = (ShortcutManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShortcutManagerProvider.get();
                    NoteTaskInfoResolver m1626$$Nest$mnoteTaskInfoResolver = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1626$$Nest$mnoteTaskInfoResolver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    NoteTaskEventLogger m1625$$Nest$mnoteTaskEventLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1625$$Nest$mnoteTaskEventLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskBubblesControllerProvider;
                    NoteTaskBubblesController noteTaskBubblesController = (NoteTaskBubblesController) provider67.get();
                    provider68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider;
                    UserManager userManager = (UserManager) provider68.get();
                    provider69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider;
                    KeyguardManager keyguardManager = (KeyguardManager) provider69.get();
                    provider70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider;
                    ActivityManager activityManager2 = (ActivityManager) provider70.get();
                    noteTaskEnabledKeyBoolean = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskEnabledKeyBoolean();
                    provider71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider;
                    DevicePolicyManager devicePolicyManager4 = (DevicePolicyManager) provider71.get();
                    delegateFactory28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker11 = (UserTracker) delegateFactory28.get();
                    switchingProvider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings5 = (SecureSettings) switchingProvider15.get();
                    provider72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope6 = (CoroutineScope) provider72.get();
                    provider73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    return new NoteTaskController(context11, roleManager, shortcutManager, m1626$$Nest$mnoteTaskInfoResolver, m1625$$Nest$mnoteTaskEventLogger, noteTaskBubblesController, userManager, keyguardManager, activityManager2, noteTaskEnabledKeyBoolean, devicePolicyManager4, userTracker11, secureSettings5, coroutineScope6, (CoroutineContext) provider73.get());
                case 730:
                    switchingProvider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context23 = (Context) switchingProvider16.get();
                    provider74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new NoteTaskBubblesController(context23, (CoroutineDispatcher) provider74.get());
                case 731:
                    context12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider;
                    InputManager inputManager = (InputManager) provider75.get();
                    BluetoothAdapter bluetoothAdapter = (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get();
                    switchingProvider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler = (Handler) switchingProvider17.get();
                    provider76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider;
                    Executor executor6 = (Executor) provider76.get();
                    delegateFactory29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags = (FeatureFlags) delegateFactory29.get();
                    provider77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new StylusManager(context12, inputManager, bluetoothAdapter, handler, executor6, featureFlags, (UiEventLogger) provider77.get());
                case 732:
                    provider78 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardQuickAffordancesLogBufferFactory.provideKeyguardQuickAffordancesLogBuffer((LogBufferFactory) provider78.get());
                case 733:
                    provider79 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTouchHandlingInteractorProvider;
                    return new KeyguardTouchHandlingViewModel((KeyguardTouchHandlingInteractor) provider79.get());
                case 734:
                    switchingProvider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context24 = (Context) switchingProvider18.get();
                    provider80 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope7 = (CoroutineScope) provider80.get();
                    provider81 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider81.get();
                    delegateFactory30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl = (KeyguardRepositoryImpl) delegateFactory30.get();
                    provider82 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    UiEventLogger uiEventLogger = (UiEventLogger) provider82.get();
                    delegateFactory31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags2 = (FeatureFlags) delegateFactory31.get();
                    provider83 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) provider83.get();
                    AccessibilityManagerWrapper accessibilityManagerWrapper = (AccessibilityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityManagerWrapperProvider.get();
                    PulsingGestureListener pulsingGestureListener = (PulsingGestureListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulsingGestureListenerProvider.get();
                    delegateFactory32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider;
                    return new KeyguardTouchHandlingInteractor(context24, coroutineScope7, keyguardTransitionInteractor, keyguardRepositoryImpl, uiEventLogger, featureFlags2, broadcastDispatcher, accessibilityManagerWrapper, pulsingGestureListener, (DeviceEntryFaceAuthInteractor) delegateFactory32.get());
                case 735:
                    provider84 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider84.get();
                    delegateFactory33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider;
                    DockManager dockManager = (DockManager) delegateFactory33.get();
                    delegateFactory34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor = (PowerInteractor) delegateFactory34.get();
                    AmbientDisplayConfiguration m973$$Nest$mambientDisplayConfiguration = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m973$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    StatusBarStateController statusBarStateController = (StatusBarStateController) delegateFactory35.get();
                    ShadeLogger m1673$$Nest$mshadeLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DozeInteractor dozeInteractor = (DozeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeInteractorProvider.get();
                    delegateFactory36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker12 = (UserTracker) delegateFactory36.get();
                    delegateFactory37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider;
                    TunerService tunerService = (TunerService) delegateFactory37.get();
                    provider85 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new PulsingGestureListener(falsingManager, dockManager, powerInteractor, m973$$Nest$mambientDisplayConfiguration, statusBarStateController, m1673$$Nest$mshadeLogger, dozeInteractor, userTracker12, tunerService, (DumpManager) provider85.get());
                case 736:
                    delegateFactory38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider;
                    KeyguardRepositoryImpl keyguardRepositoryImpl2 = (KeyguardRepositoryImpl) delegateFactory38.get();
                    delegateFactory39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new DozeInteractor(keyguardRepositoryImpl2, DoubleCheck.lazy(delegateFactory39));
                case 737:
                    provider86 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    delegateFactory40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    delegateFactory41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) delegateFactory41.get();
                    provider87 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider87.get();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpNotificationInteractor();
                    provider88 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope8 = (CoroutineScope) provider88.get();
                    provider89 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockRepositoryImplProvider;
                    return new KeyguardClockInteractor(keyguardInteractor, keyguardTransitionInteractor2, coroutineScope8, (KeyguardClockRepositoryImpl) provider89.get());
                case 738:
                    switchingProvider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings6 = (SecureSettings) switchingProvider19.get();
                    provider90 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getClockRegistryProvider;
                    ClockRegistry clockRegistry = (ClockRegistry) provider90.get();
                    ClockEventController m1518$$Nest$mclockEventController = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1518$$Nest$mclockEventController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider91 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) provider91.get();
                    provider92 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope9 = (CoroutineScope) provider92.get();
                    switchingProvider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context25 = (Context) switchingProvider20.get();
                    delegateFactory42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    return new KeyguardClockRepositoryImpl(secureSettings6, clockRegistry, m1518$$Nest$mclockEventController, coroutineDispatcher6, coroutineScope9, context25, (FeatureFlagsClassic) delegateFactory42.get());
                case 739:
                    switchingProvider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context26 = (Context) switchingProvider21.get();
                    provider93 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider;
                    PluginManager pluginManager = (PluginManager) provider93.get();
                    provider94 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope10 = (CoroutineScope) provider94.get();
                    provider95 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) provider95.get();
                    provider96 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) provider96.get();
                    delegateFactory43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider;
                    FeatureFlags featureFlags3 = (FeatureFlags) delegateFactory43.get();
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    provider97 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    LayoutInflater layoutInflater = (LayoutInflater) provider97.get();
                    clockMessageBuffers = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.clockMessageBuffers();
                    return ClockRegistryModule_GetClockRegistryFactory.getClockRegistry(context26, pluginManager, coroutineScope10, coroutineDispatcher7, coroutineDispatcher8, featureFlags3, m977$$Nest$mmainResources, layoutInflater, clockMessageBuffers);
                case 740:
                    provider98 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardClockLogFactory.provideKeyguardClockLog((LogBufferFactory) provider98.get());
                case 741:
                    provider99 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardSmallClockLogFactory.provideKeyguardSmallClockLog((LogBufferFactory) provider99.get());
                case 742:
                    provider100 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideKeyguardLargeClockLogFactory.provideKeyguardLargeClockLog((LogBufferFactory) provider100.get());
                case 743:
                    provider101 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DreamingToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider101.get());
                case 744:
                    provider102 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    provider103 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider103.get();
                    provider104 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    KeyguardTransitionAnimationFlow keyguardTransitionAnimationFlow = (KeyguardTransitionAnimationFlow) provider104.get();
                    delegateFactory44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) delegateFactory44.get();
                    provider105 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new OccludedToLockscreenTransitionViewModel(configurationInteractor, keyguardTransitionAnimationFlow, keyguardInteractor2, (KeyguardTransitionInteractor) provider105.get());
                case 745:
                    ShadeDependentFlows m1671$$Nest$mshadeDependentFlows = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1671$$Nest$mshadeDependentFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider106 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToDreamingTransitionViewModel(m1671$$Nest$mshadeDependentFlows, (KeyguardTransitionAnimationFlow) provider106.get());
                case 746:
                    provider107 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GoneToDreamingTransitionViewModel((KeyguardTransitionAnimationFlow) provider107.get());
                case 747:
                    provider108 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GoneToDreamingLockscreenHostedTransitionViewModel((KeyguardTransitionAnimationFlow) provider108.get());
                case 748:
                    ShadeDependentFlows m1671$$Nest$mshadeDependentFlows2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1671$$Nest$mshadeDependentFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider109 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor2 = (ConfigurationInteractor) provider109.get();
                    provider110 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToOccludedTransitionViewModel(m1671$$Nest$mshadeDependentFlows2, configurationInteractor2, (KeyguardTransitionAnimationFlow) provider110.get());
                case 749:
                    KeyguardRootView keyguardRootView = (KeyguardRootView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardRootViewProvider.get();
                    KeyguardRootViewModel keyguardRootViewModel = (KeyguardRootViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRootViewModelProvider.get();
                    keyguardIndicationAreaViewModel = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationAreaViewModel();
                    delegateFactory45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    NotificationShadeWindowView notificationShadeWindowView = (NotificationShadeWindowView) delegateFactory45.get();
                    provider111 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider;
                    KeyguardIndicationController keyguardIndicationController = (KeyguardIndicationController) provider111.get();
                    delegateFactory46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController = (ScreenOffAnimationController) delegateFactory46.get();
                    provider112 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludingAppDeviceEntryMessageViewModelProvider;
                    OccludingAppDeviceEntryMessageViewModel occludingAppDeviceEntryMessageViewModel = (OccludingAppDeviceEntryMessageViewModel) provider112.get();
                    ChipbarCoordinator chipbarCoordinator = (ChipbarCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarCoordinatorProvider.get();
                    KeyguardBlueprintViewModel keyguardBlueprintViewModel = new KeyguardBlueprintViewModel((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (KeyguardBlueprintInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBlueprintInteractorProvider.get());
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    ConfigurationState configurationState = (ConfigurationState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationStateProvider.get();
                    context13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider113 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider;
                    KeyguardIndicationController keyguardIndicationController2 = (KeyguardIndicationController) provider113.get();
                    Lazy lazy8 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.legacyLockIconViewControllerProvider);
                    delegateFactory47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor = (ShadeInteractor) delegateFactory47.get();
                    provider114 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) provider114.get();
                    provider115 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryHapticsInteractorProvider;
                    DeviceEntryHapticsInteractor deviceEntryHapticsInteractor = (DeviceEntryHapticsInteractor) provider115.get();
                    provider116 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider116.get();
                    provider117 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager2 = (FalsingManager) provider117.get();
                    KeyguardClockViewModel keyguardClockViewModel = (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get();
                    KeyguardSmartspaceViewModel keyguardSmartspaceViewModel = (KeyguardSmartspaceViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceViewModelProvider.get();
                    provider118 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider34;
                    switchingProvider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLockscreenBlueprintsProvider;
                    DoubleCheck.lazy(switchingProvider22);
                    provider119 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider;
                    KeyguardClockInteractor keyguardClockInteractor = (KeyguardClockInteractor) provider119.get();
                    delegateFactory48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider;
                    KeyguardViewMediator keyguardViewMediator = (KeyguardViewMediator) delegateFactory48.get();
                    provider120 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUnlockTrackerViewBinderGoogleProvider;
                    Optional of = Optional.of((DeviceEntryUnlockTrackerViewBinderGoogle) provider120.get());
                    delegateFactory49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    StatusBarKeyguardViewManager statusBarKeyguardViewManager2 = (StatusBarKeyguardViewManager) delegateFactory49.get();
                    provider121 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new KeyguardViewConfigurator(keyguardRootView, keyguardRootViewModel, keyguardIndicationAreaViewModel, notificationShadeWindowView, keyguardIndicationController, screenOffAnimationController, occludingAppDeviceEntryMessageViewModel, chipbarCoordinator, keyguardBlueprintViewModel, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, configurationState, context13, keyguardIndicationController2, lazy8, shadeInteractor, interactionJankMonitor, deviceEntryHapticsInteractor, vibratorHelper, falsingManager2, keyguardClockViewModel, keyguardSmartspaceViewModel, keyguardClockInteractor, keyguardViewMediator, of, statusBarKeyguardViewManager2, (CoroutineDispatcher) provider121.get(), (MSDLPlayer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMSDLPlayerProvider.get());
                case 750:
                    delegateFactory50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    return ShadeViewProviderModule_Companion_ProvidesKeyguardRootViewFactory.providesKeyguardRootView((NotificationShadeWindowView) delegateFactory50.get());
                case 751:
                    provider122 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope11 = (CoroutineScope) provider122.get();
                    delegateFactory51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    DeviceEntryInteractor deviceEntryInteractor = (DeviceEntryInteractor) delegateFactory51.get();
                    delegateFactory52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider;
                    DozeParameters dozeParameters = (DozeParameters) delegateFactory52.get();
                    delegateFactory53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor3 = (KeyguardInteractor) delegateFactory53.get();
                    provider123 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider;
                    CommunalInteractor communalInteractor = (CommunalInteractor) provider123.get();
                    provider124 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) provider124.get();
                    NotificationsKeyguardInteractor notificationsKeyguardInteractor = new NotificationsKeyguardInteractor((NotificationsKeyguardViewStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsKeyguardViewStateRepositoryProvider.get());
                    NotificationShadeWindowModel notificationShadeWindowModel = (NotificationShadeWindowModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowModelProvider.get();
                    NotificationIconContainerAlwaysOnDisplayViewModel notificationIconContainerAlwaysOnDisplayViewModel = (NotificationIconContainerAlwaysOnDisplayViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationIconContainerAlwaysOnDisplayViewModelProvider.get();
                    AlternateBouncerToAodTransitionViewModel alternateBouncerToAodTransitionViewModel = (AlternateBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToAodTransitionViewModelProvider.get();
                    AlternateBouncerToGoneTransitionViewModel alternateBouncerToGoneTransitionViewModel = (AlternateBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToGoneTransitionViewModelProvider.get();
                    provider125 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToLockscreenTransitionViewModelProvider;
                    AlternateBouncerToLockscreenTransitionViewModel alternateBouncerToLockscreenTransitionViewModel = (AlternateBouncerToLockscreenTransitionViewModel) provider125.get();
                    provider126 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToOccludedTransitionViewModelProvider;
                    AlternateBouncerToOccludedTransitionViewModel alternateBouncerToOccludedTransitionViewModel = (AlternateBouncerToOccludedTransitionViewModel) provider126.get();
                    AodToGoneTransitionViewModel aodToGoneTransitionViewModel = (AodToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToGoneTransitionViewModelProvider.get();
                    provider127 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider;
                    AodToLockscreenTransitionViewModel aodToLockscreenTransitionViewModel = (AodToLockscreenTransitionViewModel) provider127.get();
                    AodToOccludedTransitionViewModel aodToOccludedTransitionViewModel = (AodToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToOccludedTransitionViewModelProvider.get();
                    provider128 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToGoneTransitionViewModelProvider;
                    DozingToGoneTransitionViewModel dozingToGoneTransitionViewModel = (DozingToGoneTransitionViewModel) provider128.get();
                    DozingToLockscreenTransitionViewModel dozingToLockscreenTransitionViewModel = (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get();
                    DozingToOccludedTransitionViewModel dozingToOccludedTransitionViewModel = (DozingToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToOccludedTransitionViewModelProvider.get();
                    DreamingToAodTransitionViewModel dreamingToAodTransitionViewModel = (DreamingToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToAodTransitionViewModelProvider.get();
                    provider129 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToGoneTransitionViewModelProvider;
                    DreamingToGoneTransitionViewModel dreamingToGoneTransitionViewModel = (DreamingToGoneTransitionViewModel) provider129.get();
                    provider130 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider;
                    DreamingToLockscreenTransitionViewModel dreamingToLockscreenTransitionViewModel = (DreamingToLockscreenTransitionViewModel) provider130.get();
                    GlanceableHubToLockscreenTransitionViewModel glanceableHubToLockscreenTransitionViewModel = (GlanceableHubToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToLockscreenTransitionViewModelProvider.get();
                    GoneToAodTransitionViewModel goneToAodTransitionViewModel = (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get();
                    GoneToDozingTransitionViewModel goneToDozingTransitionViewModel = (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get();
                    GoneToDreamingTransitionViewModel goneToDreamingTransitionViewModel = (GoneToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingTransitionViewModelProvider.get();
                    GoneToLockscreenTransitionViewModel goneToLockscreenTransitionViewModel = (GoneToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToLockscreenTransitionViewModelProvider.get();
                    LockscreenToAodTransitionViewModel lockscreenToAodTransitionViewModel = (LockscreenToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToAodTransitionViewModelProvider.get();
                    LockscreenToDozingTransitionViewModel lockscreenToDozingTransitionViewModel = (LockscreenToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDozingTransitionViewModelProvider.get();
                    LockscreenToDreamingTransitionViewModel lockscreenToDreamingTransitionViewModel = (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get();
                    LockscreenToGlanceableHubTransitionViewModel lockscreenToGlanceableHubTransitionViewModel = (LockscreenToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGlanceableHubTransitionViewModelProvider.get();
                    LockscreenToGoneTransitionViewModel lockscreenToGoneTransitionViewModel = (LockscreenToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGoneTransitionViewModelProvider.get();
                    LockscreenToOccludedTransitionViewModel lockscreenToOccludedTransitionViewModel = (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get();
                    LockscreenToPrimaryBouncerTransitionViewModel lockscreenToPrimaryBouncerTransitionViewModel = (LockscreenToPrimaryBouncerTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToPrimaryBouncerTransitionViewModelProvider.get();
                    provider131 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAlternateBouncerTransitionViewModelProvider;
                    OccludedToAlternateBouncerTransitionViewModel occludedToAlternateBouncerTransitionViewModel = (OccludedToAlternateBouncerTransitionViewModel) provider131.get();
                    OccludedToAodTransitionViewModel occludedToAodTransitionViewModel = (OccludedToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAodTransitionViewModelProvider.get();
                    OccludedToDozingTransitionViewModel occludedToDozingTransitionViewModel = (OccludedToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToDozingTransitionViewModelProvider.get();
                    provider132 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider;
                    OccludedToLockscreenTransitionViewModel occludedToLockscreenTransitionViewModel = (OccludedToLockscreenTransitionViewModel) provider132.get();
                    PrimaryBouncerToAodTransitionViewModel primaryBouncerToAodTransitionViewModel = (PrimaryBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToAodTransitionViewModelProvider.get();
                    PrimaryBouncerToGoneTransitionViewModel primaryBouncerToGoneTransitionViewModel = (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get();
                    PrimaryBouncerToLockscreenTransitionViewModel primaryBouncerToLockscreenTransitionViewModel = (PrimaryBouncerToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToLockscreenTransitionViewModelProvider.get();
                    delegateFactory54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider;
                    ScreenOffAnimationController screenOffAnimationController2 = (ScreenOffAnimationController) delegateFactory54.get();
                    AodBurnInViewModel aodBurnInViewModel = (AodBurnInViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodBurnInViewModelProvider.get();
                    provider133 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodAlphaViewModelProvider;
                    AodAlphaViewModel aodAlphaViewModel = (AodAlphaViewModel) provider133.get();
                    delegateFactory55 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    return new KeyguardRootViewModel(coroutineScope11, deviceEntryInteractor, dozeParameters, keyguardInteractor3, communalInteractor, keyguardTransitionInteractor3, notificationsKeyguardInteractor, notificationShadeWindowModel, notificationIconContainerAlwaysOnDisplayViewModel, alternateBouncerToAodTransitionViewModel, alternateBouncerToGoneTransitionViewModel, alternateBouncerToLockscreenTransitionViewModel, alternateBouncerToOccludedTransitionViewModel, aodToGoneTransitionViewModel, aodToLockscreenTransitionViewModel, aodToOccludedTransitionViewModel, dozingToGoneTransitionViewModel, dozingToLockscreenTransitionViewModel, dozingToOccludedTransitionViewModel, dreamingToAodTransitionViewModel, dreamingToGoneTransitionViewModel, dreamingToLockscreenTransitionViewModel, glanceableHubToLockscreenTransitionViewModel, goneToAodTransitionViewModel, goneToDozingTransitionViewModel, goneToDreamingTransitionViewModel, goneToLockscreenTransitionViewModel, lockscreenToAodTransitionViewModel, lockscreenToDozingTransitionViewModel, lockscreenToDreamingTransitionViewModel, lockscreenToGlanceableHubTransitionViewModel, lockscreenToGoneTransitionViewModel, lockscreenToOccludedTransitionViewModel, lockscreenToPrimaryBouncerTransitionViewModel, occludedToAlternateBouncerTransitionViewModel, occludedToAodTransitionViewModel, occludedToDozingTransitionViewModel, occludedToLockscreenTransitionViewModel, primaryBouncerToAodTransitionViewModel, primaryBouncerToGoneTransitionViewModel, primaryBouncerToLockscreenTransitionViewModel, screenOffAnimationController2, aodBurnInViewModel, aodAlphaViewModel, (ShadeInteractor) delegateFactory55.get());
                case 752:
                    provider134 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor4 = (KeyguardTransitionInteractor) provider134.get();
                    delegateFactory56 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    DoubleCheck.lazy(delegateFactory56);
                    provider135 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider;
                    DoubleCheck.lazy(provider135);
                    provider136 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    return new NotificationShadeWindowModel(keyguardTransitionInteractor4);
                case 753:
                    provider137 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext = (CoroutineContext) provider137.get();
                    AlwaysOnDisplayNotificationIconsInteractor m1501$$Nest$malwaysOnDisplayNotificationIconsInteractor = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1501$$Nest$malwaysOnDisplayNotificationIconsInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    delegateFactory57 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor4 = (KeyguardInteractor) delegateFactory57.get();
                    provider138 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor5 = (KeyguardTransitionInteractor) provider138.get();
                    Resources m977$$Nest$mmainResources2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    delegateFactory58 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    return new NotificationIconContainerAlwaysOnDisplayViewModel(coroutineContext, m1501$$Nest$malwaysOnDisplayNotificationIconsInteractor, keyguardInteractor4, keyguardTransitionInteractor5, m977$$Nest$mmainResources2, (ShadeInteractor) delegateFactory58.get());
                case 754:
                    provider139 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor = (DeviceEntryUdfpsInteractor) provider139.get();
                    provider140 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AlternateBouncerToAodTransitionViewModel(deviceEntryUdfpsInteractor, (KeyguardTransitionAnimationFlow) provider140.get());
                case 755:
                    provider141 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AlternateBouncerToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider141.get());
                case 756:
                    provider142 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AlternateBouncerToOccludedTransitionViewModel((KeyguardTransitionAnimationFlow) provider142.get());
                case 757:
                    provider143 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AodToGoneTransitionViewModel((KeyguardTransitionAnimationFlow) provider143.get());
                case 758:
                    delegateFactory59 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor2 = (ShadeInteractor) delegateFactory59.get();
                    provider144 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AodToLockscreenTransitionViewModel(shadeInteractor2, (KeyguardTransitionAnimationFlow) provider144.get());
                case 759:
                    provider145 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AodToOccludedTransitionViewModel((KeyguardTransitionAnimationFlow) provider145.get());
                case 760:
                    provider146 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DozingToGoneTransitionViewModel((KeyguardTransitionAnimationFlow) provider146.get());
                case 761:
                    provider147 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DozingToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider147.get());
                case 762:
                    provider148 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DozingToOccludedTransitionViewModel((KeyguardTransitionAnimationFlow) provider148.get());
                case 763:
                    provider149 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor2 = (DeviceEntryUdfpsInteractor) provider149.get();
                    provider150 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DreamingToAodTransitionViewModel(deviceEntryUdfpsInteractor2, (KeyguardTransitionAnimationFlow) provider150.get());
                case 764:
                    provider151 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DreamingToGoneTransitionViewModel((KeyguardTransitionAnimationFlow) provider151.get());
                case 765:
                    provider152 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor3 = (DeviceEntryUdfpsInteractor) provider152.get();
                    delegateFactory60 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor2 = (PowerInteractor) delegateFactory60.get();
                    provider153 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GoneToAodTransitionViewModel(deviceEntryUdfpsInteractor3, powerInteractor2, (KeyguardTransitionAnimationFlow) provider153.get());
                case 766:
                    provider154 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor4 = (DeviceEntryUdfpsInteractor) provider154.get();
                    provider155 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GoneToDozingTransitionViewModel(deviceEntryUdfpsInteractor4, (KeyguardTransitionAnimationFlow) provider155.get());
                case 767:
                    provider156 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GoneToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider156.get());
                case 768:
                    provider157 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor5 = (DeviceEntryUdfpsInteractor) provider157.get();
                    delegateFactory61 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor3 = (PowerInteractor) delegateFactory61.get();
                    ShadeDependentFlows m1671$$Nest$mshadeDependentFlows3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1671$$Nest$mshadeDependentFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider158 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToAodTransitionViewModel(deviceEntryUdfpsInteractor5, powerInteractor3, m1671$$Nest$mshadeDependentFlows3, (KeyguardTransitionAnimationFlow) provider158.get());
                case 769:
                    provider159 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor6 = (DeviceEntryUdfpsInteractor) provider159.get();
                    provider160 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToDozingTransitionViewModel(deviceEntryUdfpsInteractor6, (KeyguardTransitionAnimationFlow) provider160.get());
                case 770:
                    provider161 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    KeyguardTransitionAnimationFlow keyguardTransitionAnimationFlow2 = (KeyguardTransitionAnimationFlow) provider161.get();
                    delegateFactory62 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new LockscreenToGoneTransitionViewModel(keyguardTransitionAnimationFlow2, (SysuiStatusBarStateController) delegateFactory62.get());
                case 771:
                    ShadeDependentFlows m1671$$Nest$mshadeDependentFlows4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1671$$Nest$mshadeDependentFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider162 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToPrimaryBouncerTransitionViewModel(m1671$$Nest$mshadeDependentFlows4, (KeyguardTransitionAnimationFlow) provider162.get());
                case 772:
                    provider163 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new OccludedToAlternateBouncerTransitionViewModel((KeyguardTransitionAnimationFlow) provider163.get());
                case 773:
                    provider164 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor7 = (DeviceEntryUdfpsInteractor) provider164.get();
                    provider165 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new OccludedToAodTransitionViewModel(deviceEntryUdfpsInteractor7, (KeyguardTransitionAnimationFlow) provider165.get());
                case 774:
                    provider166 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor8 = (DeviceEntryUdfpsInteractor) provider166.get();
                    provider167 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new OccludedToDozingTransitionViewModel(deviceEntryUdfpsInteractor8, (KeyguardTransitionAnimationFlow) provider167.get());
                case 775:
                    provider168 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor9 = (DeviceEntryUdfpsInteractor) provider168.get();
                    provider169 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new PrimaryBouncerToAodTransitionViewModel(deviceEntryUdfpsInteractor9, (KeyguardTransitionAnimationFlow) provider169.get());
                case 776:
                    provider170 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new PrimaryBouncerToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider170.get());
                case 777:
                    provider171 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope12 = (CoroutineScope) provider171.get();
                    BurnInInteractor burnInInteractor = (BurnInInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.burnInInteractorProvider.get();
                    provider172 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor3 = (ConfigurationInteractor) provider172.get();
                    delegateFactory63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor5 = (KeyguardInteractor) delegateFactory63.get();
                    provider173 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor6 = (KeyguardTransitionInteractor) provider173.get();
                    GoneToAodTransitionViewModel goneToAodTransitionViewModel2 = (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get();
                    LockscreenToAodTransitionViewModel lockscreenToAodTransitionViewModel2 = (LockscreenToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToAodTransitionViewModelProvider.get();
                    provider174 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider;
                    AodToLockscreenTransitionViewModel aodToLockscreenTransitionViewModel2 = (AodToLockscreenTransitionViewModel) provider174.get();
                    provider175 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider;
                    return new AodBurnInViewModel(coroutineScope12, burnInInteractor, configurationInteractor3, keyguardInteractor5, keyguardTransitionInteractor6, goneToAodTransitionViewModel2, lockscreenToAodTransitionViewModel2, aodToLockscreenTransitionViewModel2, (OccludedToLockscreenTransitionViewModel) provider175.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get());
                case 778:
                    context14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    BurnInHelperWrapper burnInHelperWrapper = new BurnInHelperWrapper();
                    provider176 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope13 = (CoroutineScope) provider176.get();
                    provider177 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor4 = (ConfigurationInteractor) provider177.get();
                    delegateFactory64 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new BurnInInteractor(context14, burnInHelperWrapper, coroutineScope13, configurationInteractor4, (KeyguardInteractor) delegateFactory64.get());
                case 779:
                    provider178 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider;
                    KeyguardClockInteractor keyguardClockInteractor2 = (KeyguardClockInteractor) provider178.get();
                    provider179 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope14 = (CoroutineScope) provider179.get();
                    NotificationIconContainerAlwaysOnDisplayViewModel notificationIconContainerAlwaysOnDisplayViewModel2 = (NotificationIconContainerAlwaysOnDisplayViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationIconContainerAlwaysOnDisplayViewModelProvider.get();
                    delegateFactory65 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor3 = (ShadeInteractor) delegateFactory65.get();
                    SystemBarUtilsProxyImpl m1697$$Nest$msystemBarUtilsProxyImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1697$$Nest$msystemBarUtilsProxyImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider180 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new KeyguardClockViewModel(keyguardClockInteractor2, coroutineScope14, notificationIconContainerAlwaysOnDisplayViewModel2, shadeInteractor3, m1697$$Nest$msystemBarUtilsProxyImpl, (ConfigurationInteractor) provider180.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 780:
                    provider181 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor7 = (KeyguardTransitionInteractor) provider181.get();
                    GoneToAodTransitionViewModel goneToAodTransitionViewModel3 = (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get();
                    GoneToDozingTransitionViewModel goneToDozingTransitionViewModel2 = (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get();
                    delegateFactory66 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor6 = (KeyguardInteractor) delegateFactory66.get();
                    delegateFactory67 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new AodAlphaViewModel(keyguardTransitionInteractor7, goneToAodTransitionViewModel3, goneToDozingTransitionViewModel2, keyguardInteractor6);
                case 781:
                    provider182 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope15 = (CoroutineScope) provider182.get();
                    provider183 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceInteractorProvider;
                    KeyguardQuickAffordanceInteractor keyguardQuickAffordanceInteractor = (KeyguardQuickAffordanceInteractor) provider183.get();
                    delegateFactory68 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor7 = (KeyguardInteractor) delegateFactory68.get();
                    delegateFactory69 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor4 = (ShadeInteractor) delegateFactory69.get();
                    provider184 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider;
                    AodToLockscreenTransitionViewModel aodToLockscreenTransitionViewModel3 = (AodToLockscreenTransitionViewModel) provider184.get();
                    DozingToLockscreenTransitionViewModel dozingToLockscreenTransitionViewModel2 = (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get();
                    provider185 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingHostedToLockscreenTransitionViewModelProvider;
                    DreamingHostedToLockscreenTransitionViewModel dreamingHostedToLockscreenTransitionViewModel = (DreamingHostedToLockscreenTransitionViewModel) provider185.get();
                    provider186 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider;
                    DreamingToLockscreenTransitionViewModel dreamingToLockscreenTransitionViewModel2 = (DreamingToLockscreenTransitionViewModel) provider186.get();
                    GoneToLockscreenTransitionViewModel goneToLockscreenTransitionViewModel2 = (GoneToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToLockscreenTransitionViewModelProvider.get();
                    provider187 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider;
                    OccludedToLockscreenTransitionViewModel occludedToLockscreenTransitionViewModel2 = (OccludedToLockscreenTransitionViewModel) provider187.get();
                    provider188 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.offToLockscreenTransitionViewModelProvider;
                    OffToLockscreenTransitionViewModel offToLockscreenTransitionViewModel = (OffToLockscreenTransitionViewModel) provider188.get();
                    PrimaryBouncerToLockscreenTransitionViewModel primaryBouncerToLockscreenTransitionViewModel2 = (PrimaryBouncerToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToLockscreenTransitionViewModelProvider.get();
                    GlanceableHubToLockscreenTransitionViewModel glanceableHubToLockscreenTransitionViewModel2 = (GlanceableHubToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToLockscreenTransitionViewModelProvider.get();
                    LockscreenToAodTransitionViewModel lockscreenToAodTransitionViewModel3 = (LockscreenToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToAodTransitionViewModelProvider.get();
                    LockscreenToDozingTransitionViewModel lockscreenToDozingTransitionViewModel2 = (LockscreenToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDozingTransitionViewModelProvider.get();
                    provider189 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingHostedTransitionViewModelProvider;
                    LockscreenToDreamingHostedTransitionViewModel lockscreenToDreamingHostedTransitionViewModel = (LockscreenToDreamingHostedTransitionViewModel) provider189.get();
                    LockscreenToDreamingTransitionViewModel lockscreenToDreamingTransitionViewModel2 = (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get();
                    LockscreenToGoneTransitionViewModel lockscreenToGoneTransitionViewModel2 = (LockscreenToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGoneTransitionViewModelProvider.get();
                    LockscreenToOccludedTransitionViewModel lockscreenToOccludedTransitionViewModel2 = (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get();
                    LockscreenToPrimaryBouncerTransitionViewModel lockscreenToPrimaryBouncerTransitionViewModel2 = (LockscreenToPrimaryBouncerTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToPrimaryBouncerTransitionViewModelProvider.get();
                    LockscreenToGlanceableHubTransitionViewModel lockscreenToGlanceableHubTransitionViewModel2 = (LockscreenToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGlanceableHubTransitionViewModelProvider.get();
                    provider190 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    return new KeyguardQuickAffordancesCombinedViewModel(coroutineScope15, keyguardQuickAffordanceInteractor, keyguardInteractor7, shadeInteractor4, aodToLockscreenTransitionViewModel3, dozingToLockscreenTransitionViewModel2, dreamingHostedToLockscreenTransitionViewModel, dreamingToLockscreenTransitionViewModel2, goneToLockscreenTransitionViewModel2, occludedToLockscreenTransitionViewModel2, offToLockscreenTransitionViewModel, primaryBouncerToLockscreenTransitionViewModel2, glanceableHubToLockscreenTransitionViewModel2, lockscreenToAodTransitionViewModel3, lockscreenToDozingTransitionViewModel2, lockscreenToDreamingHostedTransitionViewModel, lockscreenToDreamingTransitionViewModel2, lockscreenToGoneTransitionViewModel2, lockscreenToOccludedTransitionViewModel2, lockscreenToPrimaryBouncerTransitionViewModel2, lockscreenToGlanceableHubTransitionViewModel2, (KeyguardTransitionInteractor) provider190.get());
                case 782:
                    provider191 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DreamingHostedToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider191.get());
                case 783:
                    provider192 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new OffToLockscreenTransitionViewModel((KeyguardTransitionAnimationFlow) provider192.get());
                case 784:
                    provider193 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new LockscreenToDreamingHostedTransitionViewModel((KeyguardTransitionAnimationFlow) provider193.get());
                case 785:
                    provider194 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludingAppDeviceEntryInteractorProvider;
                    return new OccludingAppDeviceEntryMessageViewModel((OccludingAppDeviceEntryInteractor) provider194.get());
                case 786:
                    BiometricMessageInteractor biometricMessageInteractor = (BiometricMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricMessageInteractorProvider.get();
                    DeviceEntryFingerprintAuthRepository deviceEntryFingerprintAuthRepository = (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get();
                    delegateFactory70 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor8 = (KeyguardInteractor) delegateFactory70.get();
                    provider195 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider;
                    PrimaryBouncerInteractor primaryBouncerInteractor = (PrimaryBouncerInteractor) provider195.get();
                    provider196 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider;
                    AlternateBouncerInteractor alternateBouncerInteractor = (AlternateBouncerInteractor) provider196.get();
                    provider197 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope16 = (CoroutineScope) provider197.get();
                    context15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory71 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter4 = (ActivityStarter) delegateFactory71.get();
                    delegateFactory72 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider;
                    PowerInteractor powerInteractor4 = (PowerInteractor) delegateFactory72.get();
                    provider198 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    provider199 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    return new OccludingAppDeviceEntryInteractor(biometricMessageInteractor, deviceEntryFingerprintAuthRepository, keyguardInteractor8, primaryBouncerInteractor, alternateBouncerInteractor, coroutineScope16, context15, activityStarter4, powerInteractor4, (CommunalSceneInteractor) provider199.get());
                case 787:
                    context16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider200 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarLoggerProvider;
                    ChipbarLogger chipbarLogger = (ChipbarLogger) provider200.get();
                    provider201 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideViewCaptureAwareWindowManagerProvider;
                    ViewCaptureAwareWindowManager viewCaptureAwareWindowManager = (ViewCaptureAwareWindowManager) provider201.get();
                    provider202 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider;
                    DelayableExecutor delayableExecutor7 = (DelayableExecutor) provider202.get();
                    provider203 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider203.get();
                    provider204 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider;
                    ConfigurationController configurationController = (ConfigurationController) provider204.get();
                    provider205 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    DumpManager dumpManager2 = (DumpManager) provider205.get();
                    provider206 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider;
                    PowerManager powerManager = (PowerManager) provider206.get();
                    provider207 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarAnimatorProvider;
                    ChipbarAnimator chipbarAnimator = (ChipbarAnimator) provider207.get();
                    provider208 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager3 = (FalsingManager) provider208.get();
                    provider209 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider;
                    FalsingCollector falsingCollector = (FalsingCollector) provider209.get();
                    provider210 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeChipbarAwayGestureHandlerProvider;
                    SwipeChipbarAwayGestureHandler swipeChipbarAwayGestureHandler = (SwipeChipbarAwayGestureHandler) provider210.get();
                    ViewUtil viewUtil = (ViewUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewUtilProvider.get();
                    provider211 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper2 = (VibratorHelper) provider211.get();
                    WakeLock.Builder m1713$$Nest$mwakeLockBuilder = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1713$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider212 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    return new ChipbarCoordinator(context16, chipbarLogger, viewCaptureAwareWindowManager, delayableExecutor7, accessibilityManager, configurationController, dumpManager2, powerManager, chipbarAnimator, falsingManager3, falsingCollector, swipeChipbarAwayGestureHandler, viewUtil, vibratorHelper2, m1713$$Nest$mwakeLockBuilder, (SystemClock) provider212.get(), (TemporaryViewUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.temporaryViewUiEventLoggerProvider.get());
                case 788:
                    provider213 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipbarLogBufferProvider;
                    return new ChipbarLogger((LogBuffer) provider213.get());
                case 789:
                    provider214 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return TemporaryDisplayModule_Companion_ProvideChipbarLogBufferFactory.provideChipbarLogBuffer((LogBufferFactory) provider214.get());
                case 790:
                    return new ChipbarAnimator();
                case 791:
                    context17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider215 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider;
                    return new SwipeChipbarAwayGestureHandler(context17, (DisplayTracker) provider215.get(), (SwipeUpGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpGestureLoggerProvider.get());
                case 792:
                    provider216 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSwipeUpLogBufferProvider;
                    return new SwipeUpGestureLogger((LogBuffer) provider216.get());
                case 793:
                    provider217 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return LogModule_ProvideSwipeUpLogBufferFactory.provideSwipeUpLogBuffer((LogBufferFactory) provider217.get());
                case 794:
                    return new ViewUtil();
                case 795:
                    provider218 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new TemporaryViewUiEventLogger((UiEventLogger) provider218.get());
                case 796:
                    KeyguardBlueprintRepository keyguardBlueprintRepository = (KeyguardBlueprintRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBlueprintRepositoryProvider.get();
                    provider219 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope17 = (CoroutineScope) provider219.get();
                    delegateFactory73 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor5 = (ShadeInteractor) delegateFactory73.get();
                    provider220 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    return new KeyguardBlueprintInteractor(keyguardBlueprintRepository, coroutineScope17, shadeInteractor5, (ConfigurationInteractor) provider220.get(), (FingerprintPropertyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyInteractorProvider.get(), (SmartspaceSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.smartspaceSectionProvider.get());
                case 797:
                    Set m1665$$Nest$msetOfKeyguardBlueprint = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1665$$Nest$msetOfKeyguardBlueprint(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider23.get();
                    provider221 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesThreadAssertProvider;
                    return new KeyguardBlueprintRepository(m1665$$Nest$msetOfKeyguardBlueprint, handler2, (ThreadAssert) provider221.get());
                case 798:
                    AccessibilityActionsSection m1489$$Nest$maccessibilityActionsSection = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1489$$Nest$maccessibilityActionsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new DefaultKeyguardBlueprint(m1489$$Nest$maccessibilityActionsSection, new DefaultIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationAreaViewModel(), (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1536$$Nest$mdefaultDeviceEntrySection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mdefaultShortcutsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1535$$Nest$mdefaultAmbientIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl)), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1538$$Nest$mdefaultSettingsPopupMenuSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1540$$Nest$mdefaultStatusViewSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new DefaultStatusBarSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleSysUIComponentImpl)), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1537$$Nest$mdefaultNotificationStackScrollLayoutSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1503$$Nest$maodNotificationIconsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new AodBurnInSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (KeyguardRootView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardRootViewProvider.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get()), new CommunalTutorialIndicatorSection(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2), new CommunalTutorialIndicatorViewModel((CommunalTutorialInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTutorialInteractorProvider.get(), (KeyguardBottomAreaInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaInteractorProvider.get()), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get()), (ClockSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.clockSectionProvider.get(), (SmartspaceSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.smartspaceSectionProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1585$$Nest$mkeyguardSliceViewSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1541$$Nest$mdefaultUdfpsAccessibilityOverlaySection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 799:
                    Set m1663$$Nest$msetOfDeviceEntryIconTransition = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$msetOfDeviceEntryIconTransition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    BurnInInteractor burnInInteractor2 = (BurnInInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.burnInInteractorProvider.get();
                    delegateFactory74 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    ShadeInteractor shadeInteractor6 = (ShadeInteractor) delegateFactory74.get();
                    provider222 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor10 = (DeviceEntryUdfpsInteractor) provider222.get();
                    provider223 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor8 = (KeyguardTransitionInteractor) provider223.get();
                    delegateFactory75 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    KeyguardInteractor keyguardInteractor9 = (KeyguardInteractor) delegateFactory75.get();
                    provider224 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider;
                    delegateFactory76 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider;
                    Lazy lazy9 = DoubleCheck.lazy(delegateFactory76);
                    delegateFactory77 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider;
                    DeviceEntryInteractor deviceEntryInteractor2 = (DeviceEntryInteractor) delegateFactory77.get();
                    DeviceEntrySourceInteractor deviceEntrySourceInteractor = (DeviceEntrySourceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySourceInteractorProvider.get();
                    AccessibilityInteractor accessibilityInteractor = (AccessibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityInteractorProvider.get();
                    provider225 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new DeviceEntryIconViewModel(m1663$$Nest$msetOfDeviceEntryIconTransition, burnInInteractor2, shadeInteractor6, deviceEntryUdfpsInteractor10, keyguardTransitionInteractor8, keyguardInteractor9, lazy9, deviceEntryInteractor2, deviceEntrySourceInteractor, accessibilityInteractor, (CoroutineScope) provider225.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get8() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            Provider provider6;
            Provider provider7;
            Provider provider8;
            Provider provider9;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            DelegateFactory delegateFactory;
            Context context;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            Context context2;
            Provider provider17;
            Provider provider18;
            Provider provider19;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            Provider provider23;
            Provider provider24;
            Provider provider25;
            DelegateFactory delegateFactory2;
            DelegateFactory delegateFactory3;
            Provider provider26;
            Provider provider27;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 800:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor = (DeviceEntryUdfpsInteractor) provider.get();
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AlternateBouncerToDozingTransitionViewModel(deviceEntryUdfpsInteractor, (KeyguardTransitionAnimationFlow) provider2.get());
                case 801:
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AlternateBouncerToPrimaryBouncerTransitionViewModel((KeyguardTransitionAnimationFlow) provider3.get());
                case 802:
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new AodToPrimaryBouncerTransitionViewModel((KeyguardTransitionAnimationFlow) provider4.get());
                case 803:
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DozingToPrimaryBouncerTransitionViewModel((KeyguardTransitionAnimationFlow) provider5.get());
                case 804:
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor2 = (DeviceEntryUdfpsInteractor) provider6.get();
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new PrimaryBouncerToDozingTransitionViewModel(deviceEntryUdfpsInteractor2, (KeyguardTransitionAnimationFlow) provider7.get());
                case 805:
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GlanceableHubToOccludedTransitionViewModel((KeyguardTransitionAnimationFlow) provider8.get());
                case 806:
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new OccludedToGlanceableHubTransitionViewModel((KeyguardTransitionAnimationFlow) provider9.get());
                case 807:
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new GoneToGlanceableHubTransitionViewModel((KeyguardTransitionAnimationFlow) provider10.get());
                case 808:
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new PrimaryBouncerToGlanceableHubTransitionViewModel((KeyguardTransitionAnimationFlow) provider11.get());
                case 809:
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider;
                    return new DozingToGlanceableHubTransitionViewModel((KeyguardTransitionAnimationFlow) provider12.get());
                case 810:
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new DeviceEntrySourceInteractor((KeyguardInteractor) delegateFactory.get());
                case 811:
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor = (ConfigurationInteractor) provider13.get();
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider;
                    DeviceEntryUdfpsInteractor deviceEntryUdfpsInteractor3 = (DeviceEntryUdfpsInteractor) provider14.get();
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) provider15.get();
                    DeviceEntryIconViewModel deviceEntryIconViewModel = (DeviceEntryIconViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryIconViewModelProvider.get();
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider;
                    return new DeviceEntryForegroundViewModel(context, configurationInteractor, deviceEntryUdfpsInteractor3, keyguardTransitionInteractor, deviceEntryIconViewModel, (UdfpsOverlayInteractor) provider16.get());
                case 812:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DeviceEntryIconViewModel deviceEntryIconViewModel2 = (DeviceEntryIconViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryIconViewModelProvider.get();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider;
                    KeyguardTransitionInteractor keyguardTransitionInteractor2 = (KeyguardTransitionInteractor) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider;
                    ConfigurationInteractor configurationInteractor2 = (ConfigurationInteractor) provider18.get();
                    AlternateBouncerToAodTransitionViewModel alternateBouncerToAodTransitionViewModel = (AlternateBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToAodTransitionViewModelProvider.get();
                    AlternateBouncerToDozingTransitionViewModel alternateBouncerToDozingTransitionViewModel = (AlternateBouncerToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToDozingTransitionViewModelProvider.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider;
                    AodToLockscreenTransitionViewModel aodToLockscreenTransitionViewModel = (AodToLockscreenTransitionViewModel) provider19.get();
                    DozingToLockscreenTransitionViewModel dozingToLockscreenTransitionViewModel = (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get();
                    DreamingToAodTransitionViewModel dreamingToAodTransitionViewModel = (DreamingToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToAodTransitionViewModelProvider.get();
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider;
                    DreamingToLockscreenTransitionViewModel dreamingToLockscreenTransitionViewModel = (DreamingToLockscreenTransitionViewModel) provider20.get();
                    GoneToAodTransitionViewModel goneToAodTransitionViewModel = (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get();
                    GoneToDozingTransitionViewModel goneToDozingTransitionViewModel = (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get();
                    GoneToLockscreenTransitionViewModel goneToLockscreenTransitionViewModel = (GoneToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToLockscreenTransitionViewModelProvider.get();
                    LockscreenToAodTransitionViewModel lockscreenToAodTransitionViewModel = (LockscreenToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToAodTransitionViewModelProvider.get();
                    OccludedToAodTransitionViewModel occludedToAodTransitionViewModel = (OccludedToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAodTransitionViewModelProvider.get();
                    OccludedToDozingTransitionViewModel occludedToDozingTransitionViewModel = (OccludedToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToDozingTransitionViewModelProvider.get();
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider;
                    return new DeviceEntryBackgroundViewModel(context2, deviceEntryIconViewModel2, keyguardTransitionInteractor2, configurationInteractor2, alternateBouncerToAodTransitionViewModel, alternateBouncerToDozingTransitionViewModel, aodToLockscreenTransitionViewModel, dozingToLockscreenTransitionViewModel, dreamingToAodTransitionViewModel, dreamingToLockscreenTransitionViewModel, goneToAodTransitionViewModel, goneToDozingTransitionViewModel, goneToLockscreenTransitionViewModel, lockscreenToAodTransitionViewModel, occludedToAodTransitionViewModel, occludedToDozingTransitionViewModel, (OccludedToLockscreenTransitionViewModel) provider21.get(), (PrimaryBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToAodTransitionViewModelProvider.get(), (PrimaryBouncerToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToDozingTransitionViewModelProvider.get(), (PrimaryBouncerToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToLockscreenTransitionViewModelProvider.get(), (LockscreenToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDozingTransitionViewModelProvider.get());
                case 813:
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return ((LogBufferFactory) provider22.get()).create(200, "LongPressViewLog");
                case 814:
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider;
                    FalsingManager falsingManager = (FalsingManager) provider23.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider;
                    VibratorHelper vibratorHelper = (VibratorHelper) provider24.get();
                    KeyguardQuickAffordancesLogger keyguardQuickAffordancesLogger = new KeyguardQuickAffordancesLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardQuickAffordancesLogBufferProvider.get());
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    return new KeyguardQuickAffordanceViewBinder(falsingManager, vibratorHelper, keyguardQuickAffordancesLogger);
                case 815:
                    AmbientIndicationRepository ambientIndicationRepository = (AmbientIndicationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientIndicationRepositoryProvider.get();
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider;
                    return new AmbientIndicationInteractor(ambientIndicationRepository, (KeyguardInteractor) delegateFactory2.get());
                case 816:
                    return new AmbientIndicationRepository();
                case 817:
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider;
                    return (SharedNotificationContainer) ((NotificationShadeWindowView) delegateFactory3.get()).requireViewById(R.id.shared_notification_container);
                case 818:
                    SharedNotificationContainerInteractor sharedNotificationContainerInteractor = (SharedNotificationContainerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerInteractorProvider.get();
                    DumpManager dumpManager = (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get();
                    CoroutineScope coroutineScope = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    KeyguardTransitionInteractor keyguardTransitionInteractor3 = (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get();
                    ShadeInteractor shadeInteractor = (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get();
                    NotificationStackAppearanceInteractor notificationStackAppearanceInteractor = (NotificationStackAppearanceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackAppearanceInteractorProvider.get();
                    AlternateBouncerToGoneTransitionViewModel alternateBouncerToGoneTransitionViewModel = (AlternateBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToGoneTransitionViewModelProvider.get();
                    AodToGoneTransitionViewModel aodToGoneTransitionViewModel = (AodToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToGoneTransitionViewModelProvider.get();
                    AodToLockscreenTransitionViewModel aodToLockscreenTransitionViewModel2 = (AodToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider.get();
                    AodToOccludedTransitionViewModel aodToOccludedTransitionViewModel = (AodToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToOccludedTransitionViewModelProvider.get();
                    DozingToGlanceableHubTransitionViewModel dozingToGlanceableHubTransitionViewModel = (DozingToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToGlanceableHubTransitionViewModelProvider.get();
                    DozingToLockscreenTransitionViewModel dozingToLockscreenTransitionViewModel2 = (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get();
                    DozingToOccludedTransitionViewModel dozingToOccludedTransitionViewModel = (DozingToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToOccludedTransitionViewModelProvider.get();
                    DreamingToLockscreenTransitionViewModel dreamingToLockscreenTransitionViewModel2 = (DreamingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider.get();
                    GlanceableHubToLockscreenTransitionViewModel glanceableHubToLockscreenTransitionViewModel = (GlanceableHubToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToLockscreenTransitionViewModelProvider.get();
                    GoneToAodTransitionViewModel goneToAodTransitionViewModel2 = (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get();
                    GoneToDozingTransitionViewModel goneToDozingTransitionViewModel2 = (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get();
                    GoneToDreamingTransitionViewModel goneToDreamingTransitionViewModel = (GoneToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingTransitionViewModelProvider.get();
                    GoneToLockscreenTransitionViewModel goneToLockscreenTransitionViewModel2 = (GoneToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToLockscreenTransitionViewModelProvider.get();
                    LockscreenToDreamingTransitionViewModel lockscreenToDreamingTransitionViewModel = (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get();
                    LockscreenToGlanceableHubTransitionViewModel lockscreenToGlanceableHubTransitionViewModel = (LockscreenToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGlanceableHubTransitionViewModelProvider.get();
                    LockscreenToGoneTransitionViewModel lockscreenToGoneTransitionViewModel = (LockscreenToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGoneTransitionViewModelProvider.get();
                    LockscreenToPrimaryBouncerTransitionViewModel lockscreenToPrimaryBouncerTransitionViewModel = (LockscreenToPrimaryBouncerTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToPrimaryBouncerTransitionViewModelProvider.get();
                    LockscreenToOccludedTransitionViewModel lockscreenToOccludedTransitionViewModel = (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get();
                    OccludedToAodTransitionViewModel occludedToAodTransitionViewModel2 = (OccludedToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAodTransitionViewModelProvider.get();
                    OccludedToGoneTransitionViewModel occludedToGoneTransitionViewModel = (OccludedToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToGoneTransitionViewModelProvider.get();
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider;
                    OccludedToLockscreenTransitionViewModel occludedToLockscreenTransitionViewModel = (OccludedToLockscreenTransitionViewModel) provider26.get();
                    PrimaryBouncerToGoneTransitionViewModel primaryBouncerToGoneTransitionViewModel = (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get();
                    PrimaryBouncerToLockscreenTransitionViewModel primaryBouncerToLockscreenTransitionViewModel = (PrimaryBouncerToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToLockscreenTransitionViewModelProvider.get();
                    AodBurnInViewModel aodBurnInViewModel = (AodBurnInViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodBurnInViewModelProvider.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider;
                    CommunalSceneInteractor communalSceneInteractor = (CommunalSceneInteractor) provider27.get();
                    return new SharedNotificationContainerViewModel(sharedNotificationContainerInteractor, dumpManager, coroutineScope, keyguardInteractor, keyguardTransitionInteractor3, shadeInteractor, notificationStackAppearanceInteractor, alternateBouncerToGoneTransitionViewModel, aodToGoneTransitionViewModel, aodToLockscreenTransitionViewModel2, aodToOccludedTransitionViewModel, dozingToGlanceableHubTransitionViewModel, dozingToLockscreenTransitionViewModel2, dozingToOccludedTransitionViewModel, dreamingToLockscreenTransitionViewModel2, glanceableHubToLockscreenTransitionViewModel, goneToAodTransitionViewModel2, goneToDozingTransitionViewModel2, goneToDreamingTransitionViewModel, goneToLockscreenTransitionViewModel2, lockscreenToDreamingTransitionViewModel, lockscreenToGlanceableHubTransitionViewModel, lockscreenToGoneTransitionViewModel, lockscreenToPrimaryBouncerTransitionViewModel, lockscreenToOccludedTransitionViewModel, occludedToAodTransitionViewModel2, occludedToGoneTransitionViewModel, occludedToLockscreenTransitionViewModel, primaryBouncerToGoneTransitionViewModel, primaryBouncerToLockscreenTransitionViewModel, aodBurnInViewModel, communalSceneInteractor);
                case 819:
                    return new NotificationStackAppearanceInteractor((NotificationViewHeightRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationViewHeightRepositoryProvider.get(), (NotificationPlaceholderRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPlaceholderRepositoryProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 820:
                    return new NotificationViewHeightRepository();
                case 821:
                    return new NotificationPlaceholderRepository();
                case 822:
                    return new OccludedToGoneTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 823:
                    return new SharedNotificationContainerBinder((NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (NotificationStackSizeCalculator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackSizeCalculatorProvider.get(), (NotificationScrollViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationScrollViewBinderProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get());
                case 824:
                    return new NotificationScrollViewBinder((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (NotificationScrollView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$32) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider33.get(), (ConfigurationState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationStateProvider.get());
                case 825:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$32
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 826:
                    KeyguardClockInteractor keyguardClockInteractor = (KeyguardClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider.get();
                    KeyguardClockViewModel keyguardClockViewModel = (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get();
                    Context context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new ClockSection(keyguardClockInteractor, keyguardClockViewModel, context3, DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBlueprintInteractorProvider), (KeyguardRootViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRootViewModelProvider.get(), (AodBurnInViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodBurnInViewModelProvider.get());
                case 827:
                    return new KeyguardSmartspaceViewModel((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (LockscreenSmartspaceController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSmartspaceControllerProvider.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get(), (KeyguardSmartspaceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceInteractorProvider.get());
                case 828:
                    return new KeyguardSmartspaceInteractor((KeyguardSmartspaceRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceRepositoryImplProvider.get());
                case 829:
                    Context context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new KeyguardSmartspaceRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 830:
                    return new SmartspaceSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get(), (KeyguardSmartspaceViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceViewModelProvider.get(), (KeyguardSmartspaceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceInteractorProvider.get(), (LockscreenSmartspaceController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSmartspaceControllerProvider.get(), (KeyguardUnlockAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBlueprintInteractorProvider));
                case 831:
                    AccessibilityActionsSection m1489$$Nest$maccessibilityActionsSection = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1489$$Nest$maccessibilityActionsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return new SplitShadeKeyguardBlueprint(m1489$$Nest$maccessibilityActionsSection, new DefaultIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationAreaViewModel(), (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1536$$Nest$mdefaultDeviceEntrySection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mdefaultShortcutsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1535$$Nest$mdefaultAmbientIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl)), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1538$$Nest$mdefaultSettingsPopupMenuSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1540$$Nest$mdefaultStatusViewSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new DefaultStatusBarSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleSysUIComponentImpl)), new SplitShadeNotificationStackScrollLayoutSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), (SharedNotificationContainer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSharedNotificationContainerProvider.get(), (SharedNotificationContainerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerViewModelProvider.get(), (SharedNotificationContainerBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerBinderProvider.get()), new SplitShadeGuidelines(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1503$$Nest$maodNotificationIconsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new AodBurnInSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (KeyguardRootView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardRootViewProvider.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get()), new CommunalTutorialIndicatorSection(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2), new CommunalTutorialIndicatorViewModel((CommunalTutorialInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTutorialInteractorProvider.get(), (KeyguardBottomAreaInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaInteractorProvider.get()), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get()), (ClockSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.clockSectionProvider.get(), (SmartspaceSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.smartspaceSectionProvider.get(), new SplitShadeMediaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get()));
                case 832:
                    return new ThreadAssert();
                case 833:
                    return new DeviceEntryHapticsInteractor((DeviceEntrySourceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySourceInteractorProvider.get(), (DeviceEntryFingerprintAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider.get(), (DeviceEntryBiometricAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricAuthInteractorProvider.get(), (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (KeyEventInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyEventInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (BiometricUnlockLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockLoggerProvider.get());
                case 834:
                    return new DeviceEntryBiometricAuthInteractor((BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFaceAuthInteractorInstanceProvider.get());
                case 835:
                    return new KeyEventInteractor((KeyEventRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyEventRepositoryImplProvider.get());
                case 836:
                    return new KeyEventRepositoryImpl((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get());
                case 837:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$33
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 838:
                    return new SceneContainerOcclusionInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (KeyguardOcclusionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionInteractorProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get());
                case 839:
                    CoroutineScope coroutineScope2 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    KeyguardOcclusionRepository keyguardOcclusionRepository = (KeyguardOcclusionRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardOcclusionRepositoryProvider.get();
                    PowerInteractor powerInteractor = (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get();
                    KeyguardTransitionInteractor keyguardTransitionInteractor4 = (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get();
                    InternalKeyguardTransitionInteractor internalKeyguardTransitionInteractor = (InternalKeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internalKeyguardTransitionInteractorProvider.get();
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider);
                    return new KeyguardOcclusionInteractor(coroutineScope2, keyguardOcclusionRepository, powerInteractor, keyguardTransitionInteractor4, internalKeyguardTransitionInteractor, keyguardInteractor2);
                case 840:
                    return new KeyguardOcclusionRepository();
                case 841:
                    return new InternalKeyguardTransitionInteractor((KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get());
                case 842:
                    return DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1662$$Nest$msetOfComposableLockscreenSceneBlueprint(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                case 843:
                    return new CatwalkKeyguardBlueprint(new StatusBarSection(new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleSysUIComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider)), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockSection(), Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1561$$Nest$mgoogleAmbientIndicationSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl)), new BottomAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordancesCombinedViewModel(), (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationAreaViewModel(), (KeyguardQuickAffordanceViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceViewBinderProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1669$$Nest$msettingsMenuSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1702$$Nest$mtopAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotificationSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionProvider.get(), new WarpAreaSection(new WarpComposableViewModel(new WarpLockScreenInteractor((WarpLockscreenRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.warpLockscreenRepositoryProvider.get()))), (StrideAreaSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.strideAreaSectionProvider.get());
                case 844:
                    return new NotificationSection(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider35.get(), (AodBurnInViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodBurnInViewModelProvider.get(), (SharedNotificationContainer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSharedNotificationContainerProvider.get(), (SharedNotificationContainerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerViewModelProvider.get(), (NotificationStackScrollLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider.get(), (SharedNotificationContainerBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerBinderProvider.get(), (KeyguardRootViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRootViewModelProvider.get(), (ConfigurationState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationStateProvider.get(), (StatusBarIconViewBindingFailureTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconViewBindingFailureTrackerProvider.get(), (NotificationIconContainerAlwaysOnDisplayViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationIconContainerAlwaysOnDisplayViewModelProvider.get(), new AlwaysOnDisplayNotificationIconViewStore((NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemBarUtilsState(), (KeyguardClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider.get());
                case 845:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 846:
                    return new WarpLockscreenRepository((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 847:
                    return new StrideAreaSection(new StrideComposableViewModel(new StrideLockscreenInteractor((StrideLockscreenRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.strideLockscreenRepositoryProvider.get())));
                case 848:
                    return new StrideLockscreenRepository((ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider));
                case 849:
                    return new DefaultBlueprint(new StatusBarSection(new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleSysUIComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider)), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockSection(), Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1561$$Nest$mgoogleAmbientIndicationSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl)), new BottomAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordancesCombinedViewModel(), (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationAreaViewModel(), (KeyguardQuickAffordanceViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceViewBinderProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1669$$Nest$msettingsMenuSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1702$$Nest$mtopAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotificationSection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionProvider.get());
                case 850:
                    return new DeviceEntryUnlockTrackerViewBinderGoogle((DeviceEntryUnlockTrackerInteractorGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUnlockTrackerInteractorGoogleProvider.get());
                case 851:
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    KeyguardManager keyguardManager = (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get();
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get();
                    BiometricManager biometricManager = (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get();
                    DeviceEntryUnlockTrackerRepositoryGoogle deviceEntryUnlockTrackerRepositoryGoogle = (DeviceEntryUnlockTrackerRepositoryGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUnlockTrackerRepositoryGoogleProvider.get();
                    ArrayList arrayList = new ArrayList(1);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    Context context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context;
                    LatencyTracker latencyTracker = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideLatencyTrackerProvider.get();
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    FingerprintPropertyRepository fingerprintPropertyRepository = (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get();
                    KeyguardUnlockAnimationController keyguardUnlockAnimationController = (KeyguardUnlockAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider.get();
                    Set of = SetsKt.setOf(new BiometricUnlockTrackerImpl(BiometricSourceType.FACE, context5, latencyTracker, new DeviceEntryUnlockStateMachine(), sysuiStatusBarStateController, fingerprintPropertyRepository, keyguardUnlockAnimationController), new BiometricUnlockTrackerImpl(BiometricSourceType.FINGERPRINT, context5, latencyTracker, new DeviceEntryUnlockStateMachine(), sysuiStatusBarStateController, fingerprintPropertyRepository, keyguardUnlockAnimationController));
                    Preconditions.checkNotNullFromProvides(of);
                    Set set = of;
                    Iterator it = set.iterator();
                    while (it.hasNext()) {
                        Preconditions.checkNotNull(it.next(), "Set contributions cannot be null");
                    }
                    arrayList.addAll(set);
                    return new DeviceEntryUnlockTrackerInteractorGoogle(coroutineDispatcher, keyguardManager, keyguardUpdateMonitor, biometricManager, deviceEntryUnlockTrackerRepositoryGoogle, arrayList.isEmpty() ? Collections.emptySet() : arrayList.size() == 1 ? Collections.singleton(arrayList.get(0)) : Collections.unmodifiableSet(new HashSet(arrayList)));
                case 852:
                    return new DeviceEntryUnlockTrackerRepositoryGoogle((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get(), (KeyguardUnlockAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider.get());
                case 853:
                    return new BiometricUnlockInteractor((KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get());
                case 854:
                    NotificationShadeWindowView notificationShadeWindowView = (NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get();
                    ScrimLogger scrimLogger = new ScrimLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideScrimLogBufferProvider.get());
                    LightRevealScrim lightRevealScrim = (LightRevealScrim) notificationShadeWindowView.requireViewById(R.id.light_reveal_scrim);
                    lightRevealScrim.scrimLogger = scrimLogger;
                    return lightRevealScrim;
                case 855:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(100, "ScrimLog");
                case 856:
                    return new AuthRippleInteractor((DeviceEntrySourceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySourceInteractorProvider.get(), (DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get());
                case 857:
                    return (AuthRippleView) ((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get()).requireViewById(R.id.auth_ripple);
                case 858:
                    return new EmptyLockIconViewController(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardRootViewProvider));
                case 859:
                    SysUICoroutinesModule sysUICoroutinesModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule;
                    return (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiBgDispatcherProvider.get();
                case 860:
                    SysUICoroutinesModule sysUICoroutinesModule2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule;
                    return ExecutorsKt.from((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get());
                case 861:
                    return new WidgetInteractionHandler((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiBgCoroutineContextProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (CommunalSceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneInteractorProvider.get(), (WidgetTrampolineInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.widgetTrampolineInteractorProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                case 862:
                    return new WidgetTrampolineInteractor((ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (TaskStackChangeListeners) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideTaskStackChangeListenersProvider.get(), (UsageStatsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.usageStatsInteractorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamManager(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                case 863:
                    SharedLibraryModule sharedLibraryModule = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedLibraryModule;
                    TaskStackChangeListeners taskStackChangeListeners = TaskStackChangeListeners.INSTANCE;
                    Preconditions.checkNotNullFromProvides(taskStackChangeListeners);
                    return taskStackChangeListeners;
                case 864:
                    return new UsageStatsInteractor((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (UsageStatsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.usageStatsRepositoryImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 865:
                    return new UsageStatsRepositoryImpl((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (UsageStatsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUsageStatsManagerProvider.get());
                case 866:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$35(this);
                case 867:
                    return new GoneScene(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider35.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$36) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider37.get());
                case 868:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$36(this);
                case 869:
                    return new LockscreenScene((LockscreenUserActionsViewModel.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider38.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLockscreenContentProvider));
                case 870:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$37(this);
                case 871:
                    return new LockscreenContent((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$33) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider34.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1662$$Nest$msetOfComposableLockscreenSceneBlueprint(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider.get());
                case 872:
                    return new QuickSettingsScene(new NotificationsShadeSessionModule$provideShadeSession$1((SessionStorage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSessionStorageProvider.get()), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider35.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$38) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider39.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$39) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider42.get(), (TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider27.get(), (BatteryMeterViewController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider43.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (MediaCarouselController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQSMediaHostProvider.get());
                case 873:
                    return new SessionStorage();
                case 874:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$38(this);
                case 875:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$39
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 876:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 877:
                    return new BrightnessMirrorShowingInteractor((BrightnessMirrorShowingRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightnessMirrorShowingRepositoryProvider.get());
                case 878:
                    return new BrightnessMirrorShowingRepository();
                case 879:
                    return new DaggerSysUIGoogleGlobalRootComponent$WindowRootViewComponentFactory(this);
                case 880:
                    return new PrivacyChipInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (PrivacyChipRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyChipRepositoryImplProvider.get(), (PrivacyDialogController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDialogControllerProvider.get(), (PrivacyDialogControllerV2) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDialogControllerV2Provider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get());
                case 881:
                    return new PrivacyChipRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (PrivacyConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyConfigProvider.get(), (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (SafetyCenterManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSafetyCenterManagerProvider.get());
                case 882:
                    return new ShadeHeaderClockInteractor((ShadeHeaderClockRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderClockRepositoryProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 883:
                    return new ShadeHeaderClockRepository((NextAlarmController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nextAlarmControllerImplProvider.get());
                case 884:
                    return new BatteryMeterViewController.Factory((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGlobalConfigurationControllerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                case 885:
                    return new ShadeScene(new NotificationsShadeSessionModule$provideShadeSession$1((SessionStorage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeSessionStorageProvider.get()), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$42) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider44.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$43) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider45.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider35.get(), (TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider27.get(), (BatteryMeterViewController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider43.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (MediaCarouselController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQuickQSMediaHostProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQSMediaHostProvider.get());
                case 886:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$42(this);
                case 887:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$43
                        public final /* synthetic */ DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider this$0;
                    };
                case 888:
                    SetBuilder setBuilder = new SetBuilder(3);
                    EmptySet emptySet = EmptySet.INSTANCE;
                    Preconditions.checkNotNullFromProvides(emptySet);
                    setBuilder.addAll(emptySet);
                    setBuilder.add((Overlay) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsShadeOverlayProvider.get());
                    setBuilder.add((Overlay) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsShadeOverlayProvider.get());
                    return setBuilder.build();
                case 889:
                    return new QuickSettingsShadeOverlay((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$44) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider56.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$55) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider57.get(), (TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider27.get(), (BatteryMeterViewController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider43.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get());
                case 890:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$44(this);
                case 891:
                    return new QuickSettingsContainerViewModel((BrightnessSliderViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightnessSliderViewModelProvider.get(), (TileGridViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileGridViewModelProvider.get(), (EditModeViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.editModeViewModelProvider.get(), (QuickQuickSettingsViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickQuickSettingsViewModelProvider.get());
                case 892:
                    return new BrightnessSliderViewModel((ScreenBrightnessInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenBrightnessInteractorProvider.get(), (BrightnessPolicyEnforcementInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightnessPolicyEnforcementInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 893:
                    return new ScreenBrightnessInteractor((ScreenBrightnessDisplayManagerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenBrightnessDisplayManagerRepositoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBrightnessTableLogProvider.get());
                case 894:
                    return new ScreenBrightnessDisplayManagerRepository(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId(), (DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBrightnessLogProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBrightnessTableLogProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get());
                case 895:
                    return LogBufferFactory.create$default((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get(), "BrightnessLog", 50, false, 12);
                case 896:
                    return ((TableLogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider.get()).create(50, "BrightnessTableLog");
                case 897:
                    return new BrightnessPolicyEnforcementInteractor((BrightnessPolicyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightnessPolicyRepositoryImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 898:
                    return new BrightnessPolicyRepositoryImpl((UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), new UserRestrictionChecker(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 899:
                    return new TileGridViewModel((GridLayoutTypeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gridLayoutTypeInteractorProvider.get(), MapsKt.toMap(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOfPairOfGridLayoutTypeAndGridLayout()), (CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.paginatedGridLayout(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get9() {
            Provider provider;
            Provider provider2;
            Provider provider3;
            Provider provider4;
            Provider provider5;
            Provider provider6;
            Provider provider7;
            Provider provider8;
            Provider provider9;
            DelegateFactory delegateFactory;
            Provider provider10;
            Provider provider11;
            Provider provider12;
            Provider provider13;
            Provider provider14;
            Provider provider15;
            Provider provider16;
            GlobalSettingsImpl globalSettingsImpl;
            Provider provider17;
            Provider provider18;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider;
            Provider provider19;
            Provider provider20;
            Provider provider21;
            Provider provider22;
            Context context;
            Provider provider23;
            Provider provider24;
            Provider provider25;
            Provider provider26;
            Provider provider27;
            Provider provider28;
            DelegateFactory delegateFactory2;
            Provider provider29;
            Provider provider30;
            Provider provider31;
            DelegateFactory delegateFactory3;
            DelegateFactory delegateFactory4;
            Provider provider32;
            InternetTileDataInteractor internetTileDataInteractor;
            Provider provider33;
            UiModeNightTileDataInteractor uiModeNightTileDataInteractor;
            Provider provider34;
            Provider provider35;
            Provider provider36;
            DelegateFactory delegateFactory5;
            Provider provider37;
            Context context2;
            Provider provider38;
            DelegateFactory delegateFactory6;
            Provider provider39;
            DelegateFactory delegateFactory7;
            Provider provider40;
            Provider provider41;
            Provider provider42;
            Provider provider43;
            Provider provider44;
            SwitchingProvider switchingProvider2;
            Provider provider45;
            Provider provider46;
            SwitchingProvider switchingProvider3;
            Context context3;
            DelegateFactory delegateFactory8;
            Provider provider47;
            SwitchingProvider switchingProvider4;
            Provider provider48;
            DelegateFactory delegateFactory9;
            DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider5;
            Provider provider49;
            Context context4;
            DelegateFactory delegateFactory10;
            SwitchingProvider switchingProvider6;
            SwitchingProvider switchingProvider7;
            DelegateFactory delegateFactory11;
            Provider provider50;
            Provider provider51;
            Provider provider52;
            DelegateFactory delegateFactory12;
            Provider provider53;
            DelegateFactory delegateFactory13;
            DeviceStateRotationLockSettingsManager deviceStateRotationLockSettingsManager;
            Context unused;
            StubQSTileViewModel stubQSTileViewModel = StubQSTileViewModel.INSTANCE;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 900:
                    provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gridLayoutTypeRepositoryImplProvider;
                    return new GridLayoutTypeInteractor((GridLayoutTypeRepositoryImpl) provider.get());
                case 901:
                    return new GridLayoutTypeRepositoryImpl();
                case 902:
                    return new InfiniteGridLayout((IconTilesViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconTilesViewModelImplProvider.get(), (FixedColumnsSizeViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fixedColumnsSizeViewModelImplProvider.get());
                case 903:
                    provider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconTilesInteractorProvider;
                    return new IconTilesViewModelImpl((IconTilesInteractor) provider2.get());
                case 904:
                    DefaultLargeTilesRepositoryImpl defaultLargeTilesRepositoryImpl = (DefaultLargeTilesRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultLargeTilesRepositoryImplProvider.get();
                    CurrentTilesInteractor currentTilesInteractor = (CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get();
                    QSPreferencesInteractor qSPreferencesInteractor = (QSPreferencesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPreferencesInteractorProvider.get();
                    LogBuffer logBuffer = (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesPanelsLogProvider.get();
                    provider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new IconTilesInteractor(defaultLargeTilesRepositoryImpl, currentTilesInteractor, qSPreferencesInteractor, logBuffer, (CoroutineScope) provider3.get());
                case 905:
                    return new DefaultLargeTilesRepositoryImpl();
                case 906:
                    provider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileSpecSettingsRepositoryProvider;
                    TileSpecSettingsRepository tileSpecSettingsRepository = (TileSpecSettingsRepository) provider4.get();
                    InstalledTilesComponentRepository installedTilesComponentRepository = (InstalledTilesComponentRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.installedTilesComponentRepositoryImplProvider.get();
                    provider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider;
                    UserRepositoryImpl userRepositoryImpl = (UserRepositoryImpl) provider5.get();
                    provider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.minimumTilesResourceRepositoryProvider;
                    MinimumTilesResourceRepository minimumTilesResourceRepository = (MinimumTilesResourceRepository) provider6.get();
                    RetailModeSettingsRepository retailModeSettingsRepository = (RetailModeSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.retailModeSettingsRepositoryProvider.get();
                    CustomTileStatePersisterImpl customTileStatePersisterImpl = new CustomTileStatePersisterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context);
                    provider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newQSTileFactoryProvider;
                    Lazy lazy = DoubleCheck.lazy(provider7);
                    QSFactory qSFactory = (QSFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFactoryImplProvider.get();
                    provider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.customTileAddedSharedPrefsRepositoryProvider;
                    CustomTileAddedRepository customTileAddedRepository = (CustomTileAddedRepository) provider8.get();
                    provider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider52;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52) provider9.get();
                    delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker = (UserTracker) delegateFactory.get();
                    provider10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) provider10.get();
                    provider11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) provider11.get();
                    provider12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new CurrentTilesInteractorImpl(tileSpecSettingsRepository, installedTilesComponentRepository, userRepositoryImpl, minimumTilesResourceRepository, retailModeSettingsRepository, customTileStatePersisterImpl, lazy, qSFactory, customTileAddedRepository, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52, userTracker, coroutineDispatcher, coroutineDispatcher2, (CoroutineScope) provider12.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1649$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get());
                case 907:
                    Resources m977$$Nest$mmainResources = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    QSPipelineLogger m1649$$Nest$mqSPipelineLogger = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1649$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    RetailModeSettingsRepository retailModeSettingsRepository2 = (RetailModeSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.retailModeSettingsRepositoryProvider.get();
                    provider13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider46;
                    return new TileSpecSettingsRepository(m977$$Nest$mmainResources, m1649$$Nest$mqSPipelineLogger, retailModeSettingsRepository2, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$45) provider13.get());
                case 908:
                    provider14 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return QSPipelineModule_Companion_ProvideQSTileListLogBufferFactory.provideQSTileListLogBuffer((LogBufferFactory) provider14.get());
                case 909:
                    provider15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return QSAutoAddModule_Companion_ProvideQSAutoAddLogBufferFactory.provideQSAutoAddLogBuffer((LogBufferFactory) provider15.get());
                case 910:
                    provider16 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    return QSPipelineModule_Companion_ProvidesQSRestoreLogBufferFactory.providesQSRestoreLogBuffer((LogBufferFactory) provider16.get());
                case 911:
                    globalSettingsImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    provider17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) provider17.get();
                    provider18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    return new RetailModeSettingsRepository(globalSettingsImpl, coroutineDispatcher3, (CoroutineScope) provider18.get());
                case 912:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$45(this);
                case 913:
                    return new DefaultTilesQSHostRepository(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 914:
                    switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider;
                    Context context5 = (Context) switchingProvider.get();
                    provider19 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider;
                    return new InstalledTilesComponentRepositoryImpl(context5, (CoroutineScope) provider19.get(), (PackageChangeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeRepositoryImplProvider.get());
                case 915:
                    return new MinimumTilesResourceRepository(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 916:
                    provider20 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider47;
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1600$$Nest$mmapOfStringAndProviderOfQSTileViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1650$$Nest$mqSTileViewModelFactoryComponent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    throw new IllegalStateException("New code path not supported when com.android.systemui.qs_new_tiles is disabled.");
                case 917:
                    Map m1602$$Nest$mmapOfStringAndQSTileConfig = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1602$$Nest$mmapOfStringAndQSTileConfig(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider21 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider;
                    return new QSTileConfigProviderImpl(m1602$$Nest$mmapOfStringAndQSTileConfig, (QsEventLoggerImpl) provider21.get());
                case 918:
                    provider22 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new QsEventLoggerImpl((UiEventLogger) provider22.get());
                case 919:
                    return new Object(this) { // from class: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$46
                    };
                case 920:
                    CurrentTilesInteractor currentTilesInteractor2 = (CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get();
                    context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider23 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.builderProvider2;
                    TileServiceRequestController.Builder builder = (TileServiceRequestController.Builder) provider23.get();
                    provider24 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope = (CoroutineScope) provider24.get();
                    provider25 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider;
                    return new QSHostAdapter(currentTilesInteractor2, context, builder, coroutineScope, (DumpManager) provider25.get());
                case 921:
                    provider26 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider;
                    CommandQueue commandQueue = (CommandQueue) provider26.get();
                    provider27 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider;
                    CommandRegistry commandRegistry = (CommandRegistry) provider27.get();
                    provider28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIUriGrantsManagerProvider;
                    return new TileServiceRequestController.Builder(commandQueue, commandRegistry, (IUriGrantsManager) provider28.get());
                case 922:
                    return ConnectivityModule_Companion_ProvideAirplaneModeTileViewModelFactory.provideAirplaneModeTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1679$$Nest$mstaticOfAirplaneModeTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1491$$Nest$mairplaneModeMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1492$$Nest$mairplaneModeTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1493$$Nest$mairplaneModeTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 923:
                    unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter = (ActivityStarter) delegateFactory2.get();
                    RestrictedLockProxy m1654$$Nest$mrestrictedLockProxy = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1654$$Nest$mrestrictedLockProxy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    provider29 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new DisabledByPolicyInteractorImpl(activityStarter, m1654$$Nest$mrestrictedLockProxy, (CoroutineDispatcher) provider29.get());
                case 924:
                    provider30 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider;
                    return new QSTileAnalytics((UiEventLogger) provider30.get());
                case 925:
                    Map provideQuickSettingsTilesLogBufferCache = LogModule_ProvideQuickSettingsTilesLogBufferCacheFactory.provideQuickSettingsTilesLogBufferCache();
                    provider31 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider;
                    LogBufferFactory logBufferFactory = (LogBufferFactory) provider31.get();
                    delegateFactory3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider;
                    return new QSTileLogger(provideQuickSettingsTilesLogBufferCache, logBufferFactory, (StatusBarStateController) delegateFactory3.get());
                case 926:
                    delegateFactory4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter2 = (ActivityStarter) delegateFactory4.get();
                    provider32 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider;
                    return new QSTileIntentUserInputHandlerImpl(activityStarter2, (PackageManager) provider32.get(), new UserHandle(UserHandle.myUserId()));
                case 927:
                    return ConnectivityModule_Companion_ProvideDataSaverTileViewModelFactory.provideDataSaverTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1683$$Nest$mstaticOfDataSaverTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1532$$Nest$mdataSaverTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1531$$Nest$mdataSaverTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1533$$Nest$mdataSaverTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 928:
                    return StatusBarPolicyModule_ProvideDataSaverControllerFactory.provideDataSaverController((NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get());
                case 929:
                    QSTileViewModelFactory$Static m1686$$Nest$mstaticOfInternetTileModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1686$$Nest$mstaticOfInternetTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    InternetTileMapper m1571$$Nest$minternetTileMapper = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1571$$Nest$minternetTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    internetTileDataInteractor = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internetTileDataInteractor();
                    return ConnectivityModule_Companion_ProvideInternetTileViewModelFactory.provideInternetTileViewModel(m1686$$Nest$mstaticOfInternetTileModel, m1571$$Nest$minternetTileMapper, internetTileDataInteractor, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1572$$Nest$minternetTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 930:
                    provider33 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider;
                    return new EthernetInteractor((ConnectivityRepositoryImpl) provider33.get());
                case 931:
                    return PolicyModule_Companion_ProvideFlashlightTileViewModelFactory.provideFlashlightTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1684$$Nest$mstaticOfFlashlightTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1553$$Nest$mflashlightMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1554$$Nest$mflashlightTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1555$$Nest$mflashlightTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 932:
                    return PolicyModule_Companion_ProvideLocationTileViewModelFactory.provideLocationTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1688$$Nest$mstaticOfLocationTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1589$$Nest$mlocationTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1588$$Nest$mlocationTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1590$$Nest$mlocationTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 933:
                    return PolicyModule_Companion_ProvideAlarmTileViewModelFactory.provideAlarmTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1680$$Nest$mstaticOfAlarmTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1495$$Nest$malarmTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1494$$Nest$malarmTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1496$$Nest$malarmTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 934:
                    QSTileViewModelFactory$Static m1693$$Nest$mstaticOfUiModeNightTileModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1693$$Nest$mstaticOfUiModeNightTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    UiModeNightTileMapper m1704$$Nest$muiModeNightTileMapper = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1704$$Nest$muiModeNightTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    uiModeNightTileDataInteractor = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiModeNightTileDataInteractor();
                    return PolicyModule_Companion_ProvideUiModeNightTileViewModelFactory.provideUiModeNightTileViewModel(m1693$$Nest$mstaticOfUiModeNightTileModel, m1704$$Nest$muiModeNightTileMapper, uiModeNightTileDataInteractor, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1705$$Nest$muiModeNightTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 935:
                    return PolicyModule_Companion_ProvideWorkModeTileViewModelFactory.provideWorkModeTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1694$$Nest$mstaticOfWorkModeTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1717$$Nest$mworkModeTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1716$$Nest$mworkModeTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1718$$Nest$mworkModeTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 936:
                    return PolicyModule_Companion_ProvideCameraToggleTileViewModelFactory.provideCameraToggleTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1692$$Nest$mstaticOfSensorPrivacyToggleTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$47) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider48.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$48) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider49.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$49) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider50.get());
                case 937:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$47(this);
                case 938:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$48(this);
                case 939:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$49(this);
                case 940:
                    return PolicyModule_Companion_ProvideMicrophoneToggleTileViewModelFactory.provideMicrophoneToggleTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1692$$Nest$mstaticOfSensorPrivacyToggleTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$47) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider48.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$48) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider49.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$49) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider50.get());
                case 941:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1689$$Nest$mstaticOfModesTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl);
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme();
                    Context context6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context;
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeInteractor();
                    provider34 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modesTileUserActionInteractorProvider;
                    return stubQSTileViewModel;
                case 942:
                    provider35 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileIntentUserInputHandlerImplProvider;
                    return new ModesTileUserActionInteractor((QSTileIntentUserInputHandlerImpl) provider35.get(), (ModesDialogDelegate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modesDialogDelegateProvider.get());
                case 943:
                    SystemUIDialogFactory systemUIDialogFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogFactory();
                    provider36 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    DialogTransitionAnimator dialogTransitionAnimator = (DialogTransitionAnimator) provider36.get();
                    delegateFactory5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter3 = (ActivityStarter) delegateFactory5.get();
                    provider37 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modesDialogViewModelProvider;
                    return new ModesDialogDelegate(systemUIDialogFactory, dialogTransitionAnimator, activityStarter3, provider37, new ModesDialogEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get()), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainCoroutineContextProvider.get());
                case 944:
                    context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ZenModeInteractor zenModeInteractor = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeInteractor();
                    provider38 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    return new ModesDialogViewModel(context2, zenModeInteractor, (CoroutineDispatcher) provider38.get(), (ModesDialogDelegate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modesDialogDelegateProvider.get(), new ModesDialogEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get()));
                case 945:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1690$$Nest$mstaticOfQRCodeScannerTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1645$$Nest$mqRCodeScannerTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qRCodeScannerTileDataInteractor();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1646$$Nest$mqRCodeScannerTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    return stubQSTileViewModel;
                case 946:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1687$$Nest$mstaticOfIssueRecordingModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1574$$Nest$missueRecordingMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1573$$Nest$missueRecordingDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1575$$Nest$missueRecordingUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    return stubQSTileViewModel;
                case 947:
                    delegateFactory6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker2 = (UserTracker) delegateFactory6.get();
                    provider39 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider;
                    return new IssueRecordingState(userTracker2, (UserFileManager) provider39.get());
                case 948:
                    delegateFactory7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider;
                    return new PanelInteractorImpl((ShadeController) delegateFactory7.get());
                case 949:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$50(this);
                case 950:
                    provider40 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider;
                    return new TraceurMessageSender((Looper) provider40.get());
                case 951:
                    return ScreenRecordModule_Companion_ProvideScreenRecordTileViewModelFactory.provideScreenRecordTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1691$$Nest$mstaticOfScreenRecordModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1658$$Nest$mscreenRecordTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1657$$Nest$mscreenRecordTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1659$$Nest$mscreenRecordTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 952:
                    provider41 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext = (CoroutineContext) provider41.get();
                    provider42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider;
                    return new ScreenRecordRepositoryImpl(coroutineContext, (RecordingController) provider42.get());
                case 953:
                    return QSAccessibilityModule_Companion_ProvideColorCorrectionTileViewModelFactory.provideColorCorrectionTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1681$$Nest$mstaticOfColorCorrectionTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1522$$Nest$mcolorCorrectionTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1521$$Nest$mcolorCorrectionTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1523$$Nest$mcolorCorrectionUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 954:
                    provider43 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext2 = (CoroutineContext) provider43.get();
                    provider44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope2 = (CoroutineScope) provider44.get();
                    switchingProvider2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new ColorCorrectionRepositoryImpl((SecureSettings) switchingProvider2.get(), coroutineContext2, coroutineScope2);
                case 955:
                    return QSAccessibilityModule_Companion_ProvideColorInversionTileViewModelFactory.provideColorInversionTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1682$$Nest$mstaticOfColorInversionTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1525$$Nest$mcolorInversionTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1524$$Nest$mcolorInversionTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1526$$Nest$mcolorInversionUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 956:
                    provider45 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider;
                    CoroutineContext coroutineContext3 = (CoroutineContext) provider45.get();
                    provider46 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope3 = (CoroutineScope) provider46.get();
                    switchingProvider3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new ColorInversionRepositoryImpl((SecureSettings) switchingProvider3.get(), coroutineContext3, coroutineScope3);
                case 957:
                    QSTileViewModelFactory$Static m1685$$Nest$mstaticOfFontScalingTileModel = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1685$$Nest$mstaticOfFontScalingTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    FontScalingTileMapper m1556$$Nest$mfontScalingTileMapper = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1556$$Nest$mfontScalingTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    return m1685$$Nest$mstaticOfFontScalingTileModel.create(TileSpec.Companion.create("font_scaling"), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1557$$Nest$mfontScalingTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new FontScalingTileDataInteractor(), m1556$$Nest$mfontScalingTileMapper);
                case 958:
                    context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    delegateFactory8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    SystemUIDialog.Factory factory = (SystemUIDialog.Factory) delegateFactory8.get();
                    provider47 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider;
                    LayoutInflater layoutInflater = (LayoutInflater) provider47.get();
                    SystemSettingsImpl m1700$$Nest$msystemSettingsImpl = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1700$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    switchingProvider4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    SecureSettings secureSettings = (SecureSettings) switchingProvider4.get();
                    provider48 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider;
                    SystemClock systemClock = (SystemClock) provider48.get();
                    delegateFactory9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker3 = (UserTracker) delegateFactory9.get();
                    switchingProvider5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    Handler handler = (Handler) switchingProvider5.get();
                    provider49 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider;
                    return new FontScalingDialogDelegate(context3, factory, layoutInflater, m1700$$Nest$msystemSettingsImpl, secureSettings, systemClock, userTracker3, handler, (DelayableExecutor) provider49.get());
                case 959:
                    new QSTileViewModelFactory$Static((DisabledByPolicyInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disabledByPolicyInteractorImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (QSTileAnalytics) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileAnalyticsProvider.get(), (QSTileLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileLoggerProvider.get(), (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiBgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileCoroutineScopeFactory());
                    new ReduceBrightColorsTileMapper(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme());
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsTileDataInteractor();
                    new ReduceBrightColorsTileUserActionInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), (QSTileIntentUserInputHandlerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileIntentUserInputHandlerImplProvider.get(), (ReduceBrightColorsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsControllerImplProvider.get(), (ExtraDimDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extraDimDialogManagerProvider.get());
                    return stubQSTileViewModel;
                case 960:
                    context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return Boolean.valueOf(ColorDisplayManager.isReduceBrightColorsAvailable(context4));
                case 961:
                    delegateFactory10 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    UserTracker userTracker4 = (UserTracker) delegateFactory10.get();
                    switchingProvider6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider;
                    Handler handler2 = (Handler) switchingProvider6.get();
                    ColorDisplayManager colorDisplayManager = (ColorDisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideColorDisplayManagerProvider.get();
                    switchingProvider7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider;
                    return new ReduceBrightColorsControllerImpl(userTracker4, handler2, colorDisplayManager, (SecureSettings) switchingProvider7.get());
                case 962:
                    SwitchingProvider switchingProvider8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extraDimDialogDelegateProvider;
                    delegateFactory11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider;
                    ActivityStarter activityStarter4 = (ActivityStarter) delegateFactory11.get();
                    provider50 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider;
                    return new ExtraDimDialogManager(switchingProvider8, activityStarter4, (DialogTransitionAnimator) provider50.get());
                case 963:
                    Context context7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    provider51 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider;
                    CoroutineScope coroutineScope4 = (CoroutineScope) provider51.get();
                    provider52 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider;
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) provider52.get();
                    delegateFactory12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6;
                    SystemUIDialog.Factory factory2 = (SystemUIDialog.Factory) delegateFactory12.get();
                    provider53 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider;
                    AccessibilityManager accessibilityManager = (AccessibilityManager) provider53.get();
                    delegateFactory13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider;
                    return new ExtraDimDialogDelegate(context7, coroutineScope4, coroutineDispatcher4, factory2, accessibilityManager, (UserTracker) delegateFactory13.get());
                case 964:
                    new QSTileViewModelFactory$Static((DisabledByPolicyInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disabledByPolicyInteractorImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (QSTileAnalytics) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileAnalyticsProvider.get(), (QSTileLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileLoggerProvider.get(), (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiBgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileCoroutineScopeFactory());
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl);
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme();
                    new OneHandedModeTileUserActionInteractor((OneHandedModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.oneHandedModeRepositoryImplProvider.get(), (QSTileIntentUserInputHandlerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileIntentUserInputHandlerImplProvider.get());
                    return stubQSTileViewModel;
                case 965:
                    return new OneHandedModeRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 966:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileCoroutineScopeFactory();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl);
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dateFormatUtil();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nightDisplayRepository();
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nightDisplayRepository();
                    return stubQSTileViewModel;
                case 967:
                    QSTileViewModelFactory$Static qSTileViewModelFactory$Static = new QSTileViewModelFactory$Static((DisabledByPolicyInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disabledByPolicyInteractorImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (QSTileAnalytics) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileAnalyticsProvider.get(), (QSTileLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileLoggerProvider.get(), (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiBgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileCoroutineScopeFactory());
                    BatterySaverTileMapper batterySaverTileMapper = new BatterySaverTileMapper(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme());
                    return qSTileViewModelFactory$Static.create(TileSpec.Companion.create("battery"), new BatterySaverTileUserActionInteractor((QSTileIntentUserInputHandlerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileIntentUserInputHandlerImplProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get()), new BatterySaverTileDataInteractorGoogle((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get()), batterySaverTileMapper);
                case 968:
                    QSTileViewModelFactory$Static qSTileViewModelFactory$Static2 = new QSTileViewModelFactory$Static((DisabledByPolicyInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disabledByPolicyInteractorImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (QSTileAnalytics) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileAnalyticsProvider.get(), (QSTileLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileLoggerProvider.get(), (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiBgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileCoroutineScopeFactory());
                    RotationLockTileMapper rotationLockTileMapper = new RotationLockTileMapper(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme(), (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get());
                    return qSTileViewModelFactory$Static2.create(TileSpec.Companion.create("rotation"), new RotationLockTileUserActionInteractor((RotationLockController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rotationLockControllerImplProvider.get(), (QSTileIntentUserInputHandlerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileIntentUserInputHandlerImplProvider.get()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rotationLockTileDataInteractor(), rotationLockTileMapper);
                case 969:
                    RotationPolicyWrapperImpl rotationPolicyWrapperImpl = (RotationPolicyWrapperImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindRotationPolicyWrapperProvider.get();
                    DeviceStateRotationLockSettingController deviceStateRotationLockSettingController = (DeviceStateRotationLockSettingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceStateRotationLockSettingControllerProvider.get();
                    String[] stringArray = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getStringArray(android.R.array.config_primaryCredentialProviderService);
                    Preconditions.checkNotNullFromProvides(stringArray);
                    return new RotationLockControllerImpl(rotationPolicyWrapperImpl, deviceStateRotationLockSettingController, stringArray);
                case 970:
                    return new RotationPolicyWrapperImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 971:
                    return new DeviceStateRotationLockSettingController((RotationPolicyWrapperImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindRotationPolicyWrapperProvider.get(), (DeviceStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDeviceStateManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DeviceStateRotationLockSettingsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAutoRotateSettingsManagerProvider.get(), new DeviceStateRotationLockSettingControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceStateAutoRotationLogBufferProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 972:
                    Context context8 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    synchronized (DeviceStateRotationLockSettingsManager.class) {
                        try {
                            if (DeviceStateRotationLockSettingsManager.sSingleton == null) {
                                Context applicationContext = context8.getApplicationContext();
                                DeviceStateRotationLockSettingsManager.sSingleton = new DeviceStateRotationLockSettingsManager(applicationContext, new AndroidSecureSettings(applicationContext.getContentResolver()));
                            }
                            deviceStateRotationLockSettingsManager = DeviceStateRotationLockSettingsManager.sSingleton;
                        } catch (Throwable th) {
                            throw th;
                        }
                    }
                    Preconditions.checkNotNullFromProvides(deviceStateRotationLockSettingsManager);
                    return deviceStateRotationLockSettingsManager;
                case 973:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(100, "DeviceStateAutoRotationLog");
                case 974:
                    return new CameraAutoRotateRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 975:
                    return new CameraSensorPrivacyRepositoryImpl((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get());
                case 976:
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider);
                    Provider provider54 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider53;
                    MapBuilder mapBuilder = new MapBuilder(32);
                    mapBuilder.contributions.put("internet", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindInternetTileProvider);
                    mapBuilder.contributions.put("dnd", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindDndOrModesTileProvider);
                    mapBuilder.contributions.put("bt", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothTileProvider);
                    mapBuilder.contributions.put("cast", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castTileProvider);
                    mapBuilder.contributions.put("hotspot", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotTileProvider);
                    mapBuilder.contributions.put("airplane", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeTileProvider);
                    mapBuilder.contributions.put("saver", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dataSaverTileProvider);
                    mapBuilder.contributions.put("nfc", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nfcTileProvider);
                    mapBuilder.contributions.put("controls", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceControlsTileProvider);
                    mapBuilder.contributions.put("work", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.workModeTileProvider);
                    mapBuilder.contributions.put("flashlight", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flashlightTileProvider);
                    mapBuilder.contributions.put("location", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationTileProvider);
                    mapBuilder.contributions.put("cameratoggle", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraToggleTileProvider);
                    mapBuilder.contributions.put("mictoggle", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.microphoneToggleTileProvider);
                    mapBuilder.contributions.put("alarm", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alarmTileProvider);
                    mapBuilder.contributions.put("dark", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.uiModeNightTileProvider);
                    mapBuilder.contributions.put("qr_code_scanner", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qRCodeScannerTileProvider);
                    mapBuilder.contributions.put("record_issue", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordIssueTileProvider);
                    mapBuilder.contributions.put("screenrecord", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenRecordTileProvider);
                    mapBuilder.contributions.put("wallet", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickAccessWalletTileProvider);
                    mapBuilder.contributions.put("inversion", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.colorInversionTileProvider);
                    mapBuilder.contributions.put("night", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nightDisplayTileProvider);
                    mapBuilder.contributions.put("reduce_brightness", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsTileProvider);
                    mapBuilder.contributions.put("onehanded", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.oneHandedModeTileProvider);
                    mapBuilder.contributions.put("color_correction", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.colorCorrectionTileProvider);
                    mapBuilder.contributions.put(BcSmartspaceDataPlugin.UI_SURFACE_DREAM, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamTileProvider);
                    mapBuilder.contributions.put("font_scaling", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fontScalingTileProvider);
                    mapBuilder.contributions.put("hearing_devices", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hearingDevicesTileProvider);
                    mapBuilder.contributions.put("battery", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batterySaverTileGoogleProvider);
                    mapBuilder.contributions.put("ott", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayToggleTileProvider);
                    mapBuilder.contributions.put("reverse", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reverseChargingTileProvider);
                    mapBuilder.contributions.put("rotation", daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rotationLockTileGoogleProvider);
                    return new QSFactoryImpl(lazy2, provider54, mapBuilder.build());
                case 977:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$51(this);
                case 978:
                    QSHost qSHost = (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl.SwitchingProvider switchingProvider9 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider;
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get();
                    UserTracker userTracker5 = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    KeyguardStateController keyguardStateController = (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get();
                    CommandQueue commandQueue2 = (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get();
                    StatusBarIconController statusBarIconController = (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get();
                    PanelInteractor panelInteractor = (PanelInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelInteractorImplProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$522 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider52.get();
                    CustomTileAddedRepository customTileAddedRepository2 = (CustomTileAddedRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.customTileAddedSharedPrefsRepositoryProvider.get();
                    return new TileServices(qSHost, switchingProvider9, broadcastDispatcher, userTracker5, keyguardStateController, commandQueue2, statusBarIconController, panelInteractor, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$522, customTileAddedRepository2);
                case 979:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$52(this);
                case 980:
                    return new CustomTileAddedSharedPrefsRepository((UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get());
                case 981:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getClass();
                    QSHost qSHost2 = (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get();
                    QsEventLoggerImpl qsEventLoggerImpl = (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get();
                    Looper looper = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    InternetTile internetTile = new InternetTile(qSHost2, qsEventLoggerImpl, looper, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get(), (AccessPointController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAccessPointControllerImplProvider.get(), (InternetDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internetDialogManagerProvider.get(), (WifiStateWorker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiStateWorkerProvider.get());
                    QSHost qSHost3 = (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get();
                    QsEventLoggerImpl qsEventLoggerImpl2 = (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get();
                    Looper looper2 = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                    return ((FeatureFlagsClassicRelease) ((FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get())).isEnabled(Flags.SIGNAL_CALLBACK_DEPRECATION) ? new InternetTileNewImpl(qSHost3, qsEventLoggerImpl2, looper2, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (InternetTileViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internetTileViewModelProvider.get(), (InternetDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internetDialogManagerProvider.get(), (WifiStateWorker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiStateWorkerProvider.get(), (AccessPointController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAccessPointControllerImplProvider.get()) : internetTile;
                case 982:
                    return new InternetTileViewModel((AirplaneModeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeRepositoryImplProvider.get(), (ConnectivityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider.get(), (EthernetInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ethernetInteractorProvider.get(), (MobileIconsInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsInteractorImplProvider.get(), (WifiInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiInteractorImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 983:
                    return (QSTileImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dndTileProvider.get();
                case 984:
                    QSHost qSHost4 = (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get();
                    QsEventLoggerImpl qsEventLoggerImpl3 = (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get();
                    Looper looper3 = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get();
                    Handler handler3 = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    FalsingManager falsingManager = (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get();
                    MetricsLogger metricsLogger = (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get();
                    StatusBarStateController statusBarStateController = (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    ActivityStarter activityStarter5 = (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get();
                    QSLogger qSLogger = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    ZenModeController zenModeController = (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get();
                    SharedPreferences sharedPreferences = Prefs.get(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                    Preconditions.checkNotNullFromProvides(sharedPreferences);
                    return new DndTile(qSHost4, qsEventLoggerImpl3, looper3, handler3, falsingManager, metricsLogger, statusBarStateController, activityStarter5, qSLogger, zenModeController, sharedPreferences, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get());
                case 985:
                    return new ModesTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get(), new ModesTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeInteractor(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get()), new ModesTileMapper(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.theme()), (ModesTileUserActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modesTileUserActionInteractorProvider.get());
                case 986:
                    return new BluetoothTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (BluetoothControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothControllerImplProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (BluetoothTileDialogViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothTileDialogViewModelProvider.get());
                case 987:
                    return new BluetoothControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (BluetoothLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothLoggerProvider.get(), (BluetoothRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothRepositoryImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get());
                case 988:
                    return new BluetoothLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providerBluetoothLogBufferProvider.get());
                case 989:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "BluetoothLog");
                case 990:
                    return new BluetoothRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get());
                case 991:
                    DeviceItemInteractor deviceItemInteractor = (DeviceItemInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceItemInteractorProvider.get();
                    DeviceItemActionInteractor deviceItemActionInteractor = (DeviceItemActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceItemActionInteractorProvider.get();
                    BluetoothStateInteractor bluetoothStateInteractor = (BluetoothStateInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothStateInteractorProvider.get();
                    BluetoothAutoOnInteractor bluetoothAutoOnInteractor = (BluetoothAutoOnInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothAutoOnInteractorProvider.get();
                    com.android.systemui.bluetooth.qsdialog.AudioSharingInteractor audioSharingInteractor = (com.android.systemui.bluetooth.qsdialog.AudioSharingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.audioSharingInteractorProvider.get();
                    BluetoothDeviceMetadataInteractor bluetoothDeviceMetadataInteractor = (BluetoothDeviceMetadataInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothDeviceMetadataInteractorProvider.get();
                    DialogTransitionAnimator dialogTransitionAnimator2 = (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get();
                    ActivityStarter activityStarter6 = (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get();
                    UiEventLogger uiEventLogger = (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get();
                    CoroutineScope coroutineScope5 = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    SharedPreferences sharedPreferences2 = Prefs.get(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                    Preconditions.checkNotNullFromProvides(sharedPreferences2);
                    return new BluetoothTileDialogViewModel(deviceItemInteractor, deviceItemActionInteractor, bluetoothStateInteractor, bluetoothAutoOnInteractor, audioSharingInteractor, bluetoothDeviceMetadataInteractor, dialogTransitionAnimator2, activityStarter6, uiEventLogger, coroutineScope5, coroutineDispatcher5, coroutineDispatcher6, sharedPreferences2, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$53) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider54.get());
                case 992:
                    return new DeviceItemInteractor((BluetoothTileDialogRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothTileDialogRepositoryProvider.get(), (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1508$$Nest$mbluetoothTileDialogLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 993:
                    return new BluetoothTileDialogRepository((LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get());
                case 994:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "BluetoothTileDialogLog");
                case 995:
                    return new DeviceItemActionInteractor((ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1508$$Nest$mbluetoothTileDialogLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 996:
                    return new BluetoothStateInteractor((LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1508$$Nest$mbluetoothTileDialogLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 997:
                    return new BluetoothAutoOnInteractor((BluetoothAutoOnRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothAutoOnRepositoryProvider.get());
                case 998:
                    return new BluetoothAutoOnRepository((LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 999:
                    return new com.android.systemui.bluetooth.qsdialog.AudioSharingInteractor((LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (BluetoothStateInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothStateInteractorProvider.get(), (DeviceItemInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceItemInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }
    }

    /* renamed from: -$$Nest$massistContentRequester, reason: not valid java name */
    public static com.android.wm.shell.apptoweb.AssistContentRequester m1761$$Nest$massistContentRequester(DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl) {
        return new com.android.wm.shell.apptoweb.AssistContentRequester(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.sysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundExecutorProvider.get());
    }

    /* renamed from: -$$Nest$mfullscreenUnfoldTaskAnimator, reason: not valid java name */
    public static FullscreenUnfoldTaskAnimator m1762$$Nest$mfullscreenUnfoldTaskAnimator(DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl) {
        return new FullscreenUnfoldTaskAnimator(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.sysUIGoogleGlobalRootComponentImpl.context, (UnfoldBackgroundController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldBackgroundControllerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get());
    }

    /* renamed from: -$$Nest$mshellBackgroundThreadMainCoroutineDispatcher, reason: not valid java name */
    public static HandlerContext m1763$$Nest$mshellBackgroundThreadMainCoroutineDispatcher(DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl) {
        Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundHandlerProvider.get();
        int i = HandlerDispatcherKt.$r8$clinit;
        return new HandlerContext(handler, null, false);
    }

    /* renamed from: -$$Nest$mshellMainThreadMainCoroutineDispatcher, reason: not valid java name */
    public static HandlerContext m1764$$Nest$mshellMainThreadMainCoroutineDispatcher(DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl) {
        Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
        int i = HandlerDispatcherKt.$r8$clinit;
        return new HandlerContext(handler, null, false);
    }

    public DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, WMShellCoroutinesModule wMShellCoroutinesModule, HandlerThread handlerThread) {
        this.sysUIGoogleGlobalRootComponentImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl;
        this.setShellMainThread = handlerThread;
        this.wMShellCoroutinesModule = wMShellCoroutinesModule;
        this.provideShellMainHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 5);
        this.provideSysUIMainExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 6);
        this.provideShellMainExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 4);
        this.provideShellInitProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 3);
        this.provideDisplayControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 2);
        this.provideDisplayInsetsControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 8);
        this.provideTransactionPoolProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 9);
        this.provideDisplayImeControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 7);
        this.provideShellCommandHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 11);
        this.provideShellControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 13);
        this.provideSyncTransactionQueueProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 14);
        this.provideShellAnimationExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 16);
        this.provideRootTaskDisplayAreaOrganizerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 17);
        this.provideHomeTransitionObserverProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 18);
        this.provideTransitionsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 15);
        this.dockStateReaderProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 19);
        this.compatUIConfigurationProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 20);
        this.compatUIShellCommandHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 21);
        this.provideCompatUIRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 22);
        this.provideSharedBackgroundHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 27);
        this.provideBackgroundCoroutineScopeProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 26);
        this.provideDesktopPersistentRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 25);
        this.provideApplicationScopeProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 28);
        this.provideDesktopModeTaskRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 24);
        this.provideDesktopTaskRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 23);
        this.provideCompatUIStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 29);
        this.provideCompatUIComponentIdGeneratorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 30);
        this.provideCompatUIComponentFactoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 31);
        this.provideCompatUIStatusManagerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 32);
        this.provideCompatUIControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 12);
        this.provideUnfoldBackgroundControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 37);
        this.provideIconProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 41);
        this.provideGlobalDragListenerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 42);
        this.provideDragAndDropControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 40);
        this.providerTaskStackListenerImplProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 44);
        this.provideTaskStackTransitionObserverProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 45);
        this.provideRecentTasksControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 43);
        this.provideLaunchAdjacentControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 46);
        this.provideShellMainChoreographerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 48);
        this.provideSharedBackgroundExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 49);
        this.provideReturnToDragStartAnimatorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 52);
        this.provideDesktopTasksLimiterProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 54);
        this.provideEnterDesktopModeTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 53);
        this.provideExitDesktopTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 55);
        this.provideDesktopModeDragAndDropTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 56);
        this.provideToggleResizeDesktopTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 57);
        this.provideDragToDesktopTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 58);
        this.provideDesktopModeEventLoggerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 60);
        this.provideDesktopModeLoggerTransitionObserverProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 59);
        this.provideRecentsTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 61);
        this.provideMultiInstanceHelperProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 62);
        this.provideDesktopTasksControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 51);
        this.providesDesktopTasksControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 50);
        this.provideGenericLinksParserProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 63);
        this.provideAppHandleRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 64);
        this.provideActivityOrientationHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 65);
        this.provideWindowDecorViewHostSupplierProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 66);
        this.provideWindowDecorViewModelProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 47);
        this.provideSplitScreenControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 39);
        this.providesSplitScreenControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 38);
        int i = 0;
        SwitchingProvider switchingProvider = new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 36, i);
        this.provideSplitTaskUnfoldAnimatorBaseProvider = switchingProvider;
        this.provideSplitTaskUnfoldAnimatorProvider = DoubleCheck.provider(switchingProvider);
        this.provideShellSplitTaskUnfoldAnimatorProvider = DoubleCheck.provider(this.provideSplitTaskUnfoldAnimatorBaseProvider);
        this.provideUnfoldTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 69);
        this.dynamicOverrideOptionalOfUnfoldTransitionHandlerProvider = new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 68, i);
        this.provideUnfoldTransitionHandlerProvider2 = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 67);
        this.provideUnfoldAnimationControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 35);
        this.dynamicOverrideOptionalOfUnfoldAnimationControllerProvider = new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 34, i);
        this.provideUnfoldControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 33);
        DelegateFactory.setDelegate(this.provideShellTaskOrganizerProvider, DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 10, 0)));
        this.provideBubbleLoggerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 72);
        this.provideBubblePositionerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 73);
        this.provideBubbleEducationProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 74);
        this.provideBubbleDataProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 71);
        this.provideFloatingContentCoordinatorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 75);
        this.provideWindowManagerShellWrapperProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 76);
        this.provideDisplayLayoutProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 78);
        this.provideOneHandedControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 77);
        this.provideTaskViewTransitionsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 79);
        this.provideBubbleControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 70);
        this.provideFullscreenTaskListenerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 80);
        this.provideFreeformTaskListenerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 83);
        this.provideFreeformTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 84);
        this.provideFreeformTaskTransitionObserverProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 85);
        this.provideFreeformComponentsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 82);
        this.provideFreeformComponentsProvider2 = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 81);
        this.providesOneHandedControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 86);
        this.provideHideDisplayCutoutControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 87);
        this.provideActivityEmbeddingControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 88);
        this.providePipSurfaceTransactionHelperProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 94);
        this.providePipAnimationControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 93);
        this.pipDisplayLayoutStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 98);
        this.provideSizeSpecSourceProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 97);
        this.providePipBoundsStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 96);
        this.providePipSnapAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 99);
        this.providePhonePipKeepClearAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 100);
        this.providesPipBoundsAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 95);
        this.providePipTransitionStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 101);
        this.providePipMediaControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 103);
        int i2 = 0;
        this.provideSystemWindowsProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 104, i2));
        this.providePipUiEventLoggerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 105, i2));
        this.providesPipPhoneMenuControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 102, i2));
        this.providePipTransitionProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 92, i2));
        this.providePipPhoneMenuControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 109, i2));
        this.providePipTransitionStateProvider2 = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 110, i2));
        this.providePipSchedulerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 108, i2));
        this.provideSystemPerformanceHinterProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 114, i2));
        this.providePipPerfHintControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 113, i2));
        this.providePipMotionHelperProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 112, i2));
        this.providePipTouchHandlerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 111, i2));
        this.providePipControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 107, i2));
        this.providePipTaskListenerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 115, i2));
        this.providePipUiStateChangeControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 116, i2));
        this.providePipTransitionProvider2 = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 106, i2));
        this.providePipTransitionControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 91, i2));
        this.provideKeyguardTransitionHandlerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 117, i2));
        this.provideMixedTransitionHandlerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 90, i2));
        this.provideMixedTransitionHandlerProvider2 = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 89, i2));
        this.provideSplashScreenExecutorProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 119, i2));
        this.provideStartingWindowTypeAlgorithmProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 120, i2));
        this.provideStartingWindowControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 118, i2));
        this.provideProtoLogControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 121, i2));
        this.provideDesktopTasksTransitionObserverProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 123, i2));
        this.provideAppHandleEducationDatastoreRepositoryProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 126, i2));
        this.provideAppHandleEducationFilterProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 125, i2));
        this.provideAppHandleEducationControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 124, i2));
        this.provideIndependentShellComponentsToCreateProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 122, i2));
        this.provideIndependentShellComponentsToCreateProvider2 = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 1, i2));
        this.provideShellSysuiCallbacksProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 0, i2));
        this.provideOneHandedProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 127, i2));
        this.providePipParamsChangedForwarderProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 133, i2));
        this.providePipTaskOrganizerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 132, i2));
        this.providePipMotionHelperProvider2 = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 134, i2));
        this.providePipTouchHandlerProvider2 = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 131, i2));
        this.providePipAppOpsListenerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 130, i2));
        this.provideDevicePostureControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 136, i2));
        this.provideTabletopModeControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 135, i2));
        this.providePip1Provider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 129, i2));
        this.providePip2Provider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 137, i2));
        this.providePipProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 128, i2));
        this.provideSplitScreenProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 138, i2));
        this.provideBubblesProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 139, i2));
        this.provideTaskViewFactoryControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 141, i2));
        this.provideTaskViewFactoryProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 140, i2));
        this.provideRemoteTransitionsProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 142, i2));
        this.provideKeyguardTransitionsProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 143, i2));
        this.provideStartingSurfaceProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 144, i2));
        this.provideRootDisplayAreaOrganizerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 146, i2));
        this.provideDisplayAreaHelperProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 145, i2));
        this.provideRecentTasksProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 147, i2));
        this.provideBackAnimationBackgroundProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 150, i2));
        this.provideBackAnimationControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 149, i2));
        this.provideBackAnimationProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 148, i2));
        this.provideDesktopModeProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 151, i2));
    }
}
